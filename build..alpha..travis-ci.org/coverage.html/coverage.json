{"/home/travis/build/npmtest/node-npmtest-falcor/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_falcor */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-falcor/lib.npmtest_falcor.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/lib.npmtest_falcor.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_falcor */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_falcor = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_falcor = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-falcor/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-falcor && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_falcor */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_falcor","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_falcor.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_falcor.rollup.js'] =","            local.assetsDict['/assets.npmtest_falcor.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_falcor.__dirname + '/lib.npmtest_falcor.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/index.js","s":{"1":1,"2":0,"3":1,"4":1,"5":0,"6":1,"7":1},"b":{"1":[1,0]},"f":{"1":0},"fnMap":{"1":{"name":"falcor","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":1}},"2":{"start":{"line":4,"column":4},"end":{"line":4,"column":34}},"3":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":29}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":40}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":24}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":0},"end":{"line":7,"column":0}},{"start":{"line":7,"column":0},"end":{"line":7,"column":0}}]}},"code":["\"use strict\";","","function falcor(opts) {","    return new falcor.Model(opts);","}","","if (typeof Promise === \"function\") {","    falcor.Promise = Promise;","} else {","    falcor.Promise = require(\"promise\");","}","","module.exports = falcor;","","falcor.Model = require(\"./Model\");",""],"l":{"3":1,"4":0,"7":1,"8":1,"10":0,"13":1,"15":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/Model.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/Model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":1,"165":0,"166":0,"167":0,"168":1,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":1,"191":0,"192":1,"193":0,"194":1,"195":0,"196":1,"197":0,"198":1,"199":0,"200":1,"201":0,"202":1,"203":0,"204":1,"205":0,"206":1,"207":0,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0,0,0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"(anonymous_1)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":22}}},"2":{"name":"Model","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":18}}},"3":{"name":"set","line":153,"loc":{"start":{"line":153,"column":22},"end":{"line":153,"column":37}}},"4":{"name":"(anonymous_4)","line":156,"loc":{"start":{"line":156,"column":33},"end":{"line":156,"column":45}}},"5":{"name":"preload","line":169,"loc":{"start":{"line":169,"column":26},"end":{"line":169,"column":45}}},"6":{"name":"(anonymous_6)","line":172,"loc":{"start":{"line":172,"column":33},"end":{"line":172,"column":45}}},"7":{"name":"(anonymous_7)","line":178,"loc":{"start":{"line":178,"column":29},"end":{"line":178,"column":43}}},"8":{"name":"(anonymous_8)","line":179,"loc":{"start":{"line":179,"column":52},"end":{"line":179,"column":63}}},"9":{"name":"(anonymous_9)","line":180,"loc":{"start":{"line":180,"column":11},"end":{"line":180,"column":25}}},"10":{"name":"(anonymous_10)","line":182,"loc":{"start":{"line":182,"column":11},"end":{"line":182,"column":22}}},"11":{"name":"_set","line":188,"loc":{"start":{"line":188,"column":23},"end":{"line":188,"column":39}}},"12":{"name":"call","line":214,"loc":{"start":{"line":214,"column":23},"end":{"line":214,"column":39}}},"13":{"name":"(anonymous_13)","line":227,"loc":{"start":{"line":227,"column":37},"end":{"line":227,"column":49}}},"14":{"name":"invalidate","line":242,"loc":{"start":{"line":242,"column":29},"end":{"line":242,"column":51}}},"15":{"name":"(anonymous_15)","line":258,"loc":{"start":{"line":258,"column":24},"end":{"line":258,"column":36}}},"16":{"name":"modelSetCache","line":349,"loc":{"start":{"line":349,"column":27},"end":{"line":349,"column":76}}},"17":{"name":"_getCache","line":381,"loc":{"start":{"line":381,"column":27},"end":{"line":381,"column":48}}},"18":{"name":"getVersion","line":399,"loc":{"start":{"line":399,"column":29},"end":{"line":399,"column":58}}},"19":{"name":"syncCheck","line":410,"loc":{"start":{"line":410,"column":29},"end":{"line":410,"column":54}}},"20":{"name":"cloneModel","line":418,"loc":{"start":{"line":418,"column":25},"end":{"line":418,"column":51}}},"21":{"name":"batch","line":438,"loc":{"start":{"line":438,"column":24},"end":{"line":438,"column":60}}},"22":{"name":"unbatch","line":458,"loc":{"start":{"line":458,"column":26},"end":{"line":458,"column":45}}},"23":{"name":"treatErrorsAsValues","line":468,"loc":{"start":{"line":468,"column":38},"end":{"line":468,"column":69}}},"24":{"name":"asDataSource","line":495,"loc":{"start":{"line":495,"column":31},"end":{"line":495,"column":55}}},"25":{"name":"materialize","line":499,"loc":{"start":{"line":499,"column":31},"end":{"line":499,"column":54}}},"26":{"name":"dematerialize","line":505,"loc":{"start":{"line":505,"column":33},"end":{"line":505,"column":58}}},"27":{"name":"boxValues","line":515,"loc":{"start":{"line":515,"column":28},"end":{"line":515,"column":49}}},"28":{"name":"unboxValues","line":525,"loc":{"start":{"line":525,"column":30},"end":{"line":525,"column":53}}},"29":{"name":"withoutDataSource","line":535,"loc":{"start":{"line":535,"column":36},"end":{"line":535,"column":65}}},"30":{"name":"toJSON","line":541,"loc":{"start":{"line":541,"column":25},"end":{"line":541,"column":43}}},"31":{"name":"getPath","line":571,"loc":{"start":{"line":571,"column":26},"end":{"line":571,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":65}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":54}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":66}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":58}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":64}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":68}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":50}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":50}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"15":{"start":{"line":20,"column":0},"end":{"line":20,"column":43}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}},"17":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}},"18":{"start":{"line":23,"column":0},"end":{"line":23,"column":51}},"19":{"start":{"line":24,"column":0},"end":{"line":24,"column":57}},"20":{"start":{"line":25,"column":0},"end":{"line":25,"column":67}},"21":{"start":{"line":27,"column":0},"end":{"line":27,"column":44}},"22":{"start":{"line":28,"column":0},"end":{"line":28,"column":51}},"23":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}},"24":{"start":{"line":30,"column":0},"end":{"line":30,"column":11}},"25":{"start":{"line":31,"column":0},"end":{"line":31,"column":55}},"26":{"start":{"line":32,"column":0},"end":{"line":32,"column":25}},"27":{"start":{"line":33,"column":0},"end":{"line":33,"column":41}},"28":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}},"29":{"start":{"line":35,"column":0},"end":{"line":40,"column":2}},"30":{"start":{"line":41,"column":0},"end":{"line":41,"column":59}},"31":{"start":{"line":43,"column":0},"end":{"line":43,"column":23}},"32":{"start":{"line":45,"column":0},"end":{"line":45,"column":22}},"33":{"start":{"line":46,"column":0},"end":{"line":46,"column":24}},"34":{"start":{"line":47,"column":0},"end":{"line":47,"column":26}},"35":{"start":{"line":48,"column":0},"end":{"line":48,"column":34}},"36":{"start":{"line":81,"column":0},"end":{"line":120,"column":1}},"37":{"start":{"line":83,"column":4},"end":{"line":83,"column":26}},"38":{"start":{"line":84,"column":4},"end":{"line":84,"column":57}},"39":{"start":{"line":85,"column":4},"end":{"line":85,"column":53}},"40":{"start":{"line":86,"column":4},"end":{"line":86,"column":90}},"41":{"start":{"line":87,"column":4},"end":{"line":87,"column":53}},"42":{"start":{"line":88,"column":4},"end":{"line":88,"column":99}},"43":{"start":{"line":89,"column":4},"end":{"line":89,"column":20}},"44":{"start":{"line":91,"column":4},"end":{"line":95,"column":5}},"45":{"start":{"line":92,"column":8},"end":{"line":92,"column":40}},"46":{"start":{"line":94,"column":8},"end":{"line":94,"column":69}},"47":{"start":{"line":97,"column":4},"end":{"line":101,"column":5}},"48":{"start":{"line":98,"column":8},"end":{"line":98,"column":50}},"49":{"start":{"line":100,"column":8},"end":{"line":100,"column":84}},"50":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"51":{"start":{"line":104,"column":8},"end":{"line":104,"column":54}},"52":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"53":{"start":{"line":108,"column":8},"end":{"line":108,"column":75}},"54":{"start":{"line":111,"column":4},"end":{"line":115,"column":5}},"55":{"start":{"line":112,"column":8},"end":{"line":112,"column":64}},"56":{"start":{"line":113,"column":11},"end":{"line":115,"column":5}},"57":{"start":{"line":114,"column":8},"end":{"line":114,"column":65}},"58":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"59":{"start":{"line":118,"column":8},"end":{"line":118,"column":37}},"60":{"start":{"line":122,"column":0},"end":{"line":122,"column":36}},"61":{"start":{"line":124,"column":0},"end":{"line":124,"column":38}},"62":{"start":{"line":125,"column":0},"end":{"line":125,"column":31}},"63":{"start":{"line":126,"column":0},"end":{"line":126,"column":37}},"64":{"start":{"line":127,"column":0},"end":{"line":127,"column":45}},"65":{"start":{"line":128,"column":0},"end":{"line":128,"column":47}},"66":{"start":{"line":129,"column":0},"end":{"line":129,"column":37}},"67":{"start":{"line":137,"column":0},"end":{"line":137,"column":48}},"68":{"start":{"line":146,"column":0},"end":{"line":146,"column":71}},"69":{"start":{"line":153,"column":0},"end":{"line":161,"column":2}},"70":{"start":{"line":154,"column":4},"end":{"line":154,"column":63}},"71":{"start":{"line":155,"column":4},"end":{"line":159,"column":5}},"72":{"start":{"line":156,"column":8},"end":{"line":158,"column":11}},"73":{"start":{"line":157,"column":12},"end":{"line":157,"column":27}},"74":{"start":{"line":160,"column":4},"end":{"line":160,"column":44}},"75":{"start":{"line":169,"column":0},"end":{"line":186,"column":2}},"76":{"start":{"line":170,"column":4},"end":{"line":170,"column":67}},"77":{"start":{"line":171,"column":4},"end":{"line":175,"column":5}},"78":{"start":{"line":172,"column":8},"end":{"line":174,"column":11}},"79":{"start":{"line":173,"column":12},"end":{"line":173,"column":27}},"80":{"start":{"line":176,"column":4},"end":{"line":176,"column":53}},"81":{"start":{"line":177,"column":4},"end":{"line":177,"column":20}},"82":{"start":{"line":178,"column":4},"end":{"line":185,"column":7}},"83":{"start":{"line":179,"column":8},"end":{"line":184,"column":11}},"84":{"start":{"line":181,"column":12},"end":{"line":181,"column":29}},"85":{"start":{"line":183,"column":12},"end":{"line":183,"column":30}},"86":{"start":{"line":188,"column":0},"end":{"line":203,"column":2}},"87":{"start":{"line":189,"column":4},"end":{"line":189,"column":13}},"88":{"start":{"line":190,"column":4},"end":{"line":190,"column":21}},"89":{"start":{"line":191,"column":4},"end":{"line":191,"column":35}},"90":{"start":{"line":192,"column":4},"end":{"line":192,"column":42}},"91":{"start":{"line":193,"column":4},"end":{"line":197,"column":5}},"92":{"start":{"line":194,"column":8},"end":{"line":194,"column":30}},"93":{"start":{"line":196,"column":8},"end":{"line":196,"column":26}},"94":{"start":{"line":198,"column":4},"end":{"line":198,"column":30}},"95":{"start":{"line":199,"column":4},"end":{"line":201,"column":5}},"96":{"start":{"line":200,"column":8},"end":{"line":200,"column":43}},"97":{"start":{"line":202,"column":4},"end":{"line":202,"column":52}},"98":{"start":{"line":214,"column":0},"end":{"line":235,"column":2}},"99":{"start":{"line":215,"column":4},"end":{"line":215,"column":13}},"100":{"start":{"line":216,"column":4},"end":{"line":216,"column":21}},"101":{"start":{"line":217,"column":4},"end":{"line":217,"column":35}},"102":{"start":{"line":218,"column":4},"end":{"line":218,"column":30}},"103":{"start":{"line":219,"column":4},"end":{"line":232,"column":5}},"104":{"start":{"line":220,"column":8},"end":{"line":220,"column":37}},"105":{"start":{"line":221,"column":8},"end":{"line":221,"column":28}},"106":{"start":{"line":222,"column":8},"end":{"line":222,"column":33}},"107":{"start":{"line":223,"column":8},"end":{"line":231,"column":9}},"108":{"start":{"line":227,"column":12},"end":{"line":229,"column":15}},"109":{"start":{"line":228,"column":16},"end":{"line":228,"column":57}},"110":{"start":{"line":234,"column":4},"end":{"line":234,"column":43}},"111":{"start":{"line":242,"column":0},"end":{"line":261,"column":2}},"112":{"start":{"line":243,"column":4},"end":{"line":243,"column":13}},"113":{"start":{"line":244,"column":4},"end":{"line":244,"column":21}},"114":{"start":{"line":245,"column":4},"end":{"line":245,"column":35}},"115":{"start":{"line":246,"column":4},"end":{"line":246,"column":42}},"116":{"start":{"line":247,"column":4},"end":{"line":247,"column":30}},"117":{"start":{"line":248,"column":4},"end":{"line":253,"column":5}},"118":{"start":{"line":249,"column":8},"end":{"line":249,"column":64}},"119":{"start":{"line":250,"column":8},"end":{"line":252,"column":9}},"120":{"start":{"line":251,"column":12},"end":{"line":251,"column":48}},"121":{"start":{"line":256,"column":4},"end":{"line":260,"column":11}},"122":{"start":{"line":259,"column":12},"end":{"line":259,"column":20}},"123":{"start":{"line":292,"column":0},"end":{"line":292,"column":43}},"124":{"start":{"line":309,"column":0},"end":{"line":309,"column":53}},"125":{"start":{"line":327,"column":0},"end":{"line":327,"column":53}},"126":{"start":{"line":339,"column":0},"end":{"line":339,"column":54}},"127":{"start":{"line":341,"column":0},"end":{"line":341,"column":54}},"128":{"start":{"line":343,"column":0},"end":{"line":343,"column":53}},"129":{"start":{"line":349,"column":0},"end":{"line":371,"column":2}},"130":{"start":{"line":350,"column":4},"end":{"line":350,"column":33}},"131":{"start":{"line":351,"column":4},"end":{"line":369,"column":5}},"132":{"start":{"line":352,"column":8},"end":{"line":352,"column":35}},"133":{"start":{"line":353,"column":8},"end":{"line":353,"column":35}},"134":{"start":{"line":354,"column":8},"end":{"line":354,"column":24}},"135":{"start":{"line":355,"column":8},"end":{"line":355,"column":30}},"136":{"start":{"line":356,"column":8},"end":{"line":358,"column":9}},"137":{"start":{"line":357,"column":12},"end":{"line":357,"column":72}},"138":{"start":{"line":359,"column":8},"end":{"line":365,"column":9}},"139":{"start":{"line":360,"column":12},"end":{"line":360,"column":60}},"140":{"start":{"line":361,"column":15},"end":{"line":365,"column":9}},"141":{"start":{"line":362,"column":12},"end":{"line":362,"column":55}},"142":{"start":{"line":363,"column":15},"end":{"line":365,"column":9}},"143":{"start":{"line":364,"column":12},"end":{"line":364,"column":65}},"144":{"start":{"line":366,"column":8},"end":{"line":366,"column":31}},"145":{"start":{"line":367,"column":11},"end":{"line":369,"column":5}},"146":{"start":{"line":368,"column":8},"end":{"line":368,"column":30}},"147":{"start":{"line":370,"column":4},"end":{"line":370,"column":16}},"148":{"start":{"line":381,"column":0},"end":{"line":392,"column":2}},"149":{"start":{"line":382,"column":4},"end":{"line":382,"column":38}},"150":{"start":{"line":383,"column":4},"end":{"line":385,"column":5}},"151":{"start":{"line":384,"column":8},"end":{"line":384,"column":42}},"152":{"start":{"line":387,"column":4},"end":{"line":387,"column":22}},"153":{"start":{"line":388,"column":4},"end":{"line":388,"column":26}},"154":{"start":{"line":389,"column":4},"end":{"line":389,"column":53}},"155":{"start":{"line":390,"column":4},"end":{"line":390,"column":22}},"156":{"start":{"line":391,"column":4},"end":{"line":391,"column":31}},"157":{"start":{"line":399,"column":0},"end":{"line":408,"column":2}},"158":{"start":{"line":400,"column":4},"end":{"line":400,"column":61}},"159":{"start":{"line":401,"column":4},"end":{"line":403,"column":5}},"160":{"start":{"line":402,"column":8},"end":{"line":402,"column":79}},"161":{"start":{"line":404,"column":4},"end":{"line":406,"column":5}},"162":{"start":{"line":405,"column":8},"end":{"line":405,"column":39}},"163":{"start":{"line":407,"column":4},"end":{"line":407,"column":40}},"164":{"start":{"line":410,"column":0},"end":{"line":415,"column":2}},"165":{"start":{"line":411,"column":4},"end":{"line":413,"column":5}},"166":{"start":{"line":412,"column":8},"end":{"line":412,"column":107}},"167":{"start":{"line":414,"column":4},"end":{"line":414,"column":16}},"168":{"start":{"line":418,"column":0},"end":{"line":430,"column":2}},"169":{"start":{"line":419,"column":4},"end":{"line":419,"column":32}},"170":{"start":{"line":420,"column":4},"end":{"line":427,"column":5}},"171":{"start":{"line":421,"column":8},"end":{"line":421,"column":30}},"172":{"start":{"line":422,"column":8},"end":{"line":426,"column":9}},"173":{"start":{"line":423,"column":12},"end":{"line":423,"column":30}},"174":{"start":{"line":425,"column":12},"end":{"line":425,"column":31}},"175":{"start":{"line":428,"column":4},"end":{"line":428,"column":28}},"176":{"start":{"line":429,"column":4},"end":{"line":429,"column":17}},"177":{"start":{"line":438,"column":0},"end":{"line":449,"column":2}},"178":{"start":{"line":439,"column":4},"end":{"line":439,"column":47}},"179":{"start":{"line":440,"column":4},"end":{"line":444,"column":5}},"180":{"start":{"line":441,"column":8},"end":{"line":441,"column":88}},"181":{"start":{"line":442,"column":11},"end":{"line":444,"column":5}},"182":{"start":{"line":443,"column":8},"end":{"line":443,"column":47}},"183":{"start":{"line":445,"column":4},"end":{"line":445,"column":30}},"184":{"start":{"line":446,"column":4},"end":{"line":446,"column":63}},"185":{"start":{"line":448,"column":4},"end":{"line":448,"column":17}},"186":{"start":{"line":458,"column":0},"end":{"line":462,"column":2}},"187":{"start":{"line":459,"column":4},"end":{"line":459,"column":30}},"188":{"start":{"line":460,"column":4},"end":{"line":460,"column":71}},"189":{"start":{"line":461,"column":4},"end":{"line":461,"column":17}},"190":{"start":{"line":468,"column":0},"end":{"line":472,"column":2}},"191":{"start":{"line":469,"column":4},"end":{"line":471,"column":7}},"192":{"start":{"line":495,"column":0},"end":{"line":497,"column":2}},"193":{"start":{"line":496,"column":4},"end":{"line":496,"column":44}},"194":{"start":{"line":499,"column":0},"end":{"line":503,"column":2}},"195":{"start":{"line":500,"column":4},"end":{"line":502,"column":7}},"196":{"start":{"line":505,"column":0},"end":{"line":509,"column":2}},"197":{"start":{"line":506,"column":4},"end":{"line":508,"column":7}},"198":{"start":{"line":515,"column":0},"end":{"line":519,"column":2}},"199":{"start":{"line":516,"column":4},"end":{"line":518,"column":7}},"200":{"start":{"line":525,"column":0},"end":{"line":529,"column":2}},"201":{"start":{"line":526,"column":4},"end":{"line":528,"column":7}},"202":{"start":{"line":535,"column":0},"end":{"line":539,"column":2}},"203":{"start":{"line":536,"column":4},"end":{"line":538,"column":7}},"204":{"start":{"line":541,"column":0},"end":{"line":546,"column":2}},"205":{"start":{"line":542,"column":4},"end":{"line":545,"column":6}},"206":{"start":{"line":571,"column":0},"end":{"line":573,"column":2}},"207":{"start":{"line":572,"column":4},"end":{"line":572,"column":34}},"208":{"start":{"line":575,"column":0},"end":{"line":575,"column":64}},"209":{"start":{"line":576,"column":0},"end":{"line":576,"column":58}},"210":{"start":{"line":577,"column":0},"end":{"line":577,"column":62}},"211":{"start":{"line":579,"column":0},"end":{"line":579,"column":68}},"212":{"start":{"line":580,"column":0},"end":{"line":580,"column":68}},"213":{"start":{"line":582,"column":0},"end":{"line":582,"column":70}},"214":{"start":{"line":583,"column":0},"end":{"line":583,"column":71}},"215":{"start":{"line":584,"column":0},"end":{"line":584,"column":73}},"216":{"start":{"line":585,"column":0},"end":{"line":585,"column":72}},"217":{"start":{"line":587,"column":0},"end":{"line":587,"column":66}},"218":{"start":{"line":588,"column":0},"end":{"line":588,"column":67}},"219":{"start":{"line":589,"column":0},"end":{"line":589,"column":69}},"220":{"start":{"line":590,"column":0},"end":{"line":590,"column":68}},"221":{"start":{"line":592,"column":0},"end":{"line":592,"column":66}},"222":{"start":{"line":593,"column":0},"end":{"line":593,"column":67}},"223":{"start":{"line":594,"column":0},"end":{"line":594,"column":69}},"224":{"start":{"line":595,"column":0},"end":{"line":595,"column":68}},"225":{"start":{"line":597,"column":0},"end":{"line":597,"column":57}},"226":{"start":{"line":599,"column":0},"end":{"line":599,"column":89}},"227":{"start":{"line":600,"column":0},"end":{"line":600,"column":87}}},"branchMap":{"1":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":18},"end":{"line":83,"column":19}},{"start":{"line":83,"column":23},"end":{"line":83,"column":25}}]},"2":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":17},"end":{"line":84,"column":30}},{"start":{"line":84,"column":34},"end":{"line":84,"column":56}}]},"3":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":17},"end":{"line":85,"column":29}},{"start":{"line":85,"column":33},"end":{"line":85,"column":46}},{"start":{"line":85,"column":50},"end":{"line":85,"column":52}}]},"4":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":22},"end":{"line":86,"column":39}},{"start":{"line":86,"column":43},"end":{"line":86,"column":61}},{"start":{"line":86,"column":65},"end":{"line":86,"column":89}}]},"5":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":19},"end":{"line":87,"column":33}},{"start":{"line":87,"column":37},"end":{"line":87,"column":52}}]},"6":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":20},"end":{"line":88,"column":35}},{"start":{"line":88,"column":39},"end":{"line":88,"column":55}},{"start":{"line":88,"column":59},"end":{"line":88,"column":98}}]},"7":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"8":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":24},"end":{"line":94,"column":40}},{"start":{"line":94,"column":44},"end":{"line":94,"column":68}}]},"9":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"10":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":29},"end":{"line":100,"column":50}},{"start":{"line":100,"column":54},"end":{"line":100,"column":83}}]},"11":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"12":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":21}},{"start":{"line":103,"column":25},"end":{"line":103,"column":57}}]},"13":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":22},"end":{"line":104,"column":35}},{"start":{"line":104,"column":39},"end":{"line":104,"column":53}}]},"14":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"15":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":28}},{"start":{"line":107,"column":32},"end":{"line":107,"column":71}}]},"16":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":29},"end":{"line":108,"column":49}},{"start":{"line":108,"column":53},"end":{"line":108,"column":74}}]},"17":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"18":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":11},"end":{"line":113,"column":11}},{"start":{"line":113,"column":11},"end":{"line":113,"column":11}}]},"19":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"20":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"21":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"22":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"23":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":8},"end":{"line":223,"column":8}},{"start":{"line":223,"column":8},"end":{"line":223,"column":8}}]},"24":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":12},"end":{"line":223,"column":23}},{"start":{"line":223,"column":27},"end":{"line":223,"column":46}},{"start":{"line":224,"column":12},"end":{"line":224,"column":25}},{"start":{"line":224,"column":29},"end":{"line":224,"column":48}},{"start":{"line":224,"column":52},"end":{"line":224,"column":72}},{"start":{"line":225,"column":12},"end":{"line":225,"column":25}},{"start":{"line":225,"column":29},"end":{"line":225,"column":48}},{"start":{"line":225,"column":52},"end":{"line":225,"column":69}}]},"25":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":8},"end":{"line":250,"column":8}},{"start":{"line":250,"column":8},"end":{"line":250,"column":8}}]},"26":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":4},"end":{"line":351,"column":4}},{"start":{"line":351,"column":4},"end":{"line":351,"column":4}}]},"27":{"line":356,"type":"if","locations":[{"start":{"line":356,"column":8},"end":{"line":356,"column":8}},{"start":{"line":356,"column":8},"end":{"line":356,"column":8}}]},"28":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":8},"end":{"line":359,"column":8}},{"start":{"line":359,"column":8},"end":{"line":359,"column":8}}]},"29":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":15},"end":{"line":361,"column":15}},{"start":{"line":361,"column":15},"end":{"line":361,"column":15}}]},"30":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":15},"end":{"line":363,"column":15}},{"start":{"line":363,"column":15},"end":{"line":363,"column":15}}]},"31":{"line":367,"type":"if","locations":[{"start":{"line":367,"column":11},"end":{"line":367,"column":11}},{"start":{"line":367,"column":11},"end":{"line":367,"column":11}}]},"32":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":4},"end":{"line":383,"column":4}},{"start":{"line":383,"column":4},"end":{"line":383,"column":4}}]},"33":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":15},"end":{"line":400,"column":22}},{"start":{"line":400,"column":26},"end":{"line":400,"column":54}},{"start":{"line":400,"column":58},"end":{"line":400,"column":60}}]},"34":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":4},"end":{"line":401,"column":4}},{"start":{"line":401,"column":4},"end":{"line":401,"column":4}}]},"35":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":4},"end":{"line":404,"column":4}},{"start":{"line":404,"column":4},"end":{"line":404,"column":4}}]},"36":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":4}},{"start":{"line":411,"column":4},"end":{"line":411,"column":4}}]},"37":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":8},"end":{"line":411,"column":29}},{"start":{"line":411,"column":33},"end":{"line":411,"column":61}},{"start":{"line":411,"column":65},"end":{"line":411,"column":96}}]},"38":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":8},"end":{"line":422,"column":8}},{"start":{"line":422,"column":8},"end":{"line":422,"column":8}}]},"39":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":4},"end":{"line":440,"column":4}},{"start":{"line":440,"column":4},"end":{"line":440,"column":4}}]},"40":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":11},"end":{"line":442,"column":11}},{"start":{"line":442,"column":11},"end":{"line":442,"column":11}}]},"41":{"line":442,"type":"binary-expr","locations":[{"start":{"line":442,"column":15},"end":{"line":442,"column":32}},{"start":{"line":442,"column":36},"end":{"line":442,"column":62}}]}},"code":["var ModelRoot = require(\"./ModelRoot\");","var ModelDataSourceAdapter = require(\"./ModelDataSourceAdapter\");","","var RequestQueue = require(\"./request/RequestQueueRx\");","var ModelResponse = require(\"./response/ModelResponse\");","var SetResponse = require(\"./response/SetResponse\");","var CallResponse = require(\"./response/CallResponse\");","var InvalidateResponse = require(\"./response/InvalidateResponse\");","","var ASAPScheduler = require(\"./schedulers/ASAPScheduler\");","var TimeoutScheduler = require(\"./schedulers/TimeoutScheduler\");","var ImmediateScheduler = require(\"./schedulers/ImmediateScheduler\");","","var arrayClone = require(\"./support/array-clone\");","var arraySlice = require(\"./support/array-slice\");","","var collectLru = require(\"./lru/collect\");","var pathSyntax = require(\"falcor-path-syntax\");","","var getSize = require(\"./support/getSize\");","var isObject = require(\"./support/isObject\");","var isFunction = require(\"./support/isFunction\");","var isPrimitive = require(\"./support/isPrimitive\");","var isJSONEnvelope = require(\"./support/isJSONEnvelope\");","var isJSONGraphEnvelope = require(\"./support/isJSONGraphEnvelope\");","","var setCache = require(\"./set/setPathMaps\");","var setJSONGraphs = require(\"./set/setJSONGraphs\");","var jsong = require(\"falcor-json-graph\");","var ID = 0;","var validateInput = require(\"./support/validateInput\");","var noOp = function() {};","var getCache = require(\"./get/getCache\");","var get = require(\"./get\");","var SET_VALID_INPUT = {","    pathValue: true,","    pathSyntax: true,","    json: true,","    jsonGraph: true","};","var GET_VALID_INPUT = require(\"./response/get/validInput\");","","module.exports = Model;","","Model.ref = jsong.ref;","Model.atom = jsong.atom;","Model.error = jsong.error;","Model.pathValue = jsong.pathValue;","/**"," * This callback is invoked when the Model's cache is changed."," * @callback Model~onChange"," */",""," /**"," * This function is invoked on every JSONGraph Error retrieved from the DataSource. This function allows Error objects to be transformed before being stored in the Model's cache."," * @callback Model~errorSelector"," * @param {Object} jsonGraphError - the JSONGraph Error object to transform before it is stored in the Model's cache."," * @returns {Object} the JSONGraph Error object to store in the Model cache."," */",""," /**"," * This function is invoked every time a value in the Model cache is about to be replaced with a new value. If the function returns true, the existing value is replaced with a new value and the version flag on all of the value's ancestors in the tree are incremented."," * @callback Model~comparator"," * @param {Object} existingValue - the current value in the Model cache."," * @param {Object} newValue - the value about to be set into the Model cache."," * @returns {Boolean} the Boolean value indicating whether the new value and the existing value are equal."," */","","/**"," * A Model object is used to execute commands against a {@link JSONGraph} object. {@link Model}s can work with a local JSONGraph cache, or it can work with a remote {@link JSONGraph} object through a {@link DataSource}."," * @constructor"," * @param {?Object} options - a set of options to customize behavior"," * @param {?DataSource} options.source - a data source to retrieve and manage the {@link JSONGraph}"," * @param {?JSONGraph} options.cache - initial state of the {@link JSONGraph}"," * @param {?number} options.maxSize - the maximum size of the cache"," * @param {?number} options.collectRatio - the ratio of the maximum size to collect when the maxSize is exceeded"," * @param {?Model~errorSelector} options.errorSelector - a function used to translate errors before they are returned"," * @param {?Model~onChange} options.onChange - a function called whenever the Model's cache is changed"," * @param {?Model~comparator} options.comparator - a function called whenever a value in the Model's cache is about to be replaced with a new value."," */","function Model(o) {","","    var options = o || {};","    this._root = options._root || new ModelRoot(options);","    this._path = options.path || options._path || [];","    this._scheduler = options.scheduler || options._scheduler || new ImmediateScheduler();","    this._source = options.source || options._source;","    this._request = options.request || options._request || new RequestQueue(this, this._scheduler);","    this._ID = ID++;","","    if (typeof options.maxSize === \"number\") {","        this._maxSize = options.maxSize;","    } else {","        this._maxSize = options._maxSize || Model.prototype._maxSize;","    }","","    if (typeof options.collectRatio === \"number\") {","        this._collectRatio = options.collectRatio;","    } else {","        this._collectRatio = options._collectRatio || Model.prototype._collectRatio;","    }","","    if (options.boxed || options.hasOwnProperty(\"_boxed\")) {","        this._boxed = options.boxed || options._boxed;","    }","","    if (options.materialized || options.hasOwnProperty(\"_materialized\")) {","        this._materialized = options.materialized || options._materialized;","    }","","    if (typeof options.treatErrorsAsValues === \"boolean\") {","        this._treatErrorsAsValues = options.treatErrorsAsValues;","    } else if (options.hasOwnProperty(\"_treatErrorsAsValues\")) {","        this._treatErrorsAsValues = options._treatErrorsAsValues;","    }","","    if (options.cache) {","        this.setCache(options.cache);","    }","}","","Model.prototype.constructor = Model;","","Model.prototype._materialized = false;","Model.prototype._boxed = false;","Model.prototype._progressive = false;","Model.prototype._treatErrorsAsValues = false;","Model.prototype._maxSize = Math.pow(2, 53) - 1;","Model.prototype._collectRatio = 0.75;","","/**"," * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse."," * @function"," * @param {...PathSet} path - the path(s) to retrieve"," * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON"," */","Model.prototype.get = require(\"./response/get\");","","/**"," * The get method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model}. The get method loads each value into a JSON object and returns in a ModelResponse."," * @function"," * @private"," * @param {Array.<PathSet>} paths - the path(s) to retrieve"," * @return {ModelResponse.<JSONEnvelope>} - the requested data as JSON"," */","Model.prototype._getWithPaths = require(\"./response/get/getWithPaths\");","","/**"," * Sets the value at one or more places in the JSONGraph model. The set method accepts one or more {@link PathValue}s, each of which is a combination of a location in the document and the value to place there.  In addition to accepting  {@link PathValue}s, the set method also returns the values after the set operation is complete."," * @function"," * @return {ModelResponse.<JSON>} - an {@link Observable} stream containing the values in the JSONGraph model after the set was attempted"," */","Model.prototype.set = function set() {","    var out = validateInput(arguments, SET_VALID_INPUT, \"set\");","    if (out !== true) {","        return new ModelResponse(function(o) {","            o.onError(out);","        });","    }","    return this._set.apply(this, arguments);","};","","/**"," * The preload method retrieves several {@link Path}s or {@link PathSet}s from a {@link Model} and loads them into the Model cache."," * @function"," * @param {...PathSet} path - the path(s) to retrieve"," * @return {ModelResponse.<Object>} - a ModelResponse that completes when the data has been loaded into the cache."," */","Model.prototype.preload = function preload() {","    var out = validateInput(arguments, GET_VALID_INPUT, \"preload\");","    if (out !== true) {","        return new ModelResponse(function(o) {","            o.onError(out);","        });","    }","    var args = Array.prototype.slice.call(arguments);","    var self = this;","    return new ModelResponse(function(obs) {","        return self.get.apply(self, args).subscribe(function() {","        }, function(err) {","            obs.onError(err);","        }, function() {","            obs.onCompleted();","        });","    });","};","","Model.prototype._set = function _set() {","    var args;","    var argsIdx = -1;","    var argsLen = arguments.length;","    var selector = arguments[argsLen - 1];","    if (isFunction(selector)) {","        argsLen = argsLen - 1;","    } else {","        selector = void 0;","    }","    args = new Array(argsLen);","    while (++argsIdx < argsLen) {","        args[argsIdx] = arguments[argsIdx];","    }","    return SetResponse.create(this, args, selector);","};","","/**"," * Invokes a function in the JSON Graph."," * @function"," * @param {Path} functionPath - the path to the function to invoke"," * @param {Array.<Object>} args - the arguments to pass to the function"," * @param {Array.<PathSet>} refPaths - the paths to retrieve from the JSON Graph References in the message returned from the function"," * @param {Array.<PathSet>} thisPaths - the paths to retrieve from function's this object after successful function execution"," * @returns {ModelResponse.<JSONEnvelope> - a JSONEnvelope contains the values returned from the function"," */","Model.prototype.call = function call() {","    var args;","    var argsIdx = -1;","    var argsLen = arguments.length;","    args = new Array(argsLen);","    while (++argsIdx < argsLen) {","        var arg = arguments[argsIdx];","        args[argsIdx] = arg;","        var argType = typeof arg;","        if (argsIdx > 1 && !Array.isArray(arg) ||","            argsIdx === 0 && !Array.isArray(arg) && argType !== \"string\" ||","            argsIdx === 1 && !Array.isArray(arg) && !isPrimitive(arg)) {","            /* eslint-disable no-loop-func */","            return new ModelResponse(function(o) {","                o.onError(new Error(\"Invalid argument\"));","            });","            /* eslint-enable no-loop-func */","        }","    }","","    return CallResponse.create(this, args);","};","","/**"," * The invalidate method synchronously removes several {@link Path}s or {@link PathSet}s from a {@link Model} cache."," * @function"," * @param {...PathSet} path - the  paths to remove from the {@link Model}'s cache."," */","Model.prototype.invalidate = function invalidate() {","    var args;","    var argsIdx = -1;","    var argsLen = arguments.length;","    var selector = arguments[argsLen - 1];","    args = new Array(argsLen);","    while (++argsIdx < argsLen) {","        args[argsIdx] = pathSyntax.fromPath(arguments[argsIdx]);","        if (typeof args[argsIdx] !== \"object\") {","            throw new Error(\"Invalid argument\");","        }","    }","","    // creates the obs, subscribes and will throw the errors if encountered.","    InvalidateResponse.","        create(this, args, selector).","        subscribe(noOp, function(e) {","            throw e;","        });","};","","/**"," * Returns a new {@link Model} bound to a location within the {@link JSONGraph}. The bound location is never a {@link Reference}: any {@link Reference}s encountered while resolving the bound {@link Path} are always replaced with the {@link Reference}s target value. For subsequent operations on the {@link Model}, all paths will be evaluated relative to the bound path. Deref allows you to:"," * - Expose only a fragment of the {@link JSONGraph} to components, rather than the entire graph"," * - Hide the location of a {@link JSONGraph} fragment from components"," * - Optimize for executing multiple operations and path looksup at/below the same location in the {@link JSONGraph}"," * @method"," * @param {Path} derefPath - the path to the object that the new Model should refer to"," * @param {...PathSet} relativePathsToPreload - paths (relative to the dereference path) to preload before Model is created"," * @return {Observable.<Model>} - an Observable stream with a single value, the dereferenced {@link Model}, or an empty stream if nothing is found at the path"," * @example","var model = new falcor.Model({","  cache: {","    users: [","      { $type: \"ref\", value: [\"usersById\", 32] }","    ],","    usersById: {","      32: {","\tname: \"Steve\",","        surname: \"McGuire\"","      }","    }","  }","});","model.deref([\"users\", 0], \"name\").subscribe(function(userModel){","  console.log(userModel.getPath());","});","","// prints [\"usersById\", 32] because userModel refers to target of reference at [\"users\", 0]"," */","Model.prototype.deref = require(\"./deref\");","","/**"," * Get data for a single {@link Path}."," * @param {Path} path - the path to retrieve"," * @return {Observable.<*>} - the value for the path"," * @example"," var model = new falcor.Model({source: new falcor.HttpDataSource(\"/model.json\") });",""," model.","     getValue('user.name').","     subscribe(function(name) {","         console.log(name);","     });",""," // The code above prints \"Jim\" to the console."," */","Model.prototype.getValue = require(\"./get/getValue\");","","/**"," * Set value for a single {@link Path}."," * @param {Path} path - the path to set"," * @param {Object} value - the value to set"," * @return {Observable.<*>} - the value for the path"," * @example"," var model = new falcor.Model({source: new falcor.HttpDataSource(\"/model.json\") });",""," model.","     setValue('user.name', 'Jim').","     subscribe(function(name) {","         console.log(name);","     });",""," // The code above prints \"Jim\" to the console."," */","Model.prototype.setValue = require(\"./set/setValue\");","","// TODO: Does not throw if given a PathSet rather than a Path, not sure if it should or not.","// TODO: Doc not accurate? I was able to invoke directly against the Model, perhaps because I don't have a data source?","// TODO: Not clear on what it means to \"retrieve objects in addition to JSONGraph values\"","/**"," * Synchronously retrieves a single path from the local {@link Model} only and will not retrieve missing paths from the {@link DataSource}. This method can only be invoked when the {@link Model} does not have a {@link DataSource} or from within a selector function. See {@link Model.prototype.get}. The getValueSync method differs from the asynchronous get methods (ex. get, getValues) in that it can be used to retrieve objects in addition to JSONGraph values."," * @method"," * @private"," * @arg {Path} path - the path to retrieve"," * @return {*} - the value for the specified path"," */","Model.prototype._getValueSync = require(\"./get/sync\");","","Model.prototype._setValueSync = require(\"./set/sync\");","","Model.prototype._derefSync = require(\"./deref/sync\");","","/**"," * Set the local cache to a {@link JSONGraph} fragment. This method can be a useful way of mocking a remote document, or restoring the local cache from a previously stored state."," * @param {JSONGraph} jsonGraph - the {@link JSONGraph} fragment to use as the local cache"," */","Model.prototype.setCache = function modelSetCache(cacheOrJSONGraphEnvelope) {","    var cache = this._root.cache;","    if (cacheOrJSONGraphEnvelope !== cache) {","        var modelRoot = this._root;","        var boundPath = this._path;","        this._path = [];","        this._root.cache = {};","        if (typeof cache !== \"undefined\") {","            collectLru(modelRoot, modelRoot.expired, getSize(cache), 0);","        }","        if (isJSONGraphEnvelope(cacheOrJSONGraphEnvelope)) {","            setJSONGraphs(this, [cacheOrJSONGraphEnvelope]);","        } else if (isJSONEnvelope(cacheOrJSONGraphEnvelope)) {","            setCache(this, [cacheOrJSONGraphEnvelope]);","        } else if (isObject(cacheOrJSONGraphEnvelope)) {","            setCache(this, [{ json: cacheOrJSONGraphEnvelope }]);","        }","        this._path = boundPath;","    } else if (typeof cache === \"undefined\") {","        this._root.cache = {};","    }","    return this;","};","","/**"," * Get the local {@link JSONGraph} cache. This method can be a useful to store the state of the cache."," * @param {...Array.<PathSet>} [pathSets] - The path(s) to retrieve. If no paths are specified, the entire {@link JSONGraph} is returned."," * @return {JSONGraph} all of the {@link JSONGraph} data in the {@link Model} cache."," * @example"," // Storing the boxshot of the first 10 titles in the first 10 genreLists to local storage."," localStorage.setItem('cache', JSON.stringify(model.getCache(\"genreLists[0...10][0...10].boxshot\")));"," */","Model.prototype.getCache = function _getCache() {","    var paths = arraySlice(arguments);","    if (paths.length === 0) {","        return getCache(this._root.cache);","    }","","    var result = [{}];","    var path = this._path;","    get.getWithPathsAsJSONGraph(this, paths, result);","    this._path = path;","    return result[0].jsonGraph;","};","","/**"," * Retrieves a number which is incremented every single time a value is changed underneath the Model or the object at an optionally-provided Path beneath the Model."," * @param {Path?} path - a path at which to retrieve the version number"," * @return {Number} a version number which changes whenever a value is changed underneath the Model or provided Path"," */","Model.prototype.getVersion = function getVersion(pathArg) {","    var path = pathArg && pathSyntax.fromPath(pathArg) || [];","    if (Array.isArray(path) === false) {","        throw new Error(\"Model#getVersion must be called with an Array path.\");","    }","    if (this._path.length) {","        path = this._path.concat(path);","    }","    return this._getVersion(this, path);","};","","Model.prototype._syncCheck = function syncCheck(name) {","    if (Boolean(this._source) && this._root.syncRefCount <= 0 && this._root.unsafeMode === false) {","        throw new Error(\"Model#\" + name + \" may only be called within the context of a request selector.\");","    }","    return true;","};","","/* eslint-disable guard-for-in */","Model.prototype._clone = function cloneModel(opts) {","    var clone = new Model(this);","    for (var key in opts) {","        var value = opts[key];","        if (value === \"delete\") {","            delete clone[key];","        } else {","            clone[key] = value;","        }","    }","    clone.setCache = void 0;","    return clone;","};","/* eslint-enable */","","/**"," * Returns a clone of the {@link Model} that enables batching. Within the configured time period, paths for get operations are collected and sent to the {@link DataSource} in a batch. Batching can be more efficient if the {@link DataSource} access the network, potentially reducing the number of HTTP requests to the server."," * @param {?Scheduler|number} schedulerOrDelay - Either a {@link Scheduler} that determines when to send a batch to the {@link DataSource}, or the number in milliseconds to collect a batch before sending to the {@link DataSource}. If this parameter is omitted, then batch collection ends at the end of the next tick."," * @return {Model} a Model which schedules a batch of get requests to the DataSource."," */","Model.prototype.batch = function batch(schedulerOrDelayArg) {","    var schedulerOrDelay = schedulerOrDelayArg;","    if (typeof schedulerOrDelay === \"number\") {","        schedulerOrDelay = new TimeoutScheduler(Math.round(Math.abs(schedulerOrDelay)));","    } else if (!schedulerOrDelay || !schedulerOrDelay.schedule) {","        schedulerOrDelay = new ASAPScheduler();","    }","    var clone = this._clone();","    clone._request = new RequestQueue(clone, schedulerOrDelay);","","    return clone;","};","","/**"," * Returns a clone of the {@link Model} that disables batching. This is the default mode. Each get operation will be executed on the {@link DataSource} separately."," * @name unbatch"," * @memberof Model.prototype"," * @function"," * @return {Model} a {@link Model} that batches requests of the same type and sends them to the data source together"," */","Model.prototype.unbatch = function unbatch() {","    var clone = this._clone();","    clone._request = new RequestQueue(clone, new ImmediateScheduler());","    return clone;","};","","/**"," * Returns a clone of the {@link Model} that treats errors as values. Errors will be reported in the same callback used to report data. Errors will appear as objects in responses, rather than being sent to the {@link Observable~onErrorCallback} callback of the {@link ModelResponse}."," * @return {Model}"," */","Model.prototype.treatErrorsAsValues = function treatErrorsAsValues() {","    return this._clone({","        _treatErrorsAsValues: true","    });","};","","/**"," * Adapts a Model to the {@link DataSource} interface."," * @return {DataSource}"," * @example","var model =","    new falcor.Model({","        cache: {","            user: {","                name: \"Steve\",","                surname: \"McGuire\"","            }","        }","    }),","    proxyModel = new falcor.Model({ source: model.asDataSource() });","","// Prints \"Steve\"","proxyModel.getValue(\"user.name\").","    then(function(name) {","        console.log(name);","    });"," */","Model.prototype.asDataSource = function asDataSource() {","    return new ModelDataSourceAdapter(this);","};","","Model.prototype._materialize = function materialize() {","    return this._clone({","        _materialized: true","    });","};","","Model.prototype._dematerialize = function dematerialize() {","    return this._clone({","        _materialized: \"delete\"","    });","};","","/**"," * Returns a clone of the {@link Model} that boxes values returning the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the value inside it. This allows any metadata attached to the wrapper to be inspected."," * @return {Model}"," */","Model.prototype.boxValues = function boxValues() {","    return this._clone({","        _boxed: true","    });","};","","/**"," * Returns a clone of the {@link Model} that unboxes values, returning the value inside of the wrapper ({@link Atom}, {@link Reference}, or {@link Error}), rather than the wrapper itself. This is the default mode."," * @return {Model}"," */","Model.prototype.unboxValues = function unboxValues() {","    return this._clone({","        _boxed: \"delete\"","    });","};","","/**"," * Returns a clone of the {@link Model} that only uses the local {@link JSONGraph} and never uses a {@link DataSource} to retrieve missing paths."," * @return {Model}"," */","Model.prototype.withoutDataSource = function withoutDataSource() {","    return this._clone({","        _source: \"delete\"","    });","};","","Model.prototype.toJSON = function toJSON() {","    return {","        $type: \"ref\",","        value: this._path","    };","};","","/**"," * Returns the {@link Path} to the object within the JSON Graph that this Model references."," * @return {Path}"," * @example","var model = new falcor.Model({","  cache: {","    users: [","      { $type: \"ref\", value: [\"usersById\", 32] }","    ],","    usersById: {","      32: {","\tname: \"Steve\",","        surname: \"McGuire\"","      }","    }","  }","});","model.deref([\"users\", 0], \"name\").subscribe(function(userModel){","  console.log(userModel.getPath());","});","","// prints [\"usersById\", 32] because userModel refers to target of reference at [\"users\", 0]"," */","Model.prototype.getPath = function getPath() {","    return arrayClone(this._path);","};","","Model.prototype._getBoundValue = require(\"./get/getBoundValue\");","Model.prototype._getVersion = require(\"./get/getVersion\");","Model.prototype._getValueSync = require(\"./get/getValueSync\");","","Model.prototype._getPathValuesAsPathMap = get.getWithPathsAsPathMap;","Model.prototype._getPathValuesAsJSONG = get.getWithPathsAsJSONGraph;","","Model.prototype._setPathValuesAsJSON = require(\"./set/setPathValues\");","Model.prototype._setPathValuesAsJSONG = require(\"./set/setPathValues\");","Model.prototype._setPathValuesAsPathMap = require(\"./set/setPathValues\");","Model.prototype._setPathValuesAsValues = require(\"./set/setPathValues\");","","Model.prototype._setPathMapsAsJSON = require(\"./set/setPathMaps\");","Model.prototype._setPathMapsAsJSONG = require(\"./set/setPathMaps\");","Model.prototype._setPathMapsAsPathMap = require(\"./set/setPathMaps\");","Model.prototype._setPathMapsAsValues = require(\"./set/setPathMaps\");","","Model.prototype._setJSONGsAsJSON = require(\"./set/setJSONGraphs\");","Model.prototype._setJSONGsAsJSONG = require(\"./set/setJSONGraphs\");","Model.prototype._setJSONGsAsPathMap = require(\"./set/setJSONGraphs\");","Model.prototype._setJSONGsAsValues = require(\"./set/setJSONGraphs\");","","Model.prototype._setCache = require(\"./set/setPathMaps\");","","Model.prototype._invalidatePathValuesAsJSON = require(\"./invalidate/invalidatePathSets\");","Model.prototype._invalidatePathMapsAsJSON = require(\"./invalidate/invalidatePathMaps\");",""],"l":{"1":1,"2":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"11":1,"12":1,"14":1,"15":1,"17":1,"18":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"41":1,"43":1,"45":1,"46":1,"47":1,"48":1,"81":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"91":0,"92":0,"94":0,"97":0,"98":0,"100":0,"103":0,"104":0,"107":0,"108":0,"111":0,"112":0,"113":0,"114":0,"117":0,"118":0,"122":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"137":1,"146":1,"153":1,"154":0,"155":0,"156":0,"157":0,"160":0,"169":1,"170":0,"171":0,"172":0,"173":0,"176":0,"177":0,"178":0,"179":0,"181":0,"183":0,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"196":0,"198":0,"199":0,"200":0,"202":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"227":0,"228":0,"234":0,"242":1,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"256":0,"259":0,"292":1,"309":1,"327":1,"339":1,"341":1,"343":1,"349":1,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"366":0,"367":0,"368":0,"370":0,"381":1,"382":0,"383":0,"384":0,"387":0,"388":0,"389":0,"390":0,"391":0,"399":1,"400":0,"401":0,"402":0,"404":0,"405":0,"407":0,"410":1,"411":0,"412":0,"414":0,"418":1,"419":0,"420":0,"421":0,"422":0,"423":0,"425":0,"428":0,"429":0,"438":1,"439":0,"440":0,"441":0,"442":0,"443":0,"445":0,"446":0,"448":0,"458":1,"459":0,"460":0,"461":0,"468":1,"469":0,"495":1,"496":0,"499":1,"500":0,"505":1,"506":0,"515":1,"516":0,"525":1,"526":0,"535":1,"536":0,"541":1,"542":0,"571":1,"572":0,"575":1,"576":1,"577":1,"579":1,"580":1,"582":1,"583":1,"584":1,"585":1,"587":1,"588":1,"589":1,"590":1,"592":1,"593":1,"594":1,"595":1,"597":1,"599":1,"600":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/ModelRoot.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/ModelRoot.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"ModelRoot","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":22}}},"2":{"name":"errorSelector","line":28,"loc":{"start":{"line":28,"column":36},"end":{"line":28,"column":65}}},"3":{"name":"comparator","line":31,"loc":{"start":{"line":31,"column":33},"end":{"line":31,"column":77}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":68}},"4":{"start":{"line":5,"column":0},"end":{"line":26,"column":1}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":26}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":26}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":50}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":87}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":20}},"11":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":45}},"13":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"14":{"start":{"line":20,"column":8},"end":{"line":20,"column":51}},"15":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"16":{"start":{"line":24,"column":8},"end":{"line":24,"column":41}},"17":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"18":{"start":{"line":29,"column":4},"end":{"line":29,"column":13}},"19":{"start":{"line":31,"column":0},"end":{"line":39,"column":2}},"20":{"start":{"line":32,"column":4},"end":{"line":37,"column":5}},"21":{"start":{"line":34,"column":8},"end":{"line":36,"column":56}},"22":{"start":{"line":38,"column":4},"end":{"line":38,"column":37}},"23":{"start":{"line":41,"column":0},"end":{"line":41,"column":27}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":18},"end":{"line":7,"column":19}},{"start":{"line":7,"column":23},"end":{"line":7,"column":25}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":19},"end":{"line":10,"column":34}},{"start":{"line":10,"column":38},"end":{"line":10,"column":40}}]},"3":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":22},"end":{"line":11,"column":40}},{"start":{"line":11,"column":44},"end":{"line":11,"column":49}}]},"4":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":31},"end":{"line":12,"column":58}},{"start":{"line":12,"column":62},"end":{"line":12,"column":86}}]},"5":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"6":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":4}},{"start":{"line":19,"column":4},"end":{"line":19,"column":4}}]},"7":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"8":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"9":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":34}},{"start":{"line":32,"column":38},"end":{"line":32,"column":66}}]},"10":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":15},"end":{"line":34,"column":52}},{"start":{"line":35,"column":12},"end":{"line":35,"column":49}},{"start":{"line":36,"column":12},"end":{"line":36,"column":55}}]}},"code":["var isFunction = require(\"./support/isFunction\");","var hasOwn = require(\"./support/hasOwn\");","var ImmediateScheduler = require(\"./schedulers/ImmediateScheduler\");","","function ModelRoot(o) {","","    var options = o || {};","","    this.syncRefCount = 0;","    this.expired = options.expired || [];","    this.unsafeMode = options.unsafeMode || false;","    this.collectionScheduler = options.collectionScheduler || new ImmediateScheduler();","    this.cache = {};","","    if (isFunction(options.comparator)) {","        this.comparator = options.comparator;","    }","","    if (isFunction(options.errorSelector)) {","        this.errorSelector = options.errorSelector;","    }","","    if (isFunction(options.onChange)) {","        this.onChange = options.onChange;","    }","}","","ModelRoot.prototype.errorSelector = function errorSelector(x, y) {","    return y;","};","ModelRoot.prototype.comparator = function comparator(cacheNode, messageNode) {","    if (hasOwn(cacheNode, \"value\") && hasOwn(messageNode, \"value\")) {","        // They are the same only if the following fields are the same.","        return cacheNode.value === messageNode.value &&","            cacheNode.$type === messageNode.$type &&","            cacheNode.$expires === messageNode.$expires;","    }","    return cacheNode === messageNode;","};","","module.exports = ModelRoot;",""],"l":{"1":1,"2":1,"3":1,"5":1,"7":0,"9":0,"10":0,"11":0,"12":0,"13":0,"15":0,"16":0,"19":0,"20":0,"23":0,"24":0,"28":1,"29":0,"31":1,"32":0,"34":0,"38":0,"41":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isFunction.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isFunction.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isFunction","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":32}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":59}}},"branchMap":{"1":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":11},"end":{"line":4,"column":24}},{"start":{"line":4,"column":28},"end":{"line":4,"column":58}}]}},"code":["var functionTypeof = \"function\";","","module.exports = function isFunction(func) {","    return Boolean(func) && typeof func === functionTypeof;","};",""],"l":{"1":1,"3":1,"4":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/hasOwn.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/hasOwn.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":4,"column":0},"end":{"line":6,"column":2}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":49}}},"branchMap":{"1":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},{"start":{"line":5,"column":26},"end":{"line":5,"column":48}}]}},"code":["var isObject = require(\"./isObject\");","var hasOwn = Object.prototype.hasOwnProperty;","","module.exports = function(obj, prop) {","  return isObject(obj) && hasOwn.call(obj, prop);","};",""],"l":{"1":1,"2":1,"4":1,"5":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isObject.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isObject.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isObject","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":2,"column":0},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":56}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":11},"end":{"line":3,"column":25}},{"start":{"line":3,"column":29},"end":{"line":3,"column":55}}]}},"code":["var objTypeof = \"object\";","module.exports = function isObject(value) {","    return value !== null && typeof value === objTypeof;","};",""],"l":{"1":1,"2":1,"3":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/schedulers/ImmediateScheduler.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/schedulers/ImmediateScheduler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"ImmediateScheduler","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":30}}},"2":{"name":"schedule","line":6,"loc":{"start":{"line":6,"column":40},"end":{"line":6,"column":66}}},"3":{"name":"scheduleWithState","line":11,"loc":{"start":{"line":11,"column":49},"end":{"line":11,"column":91}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":32}},"4":{"start":{"line":6,"column":0},"end":{"line":9,"column":2}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":13}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":28}},"7":{"start":{"line":11,"column":0},"end":{"line":14,"column":2}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":24}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":28}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}}},"branchMap":{},"code":["var Rx = require(\"rx/dist/rx\");","var Disposable = Rx.Disposable;","","function ImmediateScheduler() {}","","ImmediateScheduler.prototype.schedule = function schedule(action) {","    action();","    return Disposable.empty;","};","","ImmediateScheduler.prototype.scheduleWithState = function scheduleWithState(state, action) {","    action(this, state);","    return Disposable.empty;","};","","module.exports = ImmediateScheduler;",""],"l":{"1":1,"2":1,"4":1,"6":1,"7":0,"8":0,"11":1,"12":0,"13":0,"16":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/ModelDataSourceAdapter.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/ModelDataSourceAdapter.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"ModelDataSourceAdapter","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}}},"2":{"name":"get","line":5,"loc":{"start":{"line":5,"column":39},"end":{"line":5,"column":62}}},"3":{"name":"set","line":9,"loc":{"start":{"line":9,"column":39},"end":{"line":9,"column":67}}},"4":{"name":"call","line":13,"loc":{"start":{"line":13,"column":40},"end":{"line":13,"column":83}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":1}},"2":{"start":{"line":2,"column":4},"end":{"line":2,"column":61}},"3":{"start":{"line":5,"column":0},"end":{"line":7,"column":2}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":67}},"5":{"start":{"line":9,"column":0},"end":{"line":11,"column":2}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":53}},"7":{"start":{"line":13,"column":0},"end":{"line":16,"column":2}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":54}},"9":{"start":{"line":15,"column":4},"end":{"line":15,"column":66}},"10":{"start":{"line":18,"column":0},"end":{"line":18,"column":40}}},"branchMap":{},"code":["function ModelDataSourceAdapter(model) {","    this._model = model._materialize().treatErrorsAsValues();","}","","ModelDataSourceAdapter.prototype.get = function get(pathSets) {","    return this._model.get.apply(this._model, pathSets)._toJSONG();","};","","ModelDataSourceAdapter.prototype.set = function set(jsongResponse) {","    return this._model.set(jsongResponse)._toJSONG();","};","","ModelDataSourceAdapter.prototype.call = function call(path, args, suffixes, paths) {","    var params = [path, args, suffixes].concat(paths);","    return this._model.call.apply(this._model, params)._toJSONG();","};","","module.exports = ModelDataSourceAdapter;",""],"l":{"1":1,"2":0,"5":1,"6":0,"9":1,"10":0,"13":1,"14":0,"15":0,"18":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/RequestQueueRx.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/RequestQueueRx.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"RequestQueueRx","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":4,"column":0},"end":{"line":8,"column":1}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":23}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":31}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":40}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":60}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":80}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":58}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":60}},"11":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}}},"branchMap":{},"code":["var RequestQueue = require(\"./RequestQueue\");","var RequestQueueV2 = require(\"./RequestQueueV2\");","","function RequestQueueRx(model, scheduler) {","    this.model = model;","    this.scheduler = scheduler;","    this.requests = this._requests = [];","}","","// RX MONKEY PATCH","RequestQueueRx.prototype.get = RequestQueueV2.prototype.get;","RequestQueueRx.prototype.removeRequest = RequestQueueV2.prototype.removeRequest;","","RequestQueueRx.prototype.set = RequestQueue.prototype.set;","RequestQueueRx.prototype.call = RequestQueue.prototype.call;","","module.exports = RequestQueueRx;",""],"l":{"1":1,"2":1,"4":1,"5":0,"6":0,"7":0,"11":1,"12":1,"14":1,"15":1,"17":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/RequestQueue.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/RequestQueue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"RequestQueue","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}}},"2":{"name":"setRequest","line":17,"loc":{"start":{"line":17,"column":29},"end":{"line":17,"column":68}}},"3":{"name":"removeRequest","line":22,"loc":{"start":{"line":22,"column":33},"end":{"line":22,"column":65}}},"4":{"name":"distributePathsAcrossRequests","line":30,"loc":{"start":{"line":30,"column":41},"end":{"line":30,"column":110}}},"5":{"name":"mergeJSONGraphs","line":80,"loc":{"start":{"line":80,"column":41},"end":{"line":80,"column":87}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":48}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"6":{"start":{"line":10,"column":0},"end":{"line":15,"column":1}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":19}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":23}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":23}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":31}},"11":{"start":{"line":17,"column":0},"end":{"line":20,"column":2}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":80}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":60}},"14":{"start":{"line":22,"column":0},"end":{"line":28,"column":2}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":33}},"16":{"start":{"line":24,"column":4},"end":{"line":24,"column":42}},"17":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"18":{"start":{"line":26,"column":8},"end":{"line":26,"column":34}},"19":{"start":{"line":30,"column":0},"end":{"line":78,"column":2}},"20":{"start":{"line":32,"column":4},"end":{"line":32,"column":27}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":24}},"22":{"start":{"line":34,"column":4},"end":{"line":34,"column":34}},"23":{"start":{"line":36,"column":4},"end":{"line":36,"column":26}},"24":{"start":{"line":37,"column":4},"end":{"line":37,"column":39}},"25":{"start":{"line":38,"column":4},"end":{"line":38,"column":35}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":23}},"27":{"start":{"line":40,"column":4},"end":{"line":40,"column":16}},"28":{"start":{"line":42,"column":4},"end":{"line":63,"column":5}},"29":{"start":{"line":42,"column":16},"end":{"line":63,"column":5}},"30":{"start":{"line":44,"column":8},"end":{"line":44,"column":37}},"31":{"start":{"line":46,"column":8},"end":{"line":46,"column":26}},"32":{"start":{"line":48,"column":8},"end":{"line":54,"column":9}},"33":{"start":{"line":49,"column":12},"end":{"line":49,"column":45}},"34":{"start":{"line":50,"column":12},"end":{"line":53,"column":13}},"35":{"start":{"line":51,"column":16},"end":{"line":51,"column":62}},"36":{"start":{"line":52,"column":16},"end":{"line":52,"column":36}},"37":{"start":{"line":56,"column":8},"end":{"line":60,"column":9}},"38":{"start":{"line":57,"column":12},"end":{"line":57,"column":75}},"39":{"start":{"line":58,"column":12},"end":{"line":58,"column":52}},"40":{"start":{"line":59,"column":12},"end":{"line":59,"column":67}},"41":{"start":{"line":62,"column":8},"end":{"line":62,"column":47}},"42":{"start":{"line":65,"column":4},"end":{"line":65,"column":26}},"43":{"start":{"line":66,"column":4},"end":{"line":66,"column":31}},"44":{"start":{"line":68,"column":4},"end":{"line":68,"column":22}},"45":{"start":{"line":70,"column":4},"end":{"line":75,"column":5}},"46":{"start":{"line":71,"column":8},"end":{"line":71,"column":54}},"47":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"48":{"start":{"line":73,"column":12},"end":{"line":73,"column":56}},"49":{"start":{"line":77,"column":4},"end":{"line":77,"column":24}},"50":{"start":{"line":80,"column":0},"end":{"line":130,"column":2}},"51":{"start":{"line":82,"column":4},"end":{"line":82,"column":18}},"52":{"start":{"line":83,"column":4},"end":{"line":83,"column":22}},"53":{"start":{"line":84,"column":4},"end":{"line":84,"column":22}},"54":{"start":{"line":85,"column":4},"end":{"line":85,"column":22}},"55":{"start":{"line":86,"column":4},"end":{"line":86,"column":38}},"56":{"start":{"line":87,"column":4},"end":{"line":87,"column":39}},"57":{"start":{"line":89,"column":4},"end":{"line":89,"column":59}},"58":{"start":{"line":91,"column":4},"end":{"line":91,"column":45}},"59":{"start":{"line":92,"column":4},"end":{"line":92,"column":44}},"60":{"start":{"line":94,"column":4},"end":{"line":127,"column":5}},"61":{"start":{"line":94,"column":15},"end":{"line":127,"column":5}},"62":{"start":{"line":96,"column":8},"end":{"line":96,"column":42}},"63":{"start":{"line":97,"column":8},"end":{"line":97,"column":42}},"64":{"start":{"line":98,"column":8},"end":{"line":98,"column":87}},"65":{"start":{"line":100,"column":8},"end":{"line":124,"column":9}},"66":{"start":{"line":102,"column":12},"end":{"line":102,"column":33}},"67":{"start":{"line":104,"column":12},"end":{"line":106,"column":13}},"68":{"start":{"line":105,"column":16},"end":{"line":105,"column":25}},"69":{"start":{"line":108,"column":12},"end":{"line":123,"column":13}},"70":{"start":{"line":109,"column":16},"end":{"line":109,"column":40}},"71":{"start":{"line":110,"column":16},"end":{"line":110,"column":45}},"72":{"start":{"line":111,"column":16},"end":{"line":111,"column":47}},"73":{"start":{"line":112,"column":16},"end":{"line":112,"column":55}},"74":{"start":{"line":113,"column":16},"end":{"line":120,"column":17}},"75":{"start":{"line":114,"column":20},"end":{"line":114,"column":43}},"76":{"start":{"line":115,"column":20},"end":{"line":115,"column":50}},"77":{"start":{"line":116,"column":20},"end":{"line":116,"column":31}},"78":{"start":{"line":117,"column":20},"end":{"line":117,"column":39}},"79":{"start":{"line":118,"column":23},"end":{"line":120,"column":17}},"80":{"start":{"line":119,"column":20},"end":{"line":119,"column":47}},"81":{"start":{"line":122,"column":16},"end":{"line":122,"column":44}},"82":{"start":{"line":126,"column":8},"end":{"line":126,"column":19}},"83":{"start":{"line":129,"column":4},"end":{"line":129,"column":21}},"84":{"start":{"line":133,"column":0},"end":{"line":133,"column":30}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":12}},{"start":{"line":50,"column":12},"end":{"line":50,"column":12}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":8}},{"start":{"line":56,"column":8},"end":{"line":56,"column":8}}]},"4":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"5":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":19},"end":{"line":91,"column":38}},{"start":{"line":91,"column":42},"end":{"line":91,"column":44}}]},"6":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":19},"end":{"line":92,"column":37}},{"start":{"line":92,"column":41},"end":{"line":92,"column":43}}]},"7":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":19},"end":{"line":98,"column":38}},{"start":{"line":98,"column":43},"end":{"line":98,"column":85}}]},"8":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":12}},{"start":{"line":104,"column":12},"end":{"line":104,"column":12}}]},"9":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"10":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":16},"end":{"line":113,"column":16}},{"start":{"line":113,"column":16},"end":{"line":113,"column":16}}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":20},"end":{"line":113,"column":34}},{"start":{"line":113,"column":38},"end":{"line":113,"column":59}},{"start":{"line":113,"column":63},"end":{"line":113,"column":72}},{"start":{"line":113,"column":76},"end":{"line":113,"column":88}}]},"12":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":23},"end":{"line":118,"column":23}},{"start":{"line":118,"column":23},"end":{"line":118,"column":23}}]}},"code":["","var SetRequest = require(\"./../request/SetRequest\");","","var prefix = require(\"./../internal/prefix\");","var getType = require(\"./../support/getType\");","var isObject = require(\"./../support/isObject\");","var falcorPathUtils = require(\"falcor-path-utils\");","","/* eslint-disable no-labels block-scoped-var */","function RequestQueue(model, scheduler) {","    this.total = 0;","    this.model = model;","    this.requests = [];","    this.scheduler = scheduler;","}","","RequestQueue.prototype.set = function setRequest(jsonGraphEnvelope) {","    jsonGraphEnvelope.paths = falcorPathUtils.collapse(jsonGraphEnvelope.paths);","    return SetRequest.create(this.model, jsonGraphEnvelope);","};","","RequestQueue.prototype._remove = function removeRequest(request) {","    var requests = this.requests;","    var index = requests.indexOf(request);","    if (index !== -1) {","        requests.splice(index, 1);","    }","};","","RequestQueue.prototype.distributePaths = function distributePathsAcrossRequests(paths, requests, RequestType) {","","    var model = this.model;","    var pathsIndex = -1;","    var pathsCount = paths.length;","","    var requestIndex = -1;","    var requestCount = requests.length;","    var participatingRequests = [];","    var pendingRequest;","    var request;","","    insertPath: while (++pathsIndex < pathsCount) {","","        var path = paths[pathsIndex];","","        requestIndex = -1;","","        while (++requestIndex < requestCount) {","            request = requests[requestIndex];","            if (request.insertPath(path, request.pending)) {","                participatingRequests[requestIndex] = request;","                continue insertPath;","            }","        }","","        if (!pendingRequest) {","            pendingRequest = RequestType.create(this, model, this.total++);","            requests[requestIndex] = pendingRequest;","            participatingRequests[requestCount++] = pendingRequest;","        }","","        pendingRequest.insertPath(path, false);","    }","","    var pathRequests = [];","    var pathRequestsIndex = -1;","","    requestIndex = -1;","","    while (++requestIndex < requestCount) {","        request = participatingRequests[requestIndex];","        if (request != null) {","            pathRequests[++pathRequestsIndex] = request;","        }","    }","","    return pathRequests;","};","","RequestQueue.prototype.mergeJSONGraphs = function mergeJSONGraphs(aggregate, response) {","","    var depth = 0;","    var contexts = [];","    var messages = [];","    var keystack = [];","    var latestIndex = aggregate.index;","    var responseIndex = response.index;","","    aggregate.index = Math.max(latestIndex, responseIndex);","","    contexts[-1] = aggregate.jsonGraph || {};","    messages[-1] = response.jsonGraph || {};","","    recursing: while (depth > -1) {","","        var context = contexts[depth - 1];","        var message = messages[depth - 1];","        var keys = keystack[depth - 1] || (keystack[depth - 1] = Object.keys(message));","","        while (keys.length > 0) {","","            var key = keys.pop();","","            if (key[0] === prefix) {","                continue;","            }","","            if (context.hasOwnProperty(key)) {","                var node = context[key];","                var nodeType = getType(node);","                var messageNode = message[key];","                var messageType = getType(messageNode);","                if (isObject(node) && isObject(messageNode) && !nodeType && !messageType) {","                    contexts[depth] = node;","                    messages[depth] = messageNode;","                    depth += 1;","                    continue recursing;","                } else if (responseIndex > latestIndex) {","                    context[key] = messageNode;","                }","            } else {","                context[key] = message[key];","            }","        }","","        depth -= 1;","    }","","    return aggregate;","};","/* eslint-enable */","","module.exports = RequestQueue;",""],"l":{"2":1,"4":1,"5":1,"6":1,"7":1,"10":1,"11":0,"12":0,"13":0,"14":0,"17":1,"18":0,"19":0,"22":1,"23":0,"24":0,"25":0,"26":0,"30":1,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"44":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"56":0,"57":0,"58":0,"59":0,"62":0,"65":0,"66":0,"68":0,"70":0,"71":0,"72":0,"73":0,"77":0,"80":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"91":0,"92":0,"94":0,"96":0,"97":0,"98":0,"100":0,"102":0,"104":0,"105":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"122":0,"126":0,"129":0,"133":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/SetRequest.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/SetRequest.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1,"18":1,"19":0,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"SetRequest","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}}},"2":{"name":"create","line":17,"loc":{"start":{"line":17,"column":20},"end":{"line":17,"column":62}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":45}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":34},"end":{"line":31,"column":45}}},"5":{"name":"getSourceArgs","line":35,"loc":{"start":{"line":35,"column":37},"end":{"line":35,"column":62}}},"6":{"name":"getSourceObserver","line":39,"loc":{"start":{"line":39,"column":41},"end":{"line":39,"column":78}}},"7":{"name":"onNext","line":49,"loc":{"start":{"line":49,"column":8},"end":{"line":49,"column":43}}},"8":{"name":"onError","line":64,"loc":{"start":{"line":64,"column":8},"end":{"line":64,"column":32}}},"9":{"name":"(anonymous_9)","line":68,"loc":{"start":{"line":68,"column":49},"end":{"line":68,"column":64}}},"10":{"name":"onCompleted","line":79,"loc":{"start":{"line":79,"column":8},"end":{"line":79,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":30}},"8":{"start":{"line":13,"column":0},"end":{"line":15,"column":1}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":23}},"10":{"start":{"line":17,"column":0},"end":{"line":22,"column":2}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":35}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":26}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":50}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":19}},"15":{"start":{"line":24,"column":0},"end":{"line":24,"column":56}},"16":{"start":{"line":25,"column":0},"end":{"line":25,"column":46}},"17":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}},"18":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"19":{"start":{"line":29,"column":4},"end":{"line":29,"column":17}},"20":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"21":{"start":{"line":32,"column":4},"end":{"line":32,"column":13}},"22":{"start":{"line":35,"column":0},"end":{"line":37,"column":2}},"23":{"start":{"line":36,"column":4},"end":{"line":36,"column":34}},"24":{"start":{"line":39,"column":0},"end":{"line":83,"column":2}},"25":{"start":{"line":41,"column":4},"end":{"line":41,"column":27}},"26":{"start":{"line":42,"column":4},"end":{"line":42,"column":28}},"27":{"start":{"line":43,"column":4},"end":{"line":43,"column":45}},"28":{"start":{"line":44,"column":4},"end":{"line":44,"column":32}},"29":{"start":{"line":45,"column":4},"end":{"line":45,"column":48}},"30":{"start":{"line":46,"column":4},"end":{"line":46,"column":42}},"31":{"start":{"line":48,"column":4},"end":{"line":82,"column":7}},"32":{"start":{"line":51,"column":12},"end":{"line":51,"column":37}},"33":{"start":{"line":53,"column":12},"end":{"line":56,"column":49}},"34":{"start":{"line":58,"column":12},"end":{"line":58,"column":57}},"35":{"start":{"line":60,"column":12},"end":{"line":60,"column":32}},"36":{"start":{"line":62,"column":12},"end":{"line":62,"column":47}},"37":{"start":{"line":66,"column":12},"end":{"line":66,"column":37}},"38":{"start":{"line":68,"column":12},"end":{"line":73,"column":49}},"39":{"start":{"line":69,"column":16},"end":{"line":72,"column":18}},"40":{"start":{"line":75,"column":12},"end":{"line":75,"column":32}},"41":{"start":{"line":77,"column":12},"end":{"line":77,"column":36}},"42":{"start":{"line":80,"column":12},"end":{"line":80,"column":35}},"43":{"start":{"line":85,"column":0},"end":{"line":85,"column":28}}},"branchMap":{},"code":["var Rx = require(\"rx/dist/rx\");","var Observer = Rx.Observer;","","var Request = require(\"./../request/Request\");","","var arrayMap = require(\"./../support/array-map\");","","var setJSONGraphs = require(\"./../set/setJSONGraphs\");","var setPathValues = require(\"./../set/setPathValues\");","","var emptyArray = new Array(0);","","function SetRequest() {","    Request.call(this);","}","","SetRequest.create = function create(model, jsonGraphEnvelope) {","    var request = new SetRequest();","    request.model = model;","    request.jsonGraphEnvelope = jsonGraphEnvelope;","    return request;","};","","SetRequest.prototype = Object.create(Request.prototype);","SetRequest.prototype.constructor = SetRequest;","","SetRequest.prototype.method = \"set\";","SetRequest.prototype.insertPath = function() {","    return false;","};","SetRequest.prototype.removePath = function() {","    return 0;","};","","SetRequest.prototype.getSourceArgs = function getSourceArgs() {","    return this.jsonGraphEnvelope;","};","","SetRequest.prototype.getSourceObserver = function getSourceObserver(observer) {","","    var model = this.model;","    var bound = model._path;","    var paths = this.jsonGraphEnvelope.paths;","    var modelRoot = model._root;","    var errorSelector = modelRoot.errorSelector;","    var comparator = modelRoot.comparator;","","    return Request.prototype.getSourceObserver.call(this, Observer.create(","        function onNext(jsonGraphEnvelope) {","","            model._path = emptyArray;","","            var successfulPaths = setJSONGraphs(model, [{","                paths: paths,","                jsonGraph: jsonGraphEnvelope.jsonGraph","            }], null, errorSelector, comparator);","","            jsonGraphEnvelope.paths = successfulPaths[1];","","            model._path = bound;","","            observer.onNext(jsonGraphEnvelope);","        },","        function onError(error) {","","            model._path = emptyArray;","","            setPathValues(model, arrayMap(paths, function(path) {","                return {","                    path: path,","                    value: error","                };","            }), null, errorSelector, comparator);","","            model._path = bound;","","            observer.onError(error);","        },","        function onCompleted() {","            observer.onCompleted();","        }","    ));","};","","module.exports = SetRequest;",""],"l":{"1":1,"2":1,"4":1,"6":1,"8":1,"9":1,"11":1,"13":1,"14":0,"17":1,"18":0,"19":0,"20":0,"21":0,"24":1,"25":1,"27":1,"28":1,"29":0,"31":1,"32":0,"35":1,"36":0,"39":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"51":0,"53":0,"58":0,"60":0,"62":0,"66":0,"68":0,"69":0,"75":0,"77":0,"80":0,"85":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/Request.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/Request.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"Request","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":19}}},"2":{"name":"create","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":54}}},"3":{"name":"insertPathIntoRequest","line":31,"loc":{"start":{"line":31,"column":31},"end":{"line":31,"column":106}}},"4":{"name":"removePathFromRequest","line":75,"loc":{"start":{"line":75,"column":31},"end":{"line":75,"column":99}}},"5":{"name":"getSourceObserver","line":121,"loc":{"start":{"line":121,"column":38},"end":{"line":121,"column":75}}},"6":{"name":"onNext","line":124,"loc":{"start":{"line":124,"column":8},"end":{"line":124,"column":34}}},"7":{"name":"onError","line":132,"loc":{"start":{"line":132,"column":8},"end":{"line":132,"column":28}}},"8":{"name":"onCompleted","line":135,"loc":{"start":{"line":135,"column":8},"end":{"line":135,"column":31}}},"9":{"name":"_subscribe","line":140,"loc":{"start":{"line":140,"column":31},"end":{"line":140,"column":61}}},"10":{"name":"(anonymous_10)","line":149,"loc":{"start":{"line":149,"column":44},"end":{"line":149,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":67}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":50}},"10":{"start":{"line":12,"column":0},"end":{"line":17,"column":1}},"11":{"start":{"line":13,"column":4},"end":{"line":13,"column":20}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":25}},"13":{"start":{"line":15,"column":4},"end":{"line":15,"column":23}},"14":{"start":{"line":16,"column":4},"end":{"line":16,"column":43}},"15":{"start":{"line":19,"column":0},"end":{"line":25,"column":2}},"16":{"start":{"line":20,"column":4},"end":{"line":20,"column":29}},"17":{"start":{"line":21,"column":4},"end":{"line":21,"column":26}},"18":{"start":{"line":22,"column":4},"end":{"line":22,"column":26}},"19":{"start":{"line":23,"column":4},"end":{"line":23,"column":26}},"20":{"start":{"line":24,"column":4},"end":{"line":24,"column":19}},"21":{"start":{"line":27,"column":0},"end":{"line":27,"column":56}},"22":{"start":{"line":29,"column":0},"end":{"line":29,"column":40}},"23":{"start":{"line":31,"column":0},"end":{"line":72,"column":2}},"24":{"start":{"line":33,"column":4},"end":{"line":33,"column":30}},"25":{"start":{"line":34,"column":4},"end":{"line":34,"column":44}},"26":{"start":{"line":35,"column":4},"end":{"line":35,"column":107}},"27":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"28":{"start":{"line":38,"column":8},"end":{"line":38,"column":21}},"29":{"start":{"line":41,"column":4},"end":{"line":41,"column":18}},"30":{"start":{"line":42,"column":4},"end":{"line":42,"column":29}},"31":{"start":{"line":43,"column":4},"end":{"line":43,"column":26}},"32":{"start":{"line":44,"column":4},"end":{"line":44,"column":46}},"33":{"start":{"line":49,"column":4},"end":{"line":69,"column":33}},"34":{"start":{"line":50,"column":8},"end":{"line":50,"column":27}},"35":{"start":{"line":51,"column":8},"end":{"line":64,"column":9}},"36":{"start":{"line":52,"column":12},"end":{"line":57,"column":13}},"37":{"start":{"line":53,"column":16},"end":{"line":55,"column":17}},"38":{"start":{"line":54,"column":20},"end":{"line":54,"column":33}},"39":{"start":{"line":56,"column":16},"end":{"line":56,"column":57}},"40":{"start":{"line":58,"column":12},"end":{"line":60,"column":13}},"41":{"start":{"line":59,"column":16},"end":{"line":59,"column":29}},"42":{"start":{"line":62,"column":12},"end":{"line":62,"column":42}},"43":{"start":{"line":63,"column":12},"end":{"line":63,"column":29}},"44":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"45":{"start":{"line":67,"column":12},"end":{"line":67,"column":54}},"46":{"start":{"line":71,"column":4},"end":{"line":71,"column":16}},"47":{"start":{"line":75,"column":0},"end":{"line":118,"column":2}},"48":{"start":{"line":77,"column":4},"end":{"line":77,"column":30}},"49":{"start":{"line":78,"column":4},"end":{"line":78,"column":44}},"50":{"start":{"line":79,"column":4},"end":{"line":79,"column":55}},"51":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"52":{"start":{"line":82,"column":8},"end":{"line":82,"column":20}},"53":{"start":{"line":85,"column":4},"end":{"line":85,"column":31}},"54":{"start":{"line":86,"column":4},"end":{"line":86,"column":29}},"55":{"start":{"line":87,"column":4},"end":{"line":87,"column":26}},"56":{"start":{"line":89,"column":4},"end":{"line":89,"column":46}},"57":{"start":{"line":90,"column":4},"end":{"line":115,"column":33}},"58":{"start":{"line":91,"column":8},"end":{"line":91,"column":27}},"59":{"start":{"line":92,"column":8},"end":{"line":110,"column":9}},"60":{"start":{"line":93,"column":12},"end":{"line":93,"column":21}},"61":{"start":{"line":94,"column":15},"end":{"line":110,"column":9}},"62":{"start":{"line":95,"column":12},"end":{"line":95,"column":69}},"63":{"start":{"line":96,"column":12},"end":{"line":96,"column":38}},"64":{"start":{"line":97,"column":12},"end":{"line":99,"column":13}},"65":{"start":{"line":98,"column":16},"end":{"line":98,"column":22}},"66":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"67":{"start":{"line":101,"column":16},"end":{"line":101,"column":35}},"68":{"start":{"line":104,"column":12},"end":{"line":104,"column":49}},"69":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"70":{"start":{"line":106,"column":16},"end":{"line":106,"column":35}},"71":{"start":{"line":108,"column":12},"end":{"line":108,"column":25}},"72":{"start":{"line":109,"column":12},"end":{"line":109,"column":29}},"73":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"74":{"start":{"line":113,"column":12},"end":{"line":113,"column":54}},"75":{"start":{"line":117,"column":4},"end":{"line":117,"column":19}},"76":{"start":{"line":121,"column":0},"end":{"line":138,"column":2}},"77":{"start":{"line":122,"column":4},"end":{"line":122,"column":23}},"78":{"start":{"line":123,"column":4},"end":{"line":137,"column":11}},"79":{"start":{"line":125,"column":12},"end":{"line":128,"column":31}},"80":{"start":{"line":129,"column":12},"end":{"line":129,"column":43}},"81":{"start":{"line":130,"column":12},"end":{"line":130,"column":38}},"82":{"start":{"line":133,"column":12},"end":{"line":133,"column":32}},"83":{"start":{"line":136,"column":12},"end":{"line":136,"column":35}},"84":{"start":{"line":140,"column":0},"end":{"line":172,"column":2}},"85":{"start":{"line":142,"column":4},"end":{"line":142,"column":23}},"86":{"start":{"line":143,"column":4},"end":{"line":143,"column":27}},"87":{"start":{"line":145,"column":4},"end":{"line":145,"column":27}},"88":{"start":{"line":147,"column":4},"end":{"line":147,"column":27}},"89":{"start":{"line":148,"column":4},"end":{"line":148,"column":52}},"90":{"start":{"line":149,"column":4},"end":{"line":156,"column":7}},"91":{"start":{"line":150,"column":8},"end":{"line":155,"column":9}},"92":{"start":{"line":151,"column":12},"end":{"line":151,"column":30}},"93":{"start":{"line":152,"column":12},"end":{"line":154,"column":13}},"94":{"start":{"line":153,"column":16},"end":{"line":153,"column":39}},"95":{"start":{"line":158,"column":4},"end":{"line":158,"column":83}},"96":{"start":{"line":160,"column":4},"end":{"line":169,"column":5}},"97":{"start":{"line":161,"column":8},"end":{"line":163,"column":58}},"98":{"start":{"line":168,"column":8},"end":{"line":168,"column":40}},"99":{"start":{"line":171,"column":4},"end":{"line":171,"column":23}},"100":{"start":{"line":174,"column":0},"end":{"line":174,"column":25}}},"branchMap":{"1":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":16},"end":{"line":33,"column":24}},{"start":{"line":33,"column":28},"end":{"line":33,"column":29}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":16},"end":{"line":34,"column":24}},{"start":{"line":34,"column":28},"end":{"line":34,"column":43}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":17},"end":{"line":35,"column":26}},{"start":{"line":35,"column":30},"end":{"line":35,"column":54}},{"start":{"line":35,"column":59},"end":{"line":35,"column":105}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"5":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":25}},{"start":{"line":37,"column":29},"end":{"line":37,"column":44}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":12}},{"start":{"line":52,"column":12},"end":{"line":52,"column":12}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":16},"end":{"line":53,"column":16}},{"start":{"line":53,"column":16},"end":{"line":53,"column":16}}]},"9":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":12}},{"start":{"line":58,"column":12},"end":{"line":58,"column":12}}]},"10":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":27},"end":{"line":62,"column":31}},{"start":{"line":62,"column":35},"end":{"line":62,"column":36}}]},"11":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":8}},{"start":{"line":66,"column":8},"end":{"line":66,"column":8}}]},"12":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":16},"end":{"line":77,"column":24}},{"start":{"line":77,"column":28},"end":{"line":77,"column":29}}]},"13":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":16},"end":{"line":78,"column":24}},{"start":{"line":78,"column":28},"end":{"line":78,"column":43}}]},"14":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":17},"end":{"line":79,"column":26}},{"start":{"line":79,"column":30},"end":{"line":79,"column":54}}]},"15":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"16":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":25}},{"start":{"line":81,"column":29},"end":{"line":81,"column":44}}]},"17":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":8}},{"start":{"line":92,"column":8},"end":{"line":92,"column":8}}]},"18":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":12},"end":{"line":92,"column":27}},{"start":{"line":92,"column":31},"end":{"line":92,"column":44}}]},"19":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":15},"end":{"line":94,"column":15}},{"start":{"line":94,"column":15},"end":{"line":94,"column":15}}]},"20":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":100,"column":12}},{"start":{"line":100,"column":12},"end":{"line":100,"column":12}}]},"21":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":34},"end":{"line":104,"column":38}},{"start":{"line":104,"column":42},"end":{"line":104,"column":43}}]},"22":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"23":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":8}},{"start":{"line":112,"column":8},"end":{"line":112,"column":8}}]},"24":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":33},"end":{"line":125,"column":51}},{"start":{"line":126,"column":16},"end":{"line":126,"column":30}},{"start":{"line":127,"column":16},"end":{"line":127,"column":31}},{"start":{"line":128,"column":16},"end":{"line":128,"column":30}}]},"25":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]},"26":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":12}},{"start":{"line":152,"column":12},"end":{"line":152,"column":12}}]}},"code":["var Rx = require(\"rx/dist/rx\");","var Observer = Rx.Observer;","var Observable = Rx.Observable;","var Disposable = Rx.Disposable;","var SerialDisposable = Rx.SerialDisposable;","var CompositeDisposable = Rx.CompositeDisposable;","var InvalidSourceError = require(\"./../errors/InvalidSourceError\");","","var falcorPathUtils = require(\"falcor-path-utils\");","var iterateKeySet = falcorPathUtils.iterateKeySet;","","function Request() {","    this.length = 0;","    this.pending = false;","    this.pathmaps = [];","    Observable.call(this, this._subscribe);","}","","Request.create = function create(queue, model, index) {","    var request = new this();","    request.queue = queue;","    request.model = model;","    request.index = index;","    return request;","};","","Request.prototype = Object.create(Observable.prototype);","","Request.prototype.constructor = Request;","","Request.prototype.insertPath = function insertPathIntoRequest(path, union, parentArg, indexArg, countArg) {","","    var index = indexArg || 0;","    var count = countArg || path.length - 1;","    var parent = parentArg || this.pathmaps[count + 1] || (this.pathmaps[count + 1] = Object.create(null));","","    if (parent === void 0 || parent === null) {","        return false;","    }","","    var key, node;","    var keySet = path[index];","    var iteratorNote = {};","    key = iterateKeySet(keySet, iteratorNote);","","    // Determines if the key needs to go through permutation or not.","    // All object based keys require this.","","    do {","        node = parent[key];","        if (index < count) {","            if (node == null) {","                if (union) {","                    return false;","                }","                node = parent[key] = Object.create(null);","            }","            if (this.insertPath(path, union, node, index + 1, count) === false) {","                return false;","            }","        } else {","            parent[key] = (node || 0) + 1;","            this.length += 1;","        }","","        if (!iteratorNote.done) {","            key = iterateKeySet(keySet, iteratorNote);","        }","    } while (!iteratorNote.done);","","    return true;","};","","/* eslint-disable guard-for-in */","Request.prototype.removePath = function removePathFromRequest(path, parentArg, indexArg, countArg) {","","    var index = indexArg || 0;","    var count = countArg || path.length - 1;","    var parent = parentArg || this.pathmaps[count + 1];","","    if (parent === void 0 || parent === null) {","        return true;","    }","","    var key, node, deleted = 0;","    var keySet = path[index];","    var iteratorNote = {};","","    key = iterateKeySet(keySet, iteratorNote);","    do {","        node = parent[key];","        if (node === void 0 || node === null) {","            continue;","        } else if (index < count) {","            deleted += this.removePath(path, node, index + 1, count);","            var emptyNodeKey = void 0;","            for (emptyNodeKey in node) {","                break;","            }","            if (emptyNodeKey === void 0) {","                delete parent[key];","            }","        } else {","            node = parent[key] = (node || 1) - 1;","            if (node === 0) {","                delete parent[key];","            }","            deleted += 1;","            this.length -= 1;","        }","","        if (!iteratorNote.done) {","            key = iterateKeySet(keySet, iteratorNote);","        }","    } while (!iteratorNote.done);","","    return deleted;","};","/* eslint-enable */","","Request.prototype.getSourceObserver = function getSourceObserver(observer) {","    var request = this;","    return Observer.create(","        function onNext(envelope) {","            envelope.jsonGraph = envelope.jsonGraph ||","                envelope.jsong ||","                envelope.values ||","                envelope.value;","            envelope.index = request.index;","            observer.onNext(envelope);","        },","        function onError(e) {","            observer.onError(e);","        },","        function onCompleted() {","            observer.onCompleted();","        });","};","","Request.prototype._subscribe = function _subscribe(observer) {","","    var request = this;","    var queue = this.queue;","","    request.pending = true;","","    var isDisposed = false;","    var sourceSubscription = new SerialDisposable();","    var queueDisposable = Disposable.create(function() {","        if (!isDisposed) {","            isDisposed = true;","            if (queue) {","                queue._remove(request);","            }","        }","    });","","    var disposables = new CompositeDisposable(sourceSubscription, queueDisposable);","","    try {","        sourceSubscription.setDisposable(","            this.model._source[this.method](this.getSourceArgs())","            .subscribe(this.getSourceObserver(observer)));","    } catch (e) {","","        // We need a way to communicate out to the rest of the world that","        // this error needs to continue its propagation.","        throw new InvalidSourceError(e);","    }","","    return disposables;","};","","module.exports = Request;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"12":1,"13":0,"14":0,"15":0,"16":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"27":1,"29":1,"31":1,"33":0,"34":0,"35":0,"37":0,"38":0,"41":0,"42":0,"43":0,"44":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"58":0,"59":0,"62":0,"63":0,"66":0,"67":0,"71":0,"75":1,"77":0,"78":0,"79":0,"81":0,"82":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"100":0,"101":0,"104":0,"105":0,"106":0,"108":0,"109":0,"112":0,"113":0,"117":0,"121":1,"122":0,"123":0,"125":0,"129":0,"130":0,"133":0,"136":0,"140":1,"142":0,"143":0,"145":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"158":0,"160":0,"161":0,"168":0,"171":0,"174":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/errors/InvalidSourceError.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/errors/InvalidSourceError.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":1,"9":0,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"InvalidSourceError","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":24},"end":{"line":19,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":32}},"2":{"start":{"line":9,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":68}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":37}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":28}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":43}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}},"8":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":32}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":11},"end":{"line":20,"column":12}},{"start":{"line":20,"column":16},"end":{"line":20,"column":31}}]}},"code":["var NAME = \"InvalidSourceError\";","/**"," * InvalidSourceError happens when a dataSource syncronously throws"," * an exception during a get/set/call operation."," *"," * @param {Error} error - The error that was thrown."," * @private"," */","function InvalidSourceError(error) {","    this.message = \"An exception was thrown when making a request.\";","    this.stack = (new Error()).stack;","    this.innerError = error;","}","","// instanceof will be an error, but stack will be correct because its defined","// in the constructor.","InvalidSourceError.prototype = new Error();","InvalidSourceError.prototype.name = NAME;","InvalidSourceError.is = function(e) {","    return e && e.name === NAME;","};","","module.exports = InvalidSourceError;",""],"l":{"1":1,"9":1,"10":0,"11":0,"12":0,"17":1,"18":1,"19":1,"20":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":10,"column":2}}},"branchMap":{},"code":["module.exports = {","    iterateKeySet: require('./iterateKeySet'),","    toTree: require('./toTree'),","    toTreeWithUnion: require('./toTreeWithUnion'),","    pathsComplementFromTree: require('./pathsComplementFromTree'),","    pathsComplementFromLengthTree: require('./pathsComplementFromLengthTree'),","    hasIntersection: require('./hasIntersection'),","    toPaths: require('./toPaths'),","    collapse: require('./collapse')","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/iterateKeySet.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/iterateKeySet.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"iterateKeySet","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":54}}},"2":{"name":"initializeRange","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":36}}},"3":{"name":"initializeNote","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":19,"column":0},"end":{"line":86,"column":2}},"3":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":37}},"5":{"start":{"line":25,"column":4},"end":{"line":85,"column":5}},"6":{"start":{"line":26,"column":8},"end":{"line":26,"column":22}},"7":{"start":{"line":29,"column":8},"end":{"line":63,"column":42}},"8":{"start":{"line":30,"column":12},"end":{"line":33,"column":13}},"9":{"start":{"line":31,"column":16},"end":{"line":31,"column":35}},"10":{"start":{"line":32,"column":16},"end":{"line":32,"column":36}},"11":{"start":{"line":35,"column":12},"end":{"line":35,"column":63}},"12":{"start":{"line":36,"column":12},"end":{"line":39,"column":13}},"13":{"start":{"line":37,"column":16},"end":{"line":37,"column":33}},"14":{"start":{"line":38,"column":16},"end":{"line":38,"column":22}},"15":{"start":{"line":41,"column":12},"end":{"line":41,"column":46}},"16":{"start":{"line":42,"column":12},"end":{"line":42,"column":33}},"17":{"start":{"line":45,"column":12},"end":{"line":62,"column":13}},"18":{"start":{"line":46,"column":16},"end":{"line":48,"column":17}},"19":{"start":{"line":47,"column":20},"end":{"line":47,"column":46}},"20":{"start":{"line":51,"column":16},"end":{"line":53,"column":17}},"21":{"start":{"line":52,"column":20},"end":{"line":52,"column":29}},"22":{"start":{"line":55,"column":16},"end":{"line":55,"column":47}},"23":{"start":{"line":60,"column":16},"end":{"line":60,"column":35}},"24":{"start":{"line":61,"column":16},"end":{"line":61,"column":31}},"25":{"start":{"line":65,"column":8},"end":{"line":65,"column":25}},"26":{"start":{"line":69,"column":9},"end":{"line":85,"column":5}},"27":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"28":{"start":{"line":71,"column":12},"end":{"line":71,"column":42}},"29":{"start":{"line":73,"column":8},"end":{"line":76,"column":9}},"30":{"start":{"line":74,"column":12},"end":{"line":74,"column":29}},"31":{"start":{"line":75,"column":12},"end":{"line":75,"column":29}},"32":{"start":{"line":78,"column":8},"end":{"line":78,"column":34}},"33":{"start":{"line":83,"column":8},"end":{"line":83,"column":25}},"34":{"start":{"line":84,"column":8},"end":{"line":84,"column":22}},"35":{"start":{"line":88,"column":0},"end":{"line":98,"column":1}},"36":{"start":{"line":89,"column":4},"end":{"line":89,"column":41}},"37":{"start":{"line":90,"column":4},"end":{"line":92,"column":41}},"38":{"start":{"line":93,"column":4},"end":{"line":93,"column":33}},"39":{"start":{"line":94,"column":4},"end":{"line":94,"column":23}},"40":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"41":{"start":{"line":96,"column":8},"end":{"line":96,"column":26}},"42":{"start":{"line":100,"column":0},"end":{"line":105,"column":1}},"43":{"start":{"line":101,"column":4},"end":{"line":101,"column":22}},"44":{"start":{"line":102,"column":4},"end":{"line":102,"column":70}},"45":{"start":{"line":103,"column":4},"end":{"line":103,"column":44}},"46":{"start":{"line":104,"column":4},"end":{"line":104,"column":25}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":16},"end":{"line":30,"column":27}},{"start":{"line":30,"column":31},"end":{"line":30,"column":57}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":12}},{"start":{"line":36,"column":12},"end":{"line":36,"column":12}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":12}},{"start":{"line":45,"column":12},"end":{"line":45,"column":12}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":16}},{"start":{"line":46,"column":16},"end":{"line":46,"column":16}}]},"8":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":16},"end":{"line":51,"column":16}},{"start":{"line":51,"column":16},"end":{"line":51,"column":16}}]},"9":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":9},"end":{"line":69,"column":9}},{"start":{"line":69,"column":9},"end":{"line":69,"column":9}}]},"10":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]},"11":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]},"12":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":27},"end":{"line":89,"column":35}},{"start":{"line":89,"column":39},"end":{"line":89,"column":40}}]},"13":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":23},"end":{"line":90,"column":29}},{"start":{"line":91,"column":9},"end":{"line":91,"column":39}},{"start":{"line":92,"column":8},"end":{"line":92,"column":34}},{"start":{"line":92,"column":38},"end":{"line":92,"column":39}}]},"14":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"15":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":38},"end":{"line":102,"column":41}},{"start":{"line":102,"column":45},"end":{"line":102,"column":68}}]},"16":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":19},"end":{"line":103,"column":27}},{"start":{"line":103,"column":31},"end":{"line":103,"column":43}}]}},"code":["var isArray = Array.isArray;","","/**"," * Takes in a keySet and a note attempts to iterate over it."," * If the value is a primitive, the key will be returned and the note will"," * be marked done"," * If the value is an object, then each value of the range will be returned"," * and when finished the note will be marked done."," * If the value is an array, each value will be iterated over, if any of the"," * inner values are ranges, those will be iterated over.  When fully done,"," * the note will be marked done."," *"," * @param {Object|Array|String|Number} keySet -"," * @param {Object} note - The non filled note"," * @returns {String|Number|undefined} - The current iteration value."," * If undefined, then the keySet is empty"," * @public"," */","module.exports = function iterateKeySet(keySet, note) {","    if (note.isArray === undefined) {","        initializeNote(keySet, note);","    }","","    // Array iteration","    if (note.isArray) {","        var nextValue;","","        // Cycle through the array and pluck out the next value.","        do {","            if (note.loaded && note.rangeOffset > note.to) {","                ++note.arrayOffset;","                note.loaded = false;","            }","","            var idx = note.arrayOffset, length = keySet.length;","            if (idx >= length) {","                note.done = true;","                break;","            }","","            var el = keySet[note.arrayOffset];","            var type = typeof el;","","            // Inner range iteration.","            if (type === 'object') {","                if (!note.loaded) {","                    initializeRange(el, note);","                }","","                // Empty to/from","                if (note.empty) {","                    continue;","                }","","                nextValue = note.rangeOffset++;","            }","","            // Primitive iteration in array.","            else {","                ++note.arrayOffset;","                nextValue = el;","            }","        } while (nextValue === undefined);","","        return nextValue;","    }","","    // Range iteration","    else if (note.isObject) {","        if (!note.loaded) {","            initializeRange(keySet, note);","        }","        if (note.rangeOffset > note.to) {","            note.done = true;","            return undefined;","        }","","        return note.rangeOffset++;","    }","","    // Primitive value","    else {","        note.done = true;","        return keySet;","    }","};","","function initializeRange(key, memo) {","    var from = memo.from = key.from || 0;","    var to = memo.to = key.to ||","        (typeof key.length === 'number' &&","        memo.from + key.length - 1 || 0);","    memo.rangeOffset = memo.from;","    memo.loaded = true;","    if (from > to) {","        memo.empty = true;","    }","}","","function initializeNote(key, note) {","    note.done = false;","    var isObject = note.isObject = !!(key && typeof key === 'object');","    note.isArray = isObject && isArray(key);","    note.arrayOffset = 0;","}",""],"l":{"1":1,"19":1,"20":0,"21":0,"25":0,"26":0,"29":0,"30":0,"31":0,"32":0,"35":0,"36":0,"37":0,"38":0,"41":0,"42":0,"45":0,"46":0,"47":0,"51":0,"52":0,"55":0,"60":0,"61":0,"65":0,"69":0,"70":0,"71":0,"73":0,"74":0,"75":0,"78":0,"83":0,"84":0,"88":1,"89":0,"90":0,"93":0,"94":0,"95":0,"96":0,"100":1,"101":0,"102":0,"103":0,"104":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/toTree.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/toTree.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"toTree","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":40}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":24},"end":{"line":9,"column":44}}},"3":{"name":"innerToTree","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":54}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":28}},"3":{"start":{"line":8,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":9,"column":4},"end":{"line":12,"column":11}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":34}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":19}},"7":{"start":{"line":15,"column":0},"end":{"line":43,"column":1}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":29}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":26}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":12}},"11":{"start":{"line":20,"column":4},"end":{"line":20,"column":30}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":46}},"13":{"start":{"line":24,"column":4},"end":{"line":42,"column":33}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":29}},"15":{"start":{"line":27,"column":8},"end":{"line":33,"column":9}},"16":{"start":{"line":28,"column":12},"end":{"line":32,"column":13}},"17":{"start":{"line":29,"column":16},"end":{"line":29,"column":33}},"18":{"start":{"line":31,"column":16},"end":{"line":31,"column":38}},"19":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"20":{"start":{"line":36,"column":12},"end":{"line":36,"column":47}},"21":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"22":{"start":{"line":40,"column":12},"end":{"line":40,"column":54}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":12}},{"start":{"line":28,"column":12},"end":{"line":28,"column":12}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":35,"column":8}},{"start":{"line":35,"column":8},"end":{"line":35,"column":8}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]}},"code":["var iterateKeySet = require('./../lib/iterateKeySet');","var isArray = Array.isArray;","","/**"," * @param {Array} paths -"," * @returns {Object} -"," */","module.exports = function toTree(paths) {","    return paths.reduce(function(acc, path) {","        innerToTree(acc, path, 0);","        return acc;","    }, {});","};","","function innerToTree(seed, path, depth) {","","    var keySet = path[depth];","    var iteratorNote = {};","    var key;","    var nextDepth = depth + 1;","","    key = iterateKeySet(keySet, iteratorNote);","","    do {","","        var next = seed[key];","        if (!next) {","            if (nextDepth === path.length) {","                seed[key] = null;","            } else {","                next = seed[key] = {};","            }","        }","","        if (nextDepth < path.length) {","            innerToTree(next, path, nextDepth);","        }","","        if (!iteratorNote.done) {","            key = iterateKeySet(keySet, iteratorNote);","        }","    } while (!iteratorNote.done);","}","",""],"l":{"1":1,"2":1,"8":1,"9":0,"10":0,"11":0,"15":1,"17":0,"18":0,"19":0,"20":0,"22":0,"24":0,"26":0,"27":0,"28":0,"29":0,"31":0,"35":0,"36":0,"39":0,"40":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/toTreeWithUnion.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/toTreeWithUnion.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":[""]},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/pathsComplementFromTree.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/pathsComplementFromTree.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"pathsComplementFromTree","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":51}},"2":{"start":{"line":15,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":17}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":23}},"5":{"start":{"line":19,"column":4},"end":{"line":24,"column":5}},"6":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"7":{"start":{"line":22,"column":12},"end":{"line":22,"column":40}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":15}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]}},"code":["var hasIntersection = require('./hasIntersection');","","/**"," * Compares the paths passed in with the tree.  Any of the paths that are in"," * the tree will be stripped from the paths."," *"," * **Does not mutate** the incoming paths object."," * **Proper subset** only matching."," *"," * @param {Array} paths - A list of paths (complex or simple) to strip the"," * intersection"," * @param {Object} tree -"," * @public"," */","module.exports = function pathsComplementFromTree(paths, tree) {","    var out = [];","    var outLength = -1;","","    for (var i = 0, len = paths.length; i < len; ++i) {","        // If this does not intersect then add it to the output.","        if (!hasIntersection(tree, paths[i], 0)) {","            out[++outLength] = paths[i];","        }","    }","    return out;","};","",""],"l":{"1":1,"15":1,"16":0,"17":0,"19":0,"21":0,"22":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/hasIntersection.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/hasIntersection.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"hasIntersection","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":9,"column":0},"end":{"line":47,"column":2}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":23}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":26}},"5":{"start":{"line":15,"column":4},"end":{"line":44,"column":5}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":30}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":33}},"8":{"start":{"line":20,"column":8},"end":{"line":39,"column":9}},"9":{"start":{"line":21,"column":12},"end":{"line":21,"column":26}},"10":{"start":{"line":22,"column":12},"end":{"line":22,"column":52}},"11":{"start":{"line":23,"column":12},"end":{"line":23,"column":38}},"12":{"start":{"line":27,"column":12},"end":{"line":35,"column":47}},"13":{"start":{"line":28,"column":16},"end":{"line":28,"column":45}},"14":{"start":{"line":29,"column":16},"end":{"line":29,"column":48}},"15":{"start":{"line":31,"column":16},"end":{"line":33,"column":17}},"16":{"start":{"line":32,"column":20},"end":{"line":32,"column":72}},"17":{"start":{"line":34,"column":16},"end":{"line":34,"column":52}},"18":{"start":{"line":38,"column":12},"end":{"line":38,"column":18}},"19":{"start":{"line":42,"column":8},"end":{"line":42,"column":31}},"20":{"start":{"line":43,"column":8},"end":{"line":43,"column":43}},"21":{"start":{"line":46,"column":4},"end":{"line":46,"column":22}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":10},"end":{"line":15,"column":20}},{"start":{"line":15,"column":24},"end":{"line":15,"column":43}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"3":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":15}},{"start":{"line":20,"column":19},"end":{"line":20,"column":39}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":16},"end":{"line":31,"column":16}},{"start":{"line":31,"column":16},"end":{"line":31,"column":16}}]},"5":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":21},"end":{"line":35,"column":31}},{"start":{"line":35,"column":35},"end":{"line":35,"column":45}}]}},"code":["var iterateKeySet = require('./iterateKeySet');","","/**"," * Tests to see if the intersection should be stripped from the"," * total paths.  The only way this happens currently is if the entirety"," * of the path is contained in the tree."," * @private"," */","module.exports = function hasIntersection(tree, path, depth) {","    var current = tree;","    var intersects = true;","","    // Continue iteratively going down a path until a complex key is","    // encountered, then recurse.","    for (;intersects && depth < path.length; ++depth) {","        var key = path[depth];","        var keyType = typeof key;","","        // We have to iterate key set","        if (key && keyType === 'object') {","            var note = {};","            var innerKey = iterateKeySet(key, note);","            var nextDepth = depth + 1;","","            // Loop through the innerKeys setting the intersects flag","            // to each result.  Break out on false.","            do {","                var next = current[innerKey];","                intersects = next !== undefined;","","                if (intersects) {","                    intersects = hasIntersection(next, path, nextDepth);","                }","                innerKey = iterateKeySet(key, note);","            } while (intersects && !note.done);","","            // Since we recursed, we shall not pass any further!","            break;","        }","","        // Its a simple key, just move forward with the testing.","        current = current[key];","        intersects = current !== undefined;","    }","","    return intersects;","};",""],"l":{"1":1,"9":1,"10":0,"11":0,"15":0,"16":0,"17":0,"20":0,"21":0,"22":0,"23":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"38":0,"42":0,"43":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/pathsComplementFromLengthTree.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/pathsComplementFromLengthTree.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"pathsComplementFromLengthTree","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":51}},"2":{"start":{"line":15,"column":0},"end":{"line":27,"column":2}},"3":{"start":{"line":16,"column":4},"end":{"line":16,"column":17}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":23}},"5":{"start":{"line":19,"column":4},"end":{"line":25,"column":5}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":28}},"7":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"8":{"start":{"line":23,"column":12},"end":{"line":23,"column":36}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":15}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]}},"code":["var hasIntersection = require('./hasIntersection');","","/**"," * Compares the paths passed in with the tree.  Any of the paths that are in"," * the tree will be stripped from the paths."," *"," * **Does not mutate** the incoming paths object."," * **Proper subset** only matching."," *"," * @param {Array} paths - A list of paths (complex or simple) to strip the"," * intersection"," * @param {Object} tree -"," * @public"," */","module.exports = function pathsComplementFromLengthTree(paths, tree) {","    var out = [];","    var outLength = -1;","","    for (var i = 0, len = paths.length; i < len; ++i) {","        // If this does not intersect then add it to the output.","        var path = paths[i];","        if (!hasIntersection(tree[path.length], path, 0)) {","            out[++outLength] = path;","        }","    }","    return out;","};","",""],"l":{"1":1,"15":1,"16":0,"17":0,"19":0,"21":0,"22":0,"23":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/toPaths.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/toPaths.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"toPaths","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":43}}},"2":{"name":"isObject","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":25}}},"3":{"name":"collapsePathMap","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":49}}},"4":{"name":"collapsePathSetIndexes","line":120,"loc":{"start":{"line":120,"column":0},"end":{"line":120,"column":41}}},"5":{"name":"collapseIndex","line":143,"loc":{"start":{"line":143,"column":0},"end":{"line":143,"column":31}}},"6":{"name":"sortListAscending","line":183,"loc":{"start":{"line":183,"column":0},"end":{"line":183,"column":33}}},"7":{"name":"getSortedKeys","line":188,"loc":{"start":{"line":188,"column":0},"end":{"line":188,"column":40}}},"8":{"name":"getHashCode","line":199,"loc":{"start":{"line":199,"column":0},"end":{"line":199,"column":26}}},"9":{"name":"isNumber","line":213,"loc":{"start":{"line":213,"column":0},"end":{"line":213,"column":23}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":28}},"3":{"start":{"line":5,"column":0},"end":{"line":20,"column":2}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":16}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":22}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":27}},"7":{"start":{"line":9,"column":4},"end":{"line":18,"column":5}},"8":{"start":{"line":10,"column":8},"end":{"line":17,"column":9}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":79}},"10":{"start":{"line":12,"column":12},"end":{"line":12,"column":32}},"11":{"start":{"line":13,"column":12},"end":{"line":13,"column":42}},"12":{"start":{"line":14,"column":12},"end":{"line":16,"column":13}},"13":{"start":{"line":15,"column":16},"end":{"line":15,"column":87}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"15":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"16":{"start":{"line":23,"column":4},"end":{"line":23,"column":59}},"17":{"start":{"line":26,"column":0},"end":{"line":118,"column":1}},"18":{"start":{"line":28,"column":4},"end":{"line":28,"column":12}},"19":{"start":{"line":29,"column":4},"end":{"line":29,"column":42}},"20":{"start":{"line":30,"column":4},"end":{"line":30,"column":35}},"21":{"start":{"line":32,"column":4},"end":{"line":32,"column":19}},"22":{"start":{"line":33,"column":4},"end":{"line":33,"column":24}},"23":{"start":{"line":34,"column":4},"end":{"line":34,"column":23}},"24":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"25":{"start":{"line":37,"column":4},"end":{"line":37,"column":26}},"26":{"start":{"line":39,"column":4},"end":{"line":43,"column":34}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":17}},"28":{"start":{"line":46,"column":4},"end":{"line":46,"column":22}},"29":{"start":{"line":48,"column":4},"end":{"line":112,"column":5}},"30":{"start":{"line":50,"column":8},"end":{"line":50,"column":55}},"31":{"start":{"line":52,"column":8},"end":{"line":70,"column":9}},"32":{"start":{"line":53,"column":12},"end":{"line":53,"column":40}},"33":{"start":{"line":54,"column":12},"end":{"line":54,"column":71}},"34":{"start":{"line":55,"column":12},"end":{"line":55,"column":35}},"35":{"start":{"line":56,"column":12},"end":{"line":64,"column":13}},"36":{"start":{"line":57,"column":16},"end":{"line":57,"column":40}},"37":{"start":{"line":59,"column":16},"end":{"line":59,"column":46}},"38":{"start":{"line":60,"column":16},"end":{"line":63,"column":18}},"39":{"start":{"line":65,"column":12},"end":{"line":65,"column":53}},"40":{"start":{"line":67,"column":12},"end":{"line":69,"column":39}},"41":{"start":{"line":72,"column":8},"end":{"line":101,"column":9}},"42":{"start":{"line":74,"column":12},"end":{"line":74,"column":36}},"43":{"start":{"line":75,"column":12},"end":{"line":75,"column":32}},"44":{"start":{"line":76,"column":12},"end":{"line":76,"column":35}},"45":{"start":{"line":77,"column":12},"end":{"line":77,"column":42}},"46":{"start":{"line":79,"column":12},"end":{"line":100,"column":13}},"47":{"start":{"line":81,"column":16},"end":{"line":81,"column":39}},"48":{"start":{"line":82,"column":16},"end":{"line":82,"column":34}},"49":{"start":{"line":83,"column":16},"end":{"line":83,"column":46}},"50":{"start":{"line":84,"column":16},"end":{"line":84,"column":41}},"51":{"start":{"line":86,"column":16},"end":{"line":99,"column":17}},"52":{"start":{"line":88,"column":20},"end":{"line":88,"column":52}},"53":{"start":{"line":89,"column":20},"end":{"line":89,"column":38}},"54":{"start":{"line":90,"column":20},"end":{"line":90,"column":50}},"55":{"start":{"line":91,"column":20},"end":{"line":91,"column":63}},"56":{"start":{"line":92,"column":20},"end":{"line":92,"column":81}},"57":{"start":{"line":94,"column":20},"end":{"line":96,"column":21}},"58":{"start":{"line":95,"column":24},"end":{"line":95,"column":79}},"59":{"start":{"line":98,"column":20},"end":{"line":98,"column":61}},"60":{"start":{"line":103,"column":8},"end":{"line":103,"column":55}},"61":{"start":{"line":104,"column":8},"end":{"line":108,"column":9}},"62":{"start":{"line":105,"column":12},"end":{"line":105,"column":50}},"63":{"start":{"line":107,"column":12},"end":{"line":107,"column":48}},"64":{"start":{"line":109,"column":8},"end":{"line":111,"column":9}},"65":{"start":{"line":110,"column":12},"end":{"line":110,"column":61}},"66":{"start":{"line":114,"column":4},"end":{"line":117,"column":6}},"67":{"start":{"line":120,"column":0},"end":{"line":133,"column":1}},"68":{"start":{"line":122,"column":4},"end":{"line":122,"column":25}},"69":{"start":{"line":123,"column":4},"end":{"line":123,"column":37}},"70":{"start":{"line":125,"column":4},"end":{"line":130,"column":5}},"71":{"start":{"line":126,"column":8},"end":{"line":126,"column":42}},"72":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"73":{"start":{"line":128,"column":12},"end":{"line":128,"column":57}},"74":{"start":{"line":132,"column":4},"end":{"line":132,"column":19}},"75":{"start":{"line":143,"column":0},"end":{"line":181,"column":1}},"76":{"start":{"line":147,"column":4},"end":{"line":147,"column":22}},"77":{"start":{"line":148,"column":4},"end":{"line":148,"column":37}},"78":{"start":{"line":149,"column":4},"end":{"line":149,"column":37}},"79":{"start":{"line":151,"column":4},"end":{"line":162,"column":5}},"80":{"start":{"line":153,"column":8},"end":{"line":153,"column":35}},"81":{"start":{"line":155,"column":8},"end":{"line":158,"column":9}},"82":{"start":{"line":156,"column":12},"end":{"line":156,"column":34}},"83":{"start":{"line":157,"column":12},"end":{"line":157,"column":18}},"84":{"start":{"line":161,"column":8},"end":{"line":161,"column":45}},"85":{"start":{"line":164,"column":4},"end":{"line":178,"column":5}},"86":{"start":{"line":166,"column":8},"end":{"line":166,"column":39}},"87":{"start":{"line":168,"column":8},"end":{"line":168,"column":29}},"88":{"start":{"line":169,"column":8},"end":{"line":169,"column":34}},"89":{"start":{"line":172,"column":8},"end":{"line":177,"column":9}},"90":{"start":{"line":173,"column":12},"end":{"line":176,"column":14}},"91":{"start":{"line":180,"column":4},"end":{"line":180,"column":18}},"92":{"start":{"line":183,"column":0},"end":{"line":185,"column":1}},"93":{"start":{"line":184,"column":4},"end":{"line":184,"column":17}},"94":{"start":{"line":188,"column":0},"end":{"line":197,"column":1}},"95":{"start":{"line":189,"column":4},"end":{"line":189,"column":16}},"96":{"start":{"line":190,"column":4},"end":{"line":192,"column":5}},"97":{"start":{"line":191,"column":8},"end":{"line":191,"column":26}},"98":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"99":{"start":{"line":194,"column":8},"end":{"line":194,"column":24}},"100":{"start":{"line":196,"column":4},"end":{"line":196,"column":15}},"101":{"start":{"line":199,"column":0},"end":{"line":207,"column":1}},"102":{"start":{"line":200,"column":4},"end":{"line":200,"column":20}},"103":{"start":{"line":201,"column":4},"end":{"line":201,"column":19}},"104":{"start":{"line":202,"column":4},"end":{"line":202,"column":27}},"105":{"start":{"line":203,"column":4},"end":{"line":205,"column":5}},"106":{"start":{"line":204,"column":8},"end":{"line":204,"column":58}},"107":{"start":{"line":206,"column":4},"end":{"line":206,"column":24}},"108":{"start":{"line":213,"column":0},"end":{"line":219,"column":1}},"109":{"start":{"line":218,"column":4},"end":{"line":218,"column":61}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":8}},{"start":{"line":10,"column":8},"end":{"line":10,"column":8}}]},"2":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":12},"end":{"line":10,"column":28}},{"start":{"line":10,"column":32},"end":{"line":10,"column":67}}]},"3":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":25}},{"start":{"line":23,"column":29},"end":{"line":23,"column":58}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":12}},{"start":{"line":56,"column":12},"end":{"line":56,"column":12}}]},"6":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":25}},{"start":{"line":68,"column":16},"end":{"line":68,"column":52}},{"start":{"line":69,"column":16},"end":{"line":69,"column":38}}]},"7":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":12}},{"start":{"line":79,"column":12},"end":{"line":79,"column":12}}]},"8":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":38},"end":{"line":92,"column":54}},{"start":{"line":92,"column":58},"end":{"line":92,"column":65}},{"start":{"line":92,"column":69},"end":{"line":92,"column":80}}]},"9":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":8}},{"start":{"line":104,"column":8},"end":{"line":104,"column":8}}]},"10":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":8}},{"start":{"line":127,"column":8},"end":{"line":127,"column":8}}]},"11":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":8}},{"start":{"line":155,"column":8},"end":{"line":155,"column":8}}]},"12":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"13":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":172,"column":8}},{"start":{"line":172,"column":8},"end":{"line":172,"column":8}}]},"14":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"15":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":11},"end":{"line":218,"column":24}},{"start":{"line":218,"column":28},"end":{"line":218,"column":60}}]}},"code":["var isArray = Array.isArray;","var typeOfObject = \"object\";","","/* jshint forin: false */","module.exports = function toPaths(lengths) {","    var pathmap;","    var allPaths = [];","    var allPathsLength = 0;","    for (var length in lengths) {","        if (isNumber(length) && isObject(pathmap = lengths[length])) {","            var paths = collapsePathMap(pathmap, 0, parseInt(length, 10)).sets;","            var pathsIndex = -1;","            var pathsCount = paths.length;","            while (++pathsIndex < pathsCount) {","                allPaths[allPathsLength++] = collapsePathSetIndexes(paths[pathsIndex]);","            }","        }","    }","    return allPaths;","};","","function isObject(value) {","    return value !== null && typeof value === typeOfObject;","}","","function collapsePathMap(pathmap, depth, length) {","","    var key;","    var code = getHashCode(String(depth));","    var subs = Object.create(null);","","    var codes = [];","    var codesIndex = -1;","    var codesCount = 0;","","    var pathsets = [];","    var pathsetsCount = 0;","","    var subPath, subCode,","        subKeys, subKeysIndex, subKeysCount,","        subSets, subSetsIndex, subSetsCount,","        pathset, pathsetIndex, pathsetCount,","        firstSubKey, pathsetClone;","","    subKeys = [];","    subKeysIndex = -1;","","    if (depth < length - 1) {","","        subKeysCount = getSortedKeys(pathmap, subKeys);","","        while (++subKeysIndex < subKeysCount) {","            key = subKeys[subKeysIndex];","            subPath = collapsePathMap(pathmap[key], depth + 1, length);","            subCode = subPath.code;","            if(subs[subCode]) {","                subPath = subs[subCode];","            } else {","                codes[codesCount++] = subCode;","                subPath = subs[subCode] = {","                    keys: [],","                    sets: subPath.sets","                };","            }","            code = getHashCode(code + key + subCode);","","            isNumber(key) &&","                subPath.keys.push(parseInt(key, 10)) ||","                subPath.keys.push(key);","        }","","        while(++codesIndex < codesCount) {","","            key = codes[codesIndex];","            subPath = subs[key];","            subKeys = subPath.keys;","            subKeysCount = subKeys.length;","","            if (subKeysCount > 0) {","","                subSets = subPath.sets;","                subSetsIndex = -1;","                subSetsCount = subSets.length;","                firstSubKey = subKeys[0];","","                while (++subSetsIndex < subSetsCount) {","","                    pathset = subSets[subSetsIndex];","                    pathsetIndex = -1;","                    pathsetCount = pathset.length;","                    pathsetClone = new Array(pathsetCount + 1);","                    pathsetClone[0] = subKeysCount > 1 && subKeys || firstSubKey;","","                    while (++pathsetIndex < pathsetCount) {","                        pathsetClone[pathsetIndex + 1] = pathset[pathsetIndex];","                    }","","                    pathsets[pathsetsCount++] = pathsetClone;","                }","            }","        }","    } else {","        subKeysCount = getSortedKeys(pathmap, subKeys);","        if (subKeysCount > 1) {","            pathsets[pathsetsCount++] = [subKeys];","        } else {","            pathsets[pathsetsCount++] = subKeys;","        }","        while (++subKeysIndex < subKeysCount) {","            code = getHashCode(code + subKeys[subKeysIndex]);","        }","    }","","    return {","        code: code,","        sets: pathsets","    };","}","","function collapsePathSetIndexes(pathset) {","","    var keysetIndex = -1;","    var keysetCount = pathset.length;","","    while (++keysetIndex < keysetCount) {","        var keyset = pathset[keysetIndex];","        if (isArray(keyset)) {","            pathset[keysetIndex] = collapseIndex(keyset);","        }","    }","","    return pathset;","}","","/**"," * Collapse range indexers, e.g. when there is a continuous"," * range in an array, turn it into an object instead:"," *"," * [1,2,3,4,5,6] => {\"from\":1, \"to\":6}"," *"," * @private"," */","function collapseIndex(keyset) {","","    // Do we need to dedupe an indexer keyset if they're duplicate consecutive integers?","    // var hash = {};","    var keyIndex = -1;","    var keyCount = keyset.length - 1;","    var isSparseRange = keyCount > 0;","","    while (++keyIndex <= keyCount) {","","        var key = keyset[keyIndex];","","        if (!isNumber(key) /* || hash[key] === true*/ ) {","            isSparseRange = false;","            break;","        }","        // hash[key] = true;","        // Cast number indexes to integers.","        keyset[keyIndex] = parseInt(key, 10);","    }","","    if (isSparseRange === true) {","","        keyset.sort(sortListAscending);","","        var from = keyset[0];","        var to = keyset[keyCount];","","        // If we re-introduce deduped integer indexers, change this comparson to \"===\".","        if (to - from <= keyCount) {","            return {","                from: from,","                to: to","            };","        }","    }","","    return keyset;","}","","function sortListAscending(a, b) {","    return a - b;","}","","/* jshint forin: false */","function getSortedKeys(map, keys, sort) {","    var len = 0;","    for (var key in map) {","        keys[len++] = key;","    }","    if (len > 1) {","        keys.sort(sort);","    }","    return len;","}","","function getHashCode(key) {","    var code = 5381;","    var index = -1;","    var count = key.length;","    while (++index < count) {","        code = (code << 5) + code + key.charCodeAt(index);","    }","    return String(code);","}","","/**"," * Return true if argument is a number or can be cast to a number"," * @private"," */","function isNumber(val) {","    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")","    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")","    // subtraction forces infinities to NaN","    // adding 1 corrects loss of precision from parseFloat (#15100)","    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;","}","",""],"l":{"1":1,"2":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"19":0,"22":1,"23":0,"26":1,"28":0,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0,"37":0,"39":0,"45":0,"46":0,"48":0,"50":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"60":0,"65":0,"67":0,"72":0,"74":0,"75":0,"76":0,"77":0,"79":0,"81":0,"82":0,"83":0,"84":0,"86":0,"88":0,"89":0,"90":0,"91":0,"92":0,"94":0,"95":0,"98":0,"103":0,"104":0,"105":0,"107":0,"109":0,"110":0,"114":0,"120":1,"122":0,"123":0,"125":0,"126":0,"127":0,"128":0,"132":0,"143":1,"147":0,"148":0,"149":0,"151":0,"153":0,"155":0,"156":0,"157":0,"161":0,"164":0,"166":0,"168":0,"169":0,"172":0,"173":0,"180":0,"183":1,"184":0,"188":1,"189":0,"190":0,"191":0,"193":0,"194":0,"196":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"206":0,"213":1,"218":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/collapse.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-utils/lib/collapse.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"collapse","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":42}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":15},"end":{"line":6,"column":35}}},"3":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":33}},"3":{"start":{"line":4,"column":0},"end":{"line":22,"column":2}},"4":{"start":{"line":5,"column":4},"end":{"line":13,"column":15}},"5":{"start":{"line":7,"column":12},"end":{"line":7,"column":34}},"6":{"start":{"line":8,"column":12},"end":{"line":10,"column":13}},"7":{"start":{"line":9,"column":16},"end":{"line":9,"column":30}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":32}},"9":{"start":{"line":12,"column":12},"end":{"line":12,"column":23}},"10":{"start":{"line":15,"column":4},"end":{"line":19,"column":11}},"11":{"start":{"line":18,"column":12},"end":{"line":18,"column":72}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":32}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":12},"end":{"line":8,"column":12}},{"start":{"line":8,"column":12},"end":{"line":8,"column":12}}]}},"code":["var toPaths = require('./toPaths');","var toTree = require('./toTree');","","module.exports = function collapse(paths) {","    var collapseMap = paths.","        reduce(function(acc, path) {","            var len = path.length;","            if (!acc[len]) {","                acc[len] = [];","            }","            acc[len].push(path);","            return acc;","        }, {});","","    Object.","        keys(collapseMap).","        forEach(function(collapseKey) {","            collapseMap[collapseKey] = toTree(collapseMap[collapseKey]);","        });","","    return toPaths(collapseMap);","};",""],"l":{"1":1,"2":1,"4":1,"5":0,"7":0,"8":0,"9":0,"11":0,"12":0,"15":0,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-map.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-map.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"arrayMap","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":2,"column":4},"end":{"line":2,"column":15}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":25}},"4":{"start":{"line":4,"column":4},"end":{"line":4,"column":30}},"5":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"6":{"start":{"line":6,"column":8},"end":{"line":6,"column":49}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":18}}},"branchMap":{},"code":["module.exports = function arrayMap(array, selector) {","    var i = -1;","    var n = array.length;","    var array2 = new Array(n);","    while (++i < n) {","        array2[i] = selector(array[i], i, array);","    }","    return array2;","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"8":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/setJSONGraphs.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/setJSONGraphs.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"setJSONGraphs","line":27,"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":97}}},"2":{"name":"setJSONGraphPathSet","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":82,"column":54}}},"3":{"name":"setReference","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":130,"column":54}}},"4":{"name":"setNode","line":181,"loc":{"start":{"line":181,"column":0},"end":{"line":184,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":49}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":56}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":57}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":54}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":52}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":63}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":64}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":68}},"16":{"start":{"line":27,"column":0},"end":{"line":75,"column":2}},"17":{"start":{"line":29,"column":4},"end":{"line":29,"column":32}},"18":{"start":{"line":30,"column":4},"end":{"line":30,"column":24}},"19":{"start":{"line":31,"column":4},"end":{"line":31,"column":36}},"20":{"start":{"line":32,"column":4},"end":{"line":32,"column":37}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":32}},"22":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}},"23":{"start":{"line":36,"column":4},"end":{"line":36,"column":27}},"24":{"start":{"line":37,"column":4},"end":{"line":37,"column":27}},"25":{"start":{"line":38,"column":4},"end":{"line":38,"column":28}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":28}},"27":{"start":{"line":40,"column":4},"end":{"line":40,"column":36}},"28":{"start":{"line":41,"column":4},"end":{"line":41,"column":59}},"29":{"start":{"line":43,"column":4},"end":{"line":65,"column":5}},"30":{"start":{"line":45,"column":8},"end":{"line":45,"column":75}},"31":{"start":{"line":46,"column":8},"end":{"line":46,"column":44}},"32":{"start":{"line":47,"column":8},"end":{"line":47,"column":52}},"33":{"start":{"line":49,"column":8},"end":{"line":49,"column":27}},"34":{"start":{"line":50,"column":8},"end":{"line":50,"column":37}},"35":{"start":{"line":52,"column":8},"end":{"line":64,"column":9}},"36":{"start":{"line":54,"column":12},"end":{"line":54,"column":40}},"37":{"start":{"line":55,"column":12},"end":{"line":55,"column":36}},"38":{"start":{"line":57,"column":12},"end":{"line":63,"column":14}},"39":{"start":{"line":67,"column":4},"end":{"line":67,"column":38}},"40":{"start":{"line":68,"column":4},"end":{"line":68,"column":47}},"41":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"42":{"start":{"line":71,"column":8},"end":{"line":71,"column":28}},"43":{"start":{"line":74,"column":4},"end":{"line":74,"column":44}},"44":{"start":{"line":78,"column":0},"end":{"line":125,"column":1}},"45":{"start":{"line":84,"column":4},"end":{"line":84,"column":18}},"46":{"start":{"line":85,"column":4},"end":{"line":85,"column":41}},"47":{"start":{"line":86,"column":4},"end":{"line":86,"column":29}},"48":{"start":{"line":87,"column":4},"end":{"line":87,"column":42}},"49":{"start":{"line":88,"column":4},"end":{"line":88,"column":45}},"50":{"start":{"line":90,"column":4},"end":{"line":124,"column":19}},"51":{"start":{"line":92,"column":8},"end":{"line":92,"column":36}},"52":{"start":{"line":94,"column":8},"end":{"line":98,"column":10}},"53":{"start":{"line":100,"column":8},"end":{"line":100,"column":35}},"54":{"start":{"line":101,"column":8},"end":{"line":101,"column":36}},"55":{"start":{"line":102,"column":8},"end":{"line":102,"column":51}},"56":{"start":{"line":103,"column":8},"end":{"line":103,"column":34}},"57":{"start":{"line":104,"column":8},"end":{"line":104,"column":36}},"58":{"start":{"line":105,"column":8},"end":{"line":118,"column":9}},"59":{"start":{"line":106,"column":12},"end":{"line":117,"column":13}},"60":{"start":{"line":107,"column":16},"end":{"line":112,"column":18}},"61":{"start":{"line":114,"column":16},"end":{"line":114,"column":39}},"62":{"start":{"line":115,"column":16},"end":{"line":115,"column":85}},"63":{"start":{"line":116,"column":16},"end":{"line":116,"column":81}},"64":{"start":{"line":119,"column":8},"end":{"line":119,"column":42}},"65":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"66":{"start":{"line":121,"column":12},"end":{"line":121,"column":18}},"67":{"start":{"line":123,"column":8},"end":{"line":123,"column":45}},"68":{"start":{"line":128,"column":0},"end":{"line":179,"column":1}},"69":{"start":{"line":132,"column":4},"end":{"line":132,"column":31}},"70":{"start":{"line":133,"column":4},"end":{"line":133,"column":50}},"71":{"start":{"line":134,"column":4},"end":{"line":134,"column":55}},"72":{"start":{"line":136,"column":4},"end":{"line":140,"column":5}},"73":{"start":{"line":137,"column":8},"end":{"line":137,"column":47}},"74":{"start":{"line":138,"column":8},"end":{"line":138,"column":39}},"75":{"start":{"line":139,"column":8},"end":{"line":139,"column":55}},"76":{"start":{"line":142,"column":4},"end":{"line":142,"column":23}},"77":{"start":{"line":144,"column":4},"end":{"line":144,"column":18}},"78":{"start":{"line":145,"column":4},"end":{"line":145,"column":25}},"79":{"start":{"line":146,"column":4},"end":{"line":146,"column":37}},"80":{"start":{"line":147,"column":4},"end":{"line":147,"column":29}},"81":{"start":{"line":148,"column":4},"end":{"line":148,"column":46}},"82":{"start":{"line":150,"column":4},"end":{"line":166,"column":30}},"83":{"start":{"line":151,"column":8},"end":{"line":151,"column":35}},"84":{"start":{"line":152,"column":8},"end":{"line":152,"column":35}},"85":{"start":{"line":153,"column":8},"end":{"line":157,"column":10}},"86":{"start":{"line":158,"column":8},"end":{"line":158,"column":26}},"87":{"start":{"line":159,"column":8},"end":{"line":162,"column":9}},"88":{"start":{"line":160,"column":12},"end":{"line":160,"column":40}},"89":{"start":{"line":161,"column":12},"end":{"line":161,"column":27}},"90":{"start":{"line":163,"column":8},"end":{"line":163,"column":28}},"91":{"start":{"line":164,"column":8},"end":{"line":164,"column":29}},"92":{"start":{"line":165,"column":8},"end":{"line":165,"column":35}},"93":{"start":{"line":168,"column":4},"end":{"line":168,"column":32}},"94":{"start":{"line":170,"column":4},"end":{"line":176,"column":5}},"95":{"start":{"line":171,"column":8},"end":{"line":171,"column":47}},"96":{"start":{"line":172,"column":8},"end":{"line":172,"column":42}},"97":{"start":{"line":173,"column":8},"end":{"line":173,"column":43}},"98":{"start":{"line":174,"column":8},"end":{"line":174,"column":36}},"99":{"start":{"line":175,"column":8},"end":{"line":175,"column":41}},"100":{"start":{"line":178,"column":4},"end":{"line":178,"column":50}},"101":{"start":{"line":181,"column":0},"end":{"line":230,"column":1}},"102":{"start":{"line":186,"column":4},"end":{"line":186,"column":26}},"103":{"start":{"line":188,"column":4},"end":{"line":205,"column":5}},"104":{"start":{"line":190,"column":8},"end":{"line":193,"column":10}},"105":{"start":{"line":195,"column":8},"end":{"line":195,"column":26}},"106":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"107":{"start":{"line":198,"column":12},"end":{"line":198,"column":27}},"108":{"start":{"line":201,"column":8},"end":{"line":201,"column":28}},"109":{"start":{"line":202,"column":8},"end":{"line":202,"column":29}},"110":{"start":{"line":203,"column":8},"end":{"line":203,"column":35}},"111":{"start":{"line":204,"column":8},"end":{"line":204,"column":26}},"112":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"113":{"start":{"line":208,"column":8},"end":{"line":208,"column":54}},"114":{"start":{"line":211,"column":4},"end":{"line":222,"column":5}},"115":{"start":{"line":212,"column":8},"end":{"line":216,"column":9}},"116":{"start":{"line":213,"column":12},"end":{"line":213,"column":78}},"117":{"start":{"line":214,"column":15},"end":{"line":216,"column":9}},"118":{"start":{"line":215,"column":12},"end":{"line":215,"column":30}},"119":{"start":{"line":218,"column":8},"end":{"line":218,"column":22}},"120":{"start":{"line":219,"column":8},"end":{"line":219,"column":32}},"121":{"start":{"line":220,"column":8},"end":{"line":220,"column":27}},"122":{"start":{"line":221,"column":8},"end":{"line":221,"column":54}},"123":{"start":{"line":224,"column":4},"end":{"line":227,"column":6}},"124":{"start":{"line":229,"column":4},"end":{"line":229,"column":50}}},"branchMap":{"1":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"2":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":37}},{"start":{"line":70,"column":41},"end":{"line":70,"column":70}}]},"3":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":12}},{"start":{"line":106,"column":12},"end":{"line":106,"column":12}}]},"5":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"6":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"7":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":8}},{"start":{"line":159,"column":8},"end":{"line":159,"column":8}}]},"8":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"9":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":23},"end":{"line":171,"column":41}},{"start":{"line":171,"column":45},"end":{"line":171,"column":46}}]},"10":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":197,"column":8}},{"start":{"line":197,"column":8},"end":{"line":197,"column":8}}]},"11":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"12":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"13":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":8},"end":{"line":212,"column":8}},{"start":{"line":212,"column":8},"end":{"line":212,"column":8}}]},"14":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":15},"end":{"line":214,"column":15}},{"start":{"line":214,"column":15},"end":{"line":214,"column":15}}]},"15":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":18},"end":{"line":221,"column":31}},{"start":{"line":221,"column":35},"end":{"line":221,"column":53}}]}},"code":["var __key = require(\"./../internal/key\");","var __ref = require(\"./../internal/ref\");","var __context = require(\"./../internal/context\");","var __version = require(\"./../internal/version\");","var __refIndex = require(\"./../internal/ref-index\");","var __refsLength = require(\"./../internal/refs-length\");","","var $ref = require(\"./../types/ref\");","","var promote = require(\"./../lru/promote\");","var isExpired = require(\"./../support/isAlreadyExpired\");","var isFunction = require(\"./../support/isFunction\");","var isPrimitive = require(\"./../support/isPrimitive\");","var expireNode = require(\"./../support/expireNode\");","var iterateKeySet = require(\"falcor-path-utils\").iterateKeySet;","var incrementVersion = require(\"./../support/incrementVersion\");","var mergeJSONGraphNode = require(\"./../support/mergeJSONGraphNode\");","","/**"," * Merges a list of JSON Graph Envelopes into a cache JSON Graph."," * @function"," * @param {Object} model - the Model for which to insert the PathValues."," * @param {Array.<PathValue>} jsonGraphEnvelopes - the PathValues to set."," * @return {Array.<Path>} - a list of optimized paths for the successfully set values."," */","","module.exports = function setJSONGraphs(model, jsonGraphEnvelopes, x, errorSelector, comparator) {","","    var modelRoot = model._root;","    var lru = modelRoot;","    var expired = modelRoot.expired;","    var version = incrementVersion();","    var cache = modelRoot.cache;","    var initialVersion = cache[__version];","","    var requestedPath = [];","    var optimizedPath = [];","    var requestedPaths = [];","    var optimizedPaths = [];","    var jsonGraphEnvelopeIndex = -1;","    var jsonGraphEnvelopeCount = jsonGraphEnvelopes.length;","","    while (++jsonGraphEnvelopeIndex < jsonGraphEnvelopeCount) {","","        var jsonGraphEnvelope = jsonGraphEnvelopes[jsonGraphEnvelopeIndex];","        var paths = jsonGraphEnvelope.paths;","        var jsonGraph = jsonGraphEnvelope.jsonGraph;","","        var pathIndex = -1;","        var pathCount = paths.length;","","        while (++pathIndex < pathCount) {","","            var path = paths[pathIndex];","            optimizedPath.index = 0;","","            setJSONGraphPathSet(","                path, 0,","                cache, cache, cache,","                jsonGraph, jsonGraph, jsonGraph,","                requestedPaths, optimizedPaths, requestedPath, optimizedPath,","                version, expired, lru, comparator, errorSelector","            );","        }","    }","","    var newVersion = cache[__version];","    var rootChangeHandler = modelRoot.onChange;","","    if (isFunction(rootChangeHandler) && initialVersion !== newVersion) {","        rootChangeHandler();","    }","","    return [requestedPaths, optimizedPaths];","};","","/* eslint-disable no-constant-condition */","function setJSONGraphPathSet(","    path, depth, root, parent, node,","    messageRoot, messageParent, message,","    requestedPaths, optimizedPaths, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var note = {};","    var branch = depth < path.length - 1;","    var keySet = path[depth];","    var key = iterateKeySet(keySet, note);","    var optimizedIndex = optimizedPath.index;","","    do {","","        requestedPath.depth = depth;","","        var results = setNode(","            root, parent, node, messageRoot, messageParent, message,","            key, branch, false, requestedPath, optimizedPath,","            version, expired, lru, comparator, errorSelector","        );","","        requestedPath[depth] = key;","        requestedPath.index = depth;","        optimizedPath[optimizedPath.index++] = key;","        var nextNode = results[0];","        var nextParent = results[1];","        if (nextNode) {","            if (branch) {","                setJSONGraphPathSet(","                    path, depth + 1, root, nextParent, nextNode,","                    messageRoot, results[3], results[2],","                    requestedPaths, optimizedPaths, requestedPath, optimizedPath,","                    version, expired, lru, comparator, errorSelector","                );","            } else {","                promote(lru, nextNode);","                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));","                optimizedPaths.push(optimizedPath.slice(0, optimizedPath.index));","            }","        }","        key = iterateKeySet(keySet, note);","        if (note.done) {","            break;","        }","        optimizedPath.index = optimizedIndex;","    } while (true);","}","/* eslint-enable */","","function setReference(","    root, node, messageRoot, message, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var reference = node.value;","    optimizedPath.splice(0, optimizedPath.length);","    optimizedPath.push.apply(optimizedPath, reference);","","    if (isExpired(node)) {","        optimizedPath.index = reference.length;","        expireNode(node, expired, lru);","        return [undefined, root, message, messageRoot];","    }","","    promote(lru, node);","","    var index = 0;","    var container = node;","    var count = reference.length - 1;","    var parent = node = root;","    var messageParent = message = messageRoot;","","    do {","        var key = reference[index];","        var branch = index < count;","        var results = setNode(","            root, parent, node, messageRoot, messageParent, message,","            key, branch, true, requestedPath, optimizedPath,","            version, expired, lru, comparator, errorSelector","        );","        node = results[0];","        if (isPrimitive(node)) {","            optimizedPath.index = index;","            return results;","        }","        parent = results[1];","        message = results[2];","        messageParent = results[3];","    } while (index++ < count);","","    optimizedPath.index = index;","","    if (container[__context] !== node) {","        var backRefs = node[__refsLength] || 0;","        node[__refsLength] = backRefs + 1;","        node[__ref + backRefs] = container;","        container[__context] = node;","        container[__refIndex] = backRefs;","    }","","    return [node, parent, message, messageParent];","}","","function setNode(","    root, parent, node, messageRoot, messageParent, message,","    key, branch, reference, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var type = node.$type;","","    while (type === $ref) {","","        var results = setReference(","            root, node, messageRoot, message, requestedPath, optimizedPath,","            version, expired, lru, comparator, errorSelector","        );","","        node = results[0];","","        if (isPrimitive(node)) {","            return results;","        }","","        parent = results[1];","        message = results[2];","        messageParent = results[3];","        type = node.$type;","    }","","    if (type !== void 0) {","        return [node, parent, message, messageParent];","    }","","    if (key == null) {","        if (branch) {","            throw new Error(\"`null` is not allowed in branch key positions.\");","        } else if (node) {","            key = node[__key];","        }","    } else {","        parent = node;","        messageParent = message;","        node = parent[key];","        message = messageParent && messageParent[key];","    }","","    node = mergeJSONGraphNode(","        parent, node, message, key, requestedPath, optimizedPath,","        version, expired, lru, comparator, errorSelector","    );","","    return [node, parent, message, messageParent];","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"27":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"43":0,"45":0,"46":0,"47":0,"49":0,"50":0,"52":0,"54":0,"55":0,"57":0,"67":0,"68":0,"70":0,"71":0,"74":0,"78":1,"84":0,"85":0,"86":0,"87":0,"88":0,"90":0,"92":0,"94":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"114":0,"115":0,"116":0,"119":0,"120":0,"121":0,"123":0,"128":1,"132":0,"133":0,"134":0,"136":0,"137":0,"138":0,"139":0,"142":0,"144":0,"145":0,"146":0,"147":0,"148":0,"150":0,"151":0,"152":0,"153":0,"158":0,"159":0,"160":0,"161":0,"163":0,"164":0,"165":0,"168":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"178":0,"181":1,"186":0,"188":0,"190":0,"195":0,"197":0,"198":0,"201":0,"202":0,"203":0,"204":0,"207":0,"208":0,"211":0,"212":0,"213":0,"214":0,"215":0,"218":0,"219":0,"220":0,"221":0,"224":0,"229":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/key.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/key.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":57}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"key\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/prefix.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/prefix.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}}},"branchMap":{},"code":["/**"," * http://en.wikipedia.org/wiki/Delimiter#ASCIIDelimitedText"," * record separator character."," */","module.exports = String.fromCharCode(30);",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/ref.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/ref.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":57}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"ref\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/context.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/context.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":61}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"context\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/version.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":61}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"version\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/ref-index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/ref-index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":63}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"ref-index\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/refs-length.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/refs-length.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":65}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"refs-length\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/types/ref.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/types/ref.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}}},"branchMap":{},"code":["module.exports = \"ref\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/lru/promote.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/lru/promote.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"lruPromote","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":57}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":48}},"7":{"start":{"line":9,"column":0},"end":{"line":44,"column":2}},"8":{"start":{"line":11,"column":4},"end":{"line":42,"column":5}},"9":{"start":{"line":13,"column":8},"end":{"line":16,"column":32}},"10":{"start":{"line":18,"column":8},"end":{"line":37,"column":9}},"11":{"start":{"line":20,"column":12},"end":{"line":22,"column":13}},"12":{"start":{"line":21,"column":16},"end":{"line":21,"column":36}},"13":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"14":{"start":{"line":25,"column":16},"end":{"line":25,"column":36}},"15":{"start":{"line":28,"column":12},"end":{"line":28,"column":24}},"16":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"17":{"start":{"line":31,"column":16},"end":{"line":31,"column":36}},"18":{"start":{"line":34,"column":12},"end":{"line":34,"column":54}},"19":{"start":{"line":35,"column":12},"end":{"line":35,"column":32}},"20":{"start":{"line":36,"column":12},"end":{"line":36,"column":34}},"21":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"22":{"start":{"line":40,"column":12},"end":{"line":40,"column":62}},"23":{"start":{"line":43,"column":4},"end":{"line":43,"column":16}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":22}},{"start":{"line":11,"column":27},"end":{"line":11,"column":58}}]},"3":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":8}},{"start":{"line":18,"column":8},"end":{"line":18,"column":8}}]},"4":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":12}},{"start":{"line":20,"column":12},"end":{"line":20,"column":12}}]},"5":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":16},"end":{"line":20,"column":28}},{"start":{"line":20,"column":32},"end":{"line":20,"column":56}}]},"6":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":12}},{"start":{"line":24,"column":12},"end":{"line":24,"column":12}}]},"7":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":16},"end":{"line":24,"column":28}},{"start":{"line":24,"column":32},"end":{"line":24,"column":56}}]},"8":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"9":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":16},"end":{"line":30,"column":28}},{"start":{"line":30,"column":32},"end":{"line":30,"column":56}}]},"10":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"11":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":24}},{"start":{"line":39,"column":28},"end":{"line":39,"column":41}}]},"12":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":49},"end":{"line":40,"column":53}},{"start":{"line":40,"column":57},"end":{"line":40,"column":61}}]}},"code":["var $expiresNever = require(\"./../values/expires-never\");","var __head = require(\"./../internal/head\");","var __tail = require(\"./../internal/tail\");","var __next = require(\"./../internal/next\");","var __prev = require(\"./../internal/prev\");","","var isObject = require(\"./../support/isObject\");","","module.exports = function lruPromote(root, node) {","","    if (isObject(node) && (node.$expires !== $expiresNever)) {","","        var head = root[__head],","            tail = root[__tail],","            next = node[__next],","            prev = node[__prev];","","        if (node !== head) {","","            if (next != null && typeof next === \"object\") {","                next[__prev] = prev;","            }","","            if (prev != null && typeof prev === \"object\") {","                prev[__next] = next;","            }","","            next = head;","","            if (head != null && typeof head === \"object\") {","                head[__prev] = node;","            }","","            root[__head] = root[__next] = head = node;","            head[__next] = next;","            head[__prev] = void 0;","        }","","        if (tail == null || node === tail) {","            root[__tail] = root[__prev] = tail = prev || node;","        }","    }","    return node;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"7":1,"9":1,"11":0,"13":0,"18":0,"20":0,"21":0,"24":0,"25":0,"28":0,"30":0,"31":0,"34":0,"35":0,"36":0,"39":0,"40":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/values/expires-never.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/values/expires-never.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":19}}},"branchMap":{},"code":["module.exports = 1;",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/head.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/head.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"head\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/tail.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/tail.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"tail\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/next.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/next.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"next\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/prev.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/prev.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"prev\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isAlreadyExpired.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isAlreadyExpired.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0},"b":{"1":[0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isAlreadyExpired","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":38}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"4":{"start":{"line":5,"column":0},"end":{"line":11,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"6":{"start":{"line":7,"column":4},"end":{"line":10,"column":21}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":12},"end":{"line":7,"column":23}},{"start":{"line":8,"column":8},"end":{"line":8,"column":22}},{"start":{"line":9,"column":8},"end":{"line":9,"column":20}},{"start":{"line":10,"column":8},"end":{"line":10,"column":19}}]}},"code":["var now = require(\"./../support/now\");","var $now = require(\"./../values/expires-now\");","var $never = require(\"./../values/expires-never\");","","module.exports = function isAlreadyExpired(node) {","    var exp = node.$expires;","    return (exp != null) && (","        exp !== $never) && (","        exp !== $now) && (","        exp < now());","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"7":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/now.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/now.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}}},"branchMap":{},"code":["module.exports = Date.now;",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/values/expires-now.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/values/expires-now.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":19}}},"branchMap":{},"code":["module.exports = 0;",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isPrimitive.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isPrimitive.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isPrimitive","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}},"2":{"start":{"line":2,"column":0},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":55}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":11},"end":{"line":3,"column":24}},{"start":{"line":3,"column":28},"end":{"line":3,"column":54}}]}},"code":["var objTypeof = \"object\";","module.exports = function isPrimitive(value) {","    return value == null || typeof value !== objTypeof;","};",""],"l":{"1":1,"2":1,"3":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/expireNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/expireNode.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"expireNode","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":57}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":57}},"3":{"start":{"line":4,"column":0},"end":{"line":11,"column":2}},"4":{"start":{"line":5,"column":4},"end":{"line":9,"column":5}},"5":{"start":{"line":6,"column":8},"end":{"line":6,"column":35}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"7":{"start":{"line":8,"column":8},"end":{"line":8,"column":26}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":16}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":4}},{"start":{"line":5,"column":4},"end":{"line":5,"column":4}}]}},"code":["var splice = require(\"./../lru/splice\");","var __invalidated = require(\"./../internal/invalidated\");","","module.exports = function expireNode(node, expired, lru) {","    if (!node[__invalidated]) {","        node[__invalidated] = true;","        expired.push(node);","        splice(lru, node);","    }","    return node;","};",""],"l":{"1":1,"2":1,"4":1,"5":0,"6":0,"7":0,"8":0,"10":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/lru/splice.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/lru/splice.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"lruSplice","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":43}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"5":{"start":{"line":6,"column":0},"end":{"line":31,"column":2}},"6":{"start":{"line":8,"column":4},"end":{"line":11,"column":28}},"7":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}},"9":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":28}},"11":{"start":{"line":21,"column":4},"end":{"line":23,"column":5}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":43}},"13":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":43}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":41}},"16":{"start":{"line":30,"column":4},"end":{"line":30,"column":39}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":20}},{"start":{"line":13,"column":24},"end":{"line":13,"column":48}}]},"3":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"4":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":20}},{"start":{"line":17,"column":24},"end":{"line":17,"column":48}}]},"5":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"6":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]}},"code":["var __head = require(\"./../internal/head\");","var __tail = require(\"./../internal/tail\");","var __next = require(\"./../internal/next\");","var __prev = require(\"./../internal/prev\");","","module.exports = function lruSplice(root, node) {","","    var head = root[__head],","        tail = root[__tail],","        next = node[__next],","        prev = node[__prev];","","    if (next != null && typeof next === \"object\") {","        next[__prev] = prev;","    }","","    if (prev != null && typeof prev === \"object\") {","        prev[__next] = next;","    }","","    if (node === head) {","        root[__head] = root[__next] = next;","    }","","    if (node === tail) {","        root[__tail] = root[__prev] = prev;","    }","","    node[__next] = node[__prev] = void 0;","    head = tail = next = prev = void 0;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"8":0,"13":0,"14":0,"17":0,"18":0,"21":0,"22":0,"25":0,"26":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/invalidated.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/invalidated.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":65}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"invalidated\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/incrementVersion.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/incrementVersion.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"incrementVersion","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":16}},"2":{"start":{"line":2,"column":0},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":21}}},"branchMap":{},"code":["var version = 1;","module.exports = function incrementVersion() {","    return version++;","};",""],"l":{"1":1,"2":1,"3":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/mergeJSONGraphNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/mergeJSONGraphNode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"mergeJSONGraphNode","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":22,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":52}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":52}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":52}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":54}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":70}},"16":{"start":{"line":18,"column":0},"end":{"line":18,"column":62}},"17":{"start":{"line":20,"column":0},"end":{"line":204,"column":2}},"18":{"start":{"line":24,"column":4},"end":{"line":24,"column":19}},"19":{"start":{"line":26,"column":4},"end":{"line":28,"column":31}},"20":{"start":{"line":38,"column":4},"end":{"line":76,"column":5}},"21":{"start":{"line":42,"column":8},"end":{"line":70,"column":9}},"22":{"start":{"line":43,"column":12},"end":{"line":43,"column":57}},"23":{"start":{"line":44,"column":12},"end":{"line":44,"column":76}},"24":{"start":{"line":45,"column":12},"end":{"line":45,"column":49}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":31}},"26":{"start":{"line":47,"column":12},"end":{"line":47,"column":24}},"27":{"start":{"line":51,"column":13},"end":{"line":70,"column":9}},"28":{"start":{"line":52,"column":12},"end":{"line":52,"column":27}},"29":{"start":{"line":56,"column":12},"end":{"line":56,"column":39}},"30":{"start":{"line":57,"column":12},"end":{"line":69,"column":13}},"31":{"start":{"line":59,"column":16},"end":{"line":59,"column":35}},"32":{"start":{"line":60,"column":16},"end":{"line":68,"column":17}},"33":{"start":{"line":63,"column":20},"end":{"line":66,"column":21}},"34":{"start":{"line":64,"column":24},"end":{"line":64,"column":42}},"35":{"start":{"line":65,"column":24},"end":{"line":65,"column":48}},"36":{"start":{"line":67,"column":20},"end":{"line":67,"column":32}},"37":{"start":{"line":72,"column":8},"end":{"line":72,"column":35}},"38":{"start":{"line":73,"column":8},"end":{"line":75,"column":9}},"39":{"start":{"line":74,"column":12},"end":{"line":74,"column":31}},"40":{"start":{"line":79,"column":4},"end":{"line":138,"column":5}},"41":{"start":{"line":80,"column":8},"end":{"line":80,"column":38}},"42":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"43":{"start":{"line":82,"column":12},"end":{"line":82,"column":34}},"44":{"start":{"line":84,"column":8},"end":{"line":90,"column":9}},"45":{"start":{"line":87,"column":12},"end":{"line":89,"column":13}},"46":{"start":{"line":88,"column":16},"end":{"line":88,"column":28}},"47":{"start":{"line":95,"column":8},"end":{"line":103,"column":9}},"48":{"start":{"line":98,"column":12},"end":{"line":101,"column":13}},"49":{"start":{"line":99,"column":16},"end":{"line":99,"column":47}},"50":{"start":{"line":100,"column":16},"end":{"line":100,"column":30}},"51":{"start":{"line":102,"column":12},"end":{"line":102,"column":24}},"52":{"start":{"line":104,"column":8},"end":{"line":104,"column":38}},"53":{"start":{"line":105,"column":8},"end":{"line":137,"column":9}},"54":{"start":{"line":106,"column":12},"end":{"line":106,"column":34}},"55":{"start":{"line":109,"column":12},"end":{"line":136,"column":13}},"56":{"start":{"line":110,"column":16},"end":{"line":135,"column":17}},"57":{"start":{"line":116,"column":20},"end":{"line":118,"column":21}},"58":{"start":{"line":117,"column":24},"end":{"line":117,"column":36}},"59":{"start":{"line":121,"column":20},"end":{"line":121,"column":49}},"60":{"start":{"line":122,"column":20},"end":{"line":122,"column":52}},"61":{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},"62":{"start":{"line":133,"column":24},"end":{"line":133,"column":38}},"63":{"start":{"line":141,"column":4},"end":{"line":201,"column":5}},"64":{"start":{"line":142,"column":8},"end":{"line":142,"column":85}},"65":{"start":{"line":145,"column":9},"end":{"line":201,"column":5}},"66":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"67":{"start":{"line":152,"column":12},"end":{"line":152,"column":82}},"68":{"start":{"line":155,"column":8},"end":{"line":190,"column":9}},"69":{"start":{"line":156,"column":12},"end":{"line":160,"column":13}},"70":{"start":{"line":157,"column":16},"end":{"line":157,"column":57}},"71":{"start":{"line":158,"column":16},"end":{"line":158,"column":80}},"72":{"start":{"line":159,"column":16},"end":{"line":159,"column":62}},"73":{"start":{"line":167,"column":12},"end":{"line":167,"column":34}},"74":{"start":{"line":170,"column":12},"end":{"line":182,"column":13}},"75":{"start":{"line":177,"column":16},"end":{"line":177,"column":84}},"76":{"start":{"line":179,"column":16},"end":{"line":181,"column":17}},"77":{"start":{"line":180,"column":20},"end":{"line":180,"column":105}},"78":{"start":{"line":183,"column":12},"end":{"line":189,"column":13}},"79":{"start":{"line":184,"column":16},"end":{"line":184,"column":84}},"80":{"start":{"line":185,"column":16},"end":{"line":185,"column":62}},"81":{"start":{"line":186,"column":16},"end":{"line":186,"column":68}},"82":{"start":{"line":187,"column":16},"end":{"line":187,"column":79}},"83":{"start":{"line":188,"column":16},"end":{"line":188,"column":62}},"84":{"start":{"line":193,"column":8},"end":{"line":197,"column":9}},"85":{"start":{"line":194,"column":12},"end":{"line":194,"column":43}},"86":{"start":{"line":196,"column":12},"end":{"line":196,"column":31}},"87":{"start":{"line":199,"column":9},"end":{"line":201,"column":5}},"88":{"start":{"line":200,"column":8},"end":{"line":200,"column":48}},"89":{"start":{"line":203,"column":4},"end":{"line":203,"column":16}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":13},"end":{"line":51,"column":13}},{"start":{"line":51,"column":13},"end":{"line":51,"column":13}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":12}},{"start":{"line":57,"column":12},"end":{"line":57,"column":12}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":16},"end":{"line":60,"column":16}},{"start":{"line":60,"column":16},"end":{"line":60,"column":16}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":20},"end":{"line":63,"column":20}},{"start":{"line":63,"column":20},"end":{"line":63,"column":20}}]},"7":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":8}},{"start":{"line":73,"column":8},"end":{"line":73,"column":8}}]},"8":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"9":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"10":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":8}},{"start":{"line":84,"column":8},"end":{"line":84,"column":8}}]},"11":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":12},"end":{"line":84,"column":21}},{"start":{"line":84,"column":25},"end":{"line":84,"column":31}}]},"12":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":87,"column":12}},{"start":{"line":87,"column":12},"end":{"line":87,"column":12}}]},"13":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":16},"end":{"line":87,"column":31}},{"start":{"line":87,"column":36},"end":{"line":87,"column":45}},{"start":{"line":87,"column":49},"end":{"line":87,"column":55}}]},"14":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"15":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":12}},{"start":{"line":98,"column":12},"end":{"line":98,"column":12}}]},"16":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"17":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":12},"end":{"line":109,"column":12}},{"start":{"line":109,"column":12},"end":{"line":109,"column":12}}]},"18":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":16},"end":{"line":110,"column":16}},{"start":{"line":110,"column":16},"end":{"line":110,"column":16}}]},"19":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":20},"end":{"line":116,"column":20}},{"start":{"line":116,"column":20},"end":{"line":116,"column":20}}]},"20":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":20},"end":{"line":132,"column":20}},{"start":{"line":132,"column":20},"end":{"line":132,"column":20}}]},"21":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":24},"end":{"line":132,"column":40}},{"start":{"line":132,"column":44},"end":{"line":132,"column":63}},{"start":{"line":132,"column":67},"end":{"line":132,"column":90}}]},"22":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"23":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":13}},{"start":{"line":141,"column":17},"end":{"line":141,"column":26}},{"start":{"line":141,"column":30},"end":{"line":141,"column":36}}]},"24":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":9},"end":{"line":145,"column":9}},{"start":{"line":145,"column":9},"end":{"line":145,"column":9}}]},"25":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":13},"end":{"line":145,"column":18}},{"start":{"line":145,"column":22},"end":{"line":145,"column":32}}]},"26":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":8}},{"start":{"line":151,"column":8},"end":{"line":151,"column":8}}]},"27":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":28}},{"start":{"line":151,"column":32},"end":{"line":151,"column":57}}]},"28":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":8}},{"start":{"line":155,"column":8},"end":{"line":155,"column":8}}]},"29":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":12},"end":{"line":155,"column":17}},{"start":{"line":155,"column":21},"end":{"line":155,"column":37}}]},"30":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":12},"end":{"line":156,"column":12}},{"start":{"line":156,"column":12},"end":{"line":156,"column":12}}]},"31":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":12}},{"start":{"line":170,"column":12},"end":{"line":170,"column":12}}]},"32":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":16},"end":{"line":170,"column":21}},{"start":{"line":170,"column":25},"end":{"line":170,"column":35}}]},"33":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":16},"end":{"line":179,"column":16}},{"start":{"line":179,"column":16},"end":{"line":179,"column":16}}]},"34":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":21},"end":{"line":179,"column":26}},{"start":{"line":179,"column":30},"end":{"line":179,"column":35}},{"start":{"line":179,"column":40},"end":{"line":179,"column":62}}]},"35":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":12},"end":{"line":183,"column":12}},{"start":{"line":183,"column":12},"end":{"line":183,"column":12}}]},"36":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":59},"end":{"line":184,"column":72}},{"start":{"line":184,"column":75},"end":{"line":184,"column":82}}]},"37":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":8}},{"start":{"line":193,"column":8},"end":{"line":193,"column":8}}]},"38":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":9},"end":{"line":199,"column":9}},{"start":{"line":199,"column":9},"end":{"line":199,"column":9}}]}},"code":["var __key = require(\"./../internal/key\");","var __parent = require(\"./../internal/parent\");","","var $ref = require(\"./../types/ref\");","var $error = require(\"./../types/error\");","var getSize = require(\"./../support/getSize\");","var getTimestamp = require(\"./../support/getTimestamp\");","var isObject = require(\"./../support/isObject\");","var isExpired = require(\"./../support/isExpired\");","var isFunction = require(\"./../support/isFunction\");","","var promote = require(\"./../lru/promote\");","var wrapNode = require(\"./../support/wrapNode\");","var insertNode = require(\"./../support/insertNode\");","var expireNode = require(\"./../support/expireNode\");","var replaceNode = require(\"./../support/replaceNode\");","var updateNodeAncestors = require(\"./../support/updateNodeAncestors\");","var reconstructPath = require(\"./../support/reconstructPath\");","","module.exports = function mergeJSONGraphNode(","    parent, node, message, key, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var sizeOffset;","","    var cType, mType,","        cIsObject, mIsObject,","        cTimestamp, mTimestamp;","","    // If the cache and message are the same, we can probably return early:","    // - If they're both nullsy,","    //   - If null then the node needs to be wrapped in an atom and inserted.","    //     This happens from whole branch merging when a leaf is just a null value","    //     instead of being wrapped in an atom.","    //   - If undefined then return null (previous behavior).","    // - If they're both branches, return the branch.","    // - If they're both edges, continue below.","    if (node === message) {","","        // There should not be undefined values.  Those should always be","        // wrapped in an $atom","        if (message === null) {","            node = wrapNode(message, undefined, message);","            parent = updateNodeAncestors(parent, -node.$size, lru, version);","            node = insertNode(node, parent, key);","            promote(lru, node);","            return node;","        }","","        // The messange and cache are both undefined, therefore return null.","        else if (message === undefined) {","            return message;","        }","","        else {","            cIsObject = isObject(node);","            if (cIsObject) {","                // Is the cache node a branch? If so, return the cache branch.","                cType = node.$type;","                if (cType == null) {","                    // Has the branch been introduced to the cache yet? If not,","                    // give it a parent and key.","                    if (node[__parent] == null) {","                        node[__key] = key;","                        node[__parent] = parent;","                    }","                    return node;","                }","            }","        }","    } else {","        cIsObject = isObject(node);","        if (cIsObject) {","            cType = node.$type;","        }","    }","","    // If the cache isn't a reference, we might be able to return early.","    if (cType !== $ref) {","        mIsObject = isObject(message);","        if (mIsObject) {","            mType = message.$type;","        }","        if (cIsObject && !cType) {","            // If the cache is a branch and the message is empty or","            // also a branch, continue with the cache branch.","            if (message == null || (mIsObject && !mType)) {","                return node;","            }","        }","    }","    // If the cache is a reference, we might not need to replace it.","    else {","        // If the cache is a reference, but the message is empty, leave the cache alone...","        if (message == null) {","            // ...unless the cache is an expired reference. In that case, expire","            // the cache node and return undefined.","            if (isExpired(node)) {","                expireNode(node, expired, lru);","                return void 0;","            }","            return node;","        }","        mIsObject = isObject(message);","        if (mIsObject) {","            mType = message.$type;","            // If the cache and the message are both references,","            // check if we need to replace the cache reference.","            if (mType === $ref) {","                if (node === message) {","                    // If the cache and message are the same reference,","                    // we performed a whole-branch merge of one of the","                    // grandparents. If we've previously graphed this","                    // reference, break early. Otherwise, continue to","                    // leaf insertion below.","                    if (node[__parent] != null) {","                        return node;","                    }","                } else {","","                    cTimestamp = node.$timestamp;","                    mTimestamp = message.$timestamp;","","                    // - If either the cache or message reference is expired,","                    //   replace the cache reference with the message.","                    // - If neither of the references are expired, compare their","                    //   timestamps. If either of them don't have a timestamp,","                    //   or the message's timestamp is newer, replace the cache","                    //   reference with the message reference.","                    // - If the message reference is older than the cache","                    //   reference, short-circuit.","                    if (!isExpired(node) && !isExpired(message) && mTimestamp < cTimestamp) {","                        return void 0;","                    }","                }","            }","        }","    }","","    // If the cache is a leaf but the message is a branch, merge the branch over the leaf.","    if (cType && mIsObject && !mType) {","        return insertNode(replaceNode(node, message, parent, key, lru), parent, key);","    }","    // If the message is a sentinel or primitive, insert it into the cache.","    else if (mType || !mIsObject) {","        // If the cache and the message are the same value, we branch-merged one","        // of the message's ancestors. If this is the first time we've seen this","        // leaf, give the message a $size and $type, attach its graph pointers,","        // and update the cache sizes and versions.","","        if (mType === $error && isFunction(errorSelector)) {","            message = errorSelector(reconstructPath(requestedPath, key), message);","        }","","        if (mType && node === message) {","            if (node[__parent] == null) {","                node = wrapNode(node, cType, node.value);","                parent = updateNodeAncestors(parent, -node.$size, lru, version);","                node = insertNode(node, parent, key, version);","            }","        }","        // If the cache and message are different, or the message is a","        // primitive, replace the cache with the message value. If the message","        // is a sentinel, clone and maintain its type. If the message is a","        // primitive value, wrap it in an atom.","        else {","            var isDistinct = true;","            // If the cache is a branch, but the message is a leaf, replace the","            // cache branch with the message leaf.","            if (cType || !cIsObject) {","                // Compare the current cache value with the new value. If either of","                // them don't have a timestamp, or the message's timestamp is newer,","                // replace the cache value with the message value. If a comparator","                // is specified, the comparator takes precedence over timestamps.","                //","                // Comparing either Number or undefined to undefined always results in false.","                isDistinct = (getTimestamp(message) < getTimestamp(node)) === false;","                // If at least one of the cache/message are sentinels, compare them.","                if ((cType || mType) && isFunction(comparator)) {","                    isDistinct = !comparator(node, message, optimizedPath.slice(0, optimizedPath.index));","                }","            }","            if (isDistinct) {","                message = wrapNode(message, mType, mType ? message.value : message);","                sizeOffset = getSize(node) - getSize(message);","                node = replaceNode(node, message, parent, key, lru);","                parent = updateNodeAncestors(parent, sizeOffset, lru, version);","                node = insertNode(node, parent, key, version);","            }","        }","","        // Promote the message edge in the LRU.","        if (isExpired(node)) {","            expireNode(node, expired, lru);","        } else {","            promote(lru, node);","        }","    }","    else if (node == null) {","        node = insertNode(message, parent, key);","    }","","    return node;","};",""],"l":{"1":1,"2":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"20":1,"24":0,"26":0,"38":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"51":0,"52":0,"56":0,"57":0,"59":0,"60":0,"63":0,"64":0,"65":0,"67":0,"72":0,"73":0,"74":0,"79":0,"80":0,"81":0,"82":0,"84":0,"87":0,"88":0,"95":0,"98":0,"99":0,"100":0,"102":0,"104":0,"105":0,"106":0,"109":0,"110":0,"116":0,"117":0,"121":0,"122":0,"132":0,"133":0,"141":0,"142":0,"145":0,"151":0,"152":0,"155":0,"156":0,"157":0,"158":0,"159":0,"167":0,"170":0,"177":0,"179":0,"180":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"193":0,"194":0,"196":0,"199":0,"200":0,"203":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/parent.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/parent.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":60}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"parent\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/types/error.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/types/error.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}}},"branchMap":{},"code":["module.exports = \"error\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/getSize.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/getSize.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getSize","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":45}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":11},"end":{"line":3,"column":25}},{"start":{"line":3,"column":29},"end":{"line":3,"column":39}},{"start":{"line":3,"column":43},"end":{"line":3,"column":44}}]}},"code":["var isObject = require(\"./../support/isObject\");","module.exports = function getSize(node) {","    return isObject(node) && node.$size || 0;","};",""],"l":{"1":1,"2":1,"3":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/getTimestamp.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/getTimestamp.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getTimestamp","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":58}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":11},"end":{"line":3,"column":25}},{"start":{"line":3,"column":29},"end":{"line":3,"column":44}},{"start":{"line":3,"column":48},"end":{"line":3,"column":57}}]}},"code":["var isObject = require(\"./../support/isObject\");","module.exports = function getTimestamp(node) {","    return isObject(node) && node.$timestamp || undefined;","};",""],"l":{"1":1,"2":1,"3":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isExpired.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isExpired.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0},"b":{"1":[0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isExpired","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":38}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"4":{"start":{"line":5,"column":0},"end":{"line":10,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":28}},"6":{"start":{"line":7,"column":4},"end":{"line":9,"column":37}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":12},"end":{"line":7,"column":23}},{"start":{"line":8,"column":8},"end":{"line":8,"column":22}},{"start":{"line":9,"column":8},"end":{"line":9,"column":20}},{"start":{"line":9,"column":24},"end":{"line":9,"column":35}}]}},"code":["var now = require(\"./../support/now\");","var $now = require(\"../values/expires-now\");","var $never = require(\"../values/expires-never\");","","module.exports = function isExpired(node) {","    var exp = node.$expires;","    return (exp != null) && (","        exp !== $never ) && (","        exp === $now || exp < now());","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"7":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/wrapNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/wrapNode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"wrapNode","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":23}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":18}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":46}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":52}},"11":{"start":{"line":16,"column":0},"end":{"line":61,"column":2}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":17}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":23}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":23}},"15":{"start":{"line":22,"column":4},"end":{"line":30,"column":5}},"16":{"start":{"line":23,"column":8},"end":{"line":23,"column":27}},"17":{"start":{"line":24,"column":8},"end":{"line":24,"column":29}},"18":{"start":{"line":25,"column":8},"end":{"line":25,"column":26}},"19":{"start":{"line":27,"column":8},"end":{"line":27,"column":28}},"20":{"start":{"line":28,"column":8},"end":{"line":28,"column":26}},"21":{"start":{"line":29,"column":8},"end":{"line":29,"column":36}},"22":{"start":{"line":32,"column":4},"end":{"line":50,"column":5}},"23":{"start":{"line":33,"column":8},"end":{"line":33,"column":28}},"24":{"start":{"line":34,"column":11},"end":{"line":50,"column":5}},"25":{"start":{"line":35,"column":8},"end":{"line":49,"column":9}},"26":{"start":{"line":37,"column":16},"end":{"line":41,"column":17}},"27":{"start":{"line":38,"column":20},"end":{"line":38,"column":51}},"28":{"start":{"line":40,"column":20},"end":{"line":40,"column":40}},"29":{"start":{"line":42,"column":16},"end":{"line":42,"column":22}},"30":{"start":{"line":44,"column":16},"end":{"line":44,"column":47}},"31":{"start":{"line":45,"column":16},"end":{"line":45,"column":22}},"32":{"start":{"line":47,"column":16},"end":{"line":47,"column":36}},"33":{"start":{"line":48,"column":16},"end":{"line":48,"column":22}},"34":{"start":{"line":52,"column":4},"end":{"line":52,"column":35}},"35":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"36":{"start":{"line":55,"column":8},"end":{"line":55,"column":47}},"37":{"start":{"line":58,"column":4},"end":{"line":58,"column":22}},"38":{"start":{"line":60,"column":4},"end":{"line":60,"column":16}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":11},"end":{"line":34,"column":11}},{"start":{"line":34,"column":11},"end":{"line":34,"column":11}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":15},"end":{"line":34,"column":27}},{"start":{"line":34,"column":31},"end":{"line":34,"column":40}}]},"5":{"line":35,"type":"switch","locations":[{"start":{"line":36,"column":12},"end":{"line":42,"column":22}},{"start":{"line":43,"column":12},"end":{"line":45,"column":22}},{"start":{"line":46,"column":12},"end":{"line":48,"column":22}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":16},"end":{"line":37,"column":16}},{"start":{"line":37,"column":16},"end":{"line":37,"column":16}}]},"7":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"8":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":35}},{"start":{"line":54,"column":39},"end":{"line":54,"column":59}}]}},"code":["var jsong = require(\"falcor-json-graph\");","var $atom = jsong.atom;","","var now = require(\"./../support/now\");","var expiresNow = require(\"../values/expires-now\");","","var __modelCreated = require(\"./../internal/model-created\");","","var atomSize = 50;","","var clone = require(\"./../support/clone\");","var isArray = Array.isArray;","var getSize = require(\"./../support/getSize\");","var getExpires = require(\"./../support/getExpires\");","","module.exports = function wrapNode(nodeArg, typeArg, value) {","","    var size = 0;","    var node = nodeArg;","    var type = typeArg;","","    if (type) {","        node = clone(node);","        size = getSize(node);","        node.$type = type;","    } else {","        node = $atom(value);","        type = node.$type;","        node[__modelCreated] = true;","    }","","    if (value == null) {","        size = atomSize + 1;","    } else if (size == null || size <= 0) {","        switch (typeof value) {","            case \"object\":","                if (isArray(value)) {","                    size = atomSize + value.length;","                } else {","                    size = atomSize + 1;","                }","                break;","            case \"string\":","                size = atomSize + value.length;","                break;","            default:","                size = atomSize + 1;","                break;","        }","    }","","    var expires = getExpires(node);","","    if (typeof expires === \"number\" && expires < expiresNow) {","        node.$expires = now() + (expires * -1);","    }","","    node.$size = size;","","    return node;","};",""],"l":{"1":1,"2":1,"4":1,"5":1,"7":1,"9":1,"11":1,"12":1,"13":1,"14":1,"16":1,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"25":0,"27":0,"28":0,"29":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"42":0,"44":0,"45":0,"47":0,"48":0,"52":0,"54":0,"55":0,"58":0,"60":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-json-graph/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-json-graph/src/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"sentinel","line":3,"loc":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}}},"2":{"name":"ref","line":20,"loc":{"start":{"line":20,"column":9},"end":{"line":20,"column":35}}},"3":{"name":"atom","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":38}}},"4":{"name":"(anonymous_4)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":26}}},"5":{"name":"error","line":29,"loc":{"start":{"line":29,"column":11},"end":{"line":29,"column":45}}},"6":{"name":"pathValue","line":32,"loc":{"start":{"line":32,"column":15},"end":{"line":32,"column":47}}},"7":{"name":"pathInvalidation","line":35,"loc":{"start":{"line":35,"column":22},"end":{"line":35,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":3,"column":0},"end":{"line":17,"column":1}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":35}},"4":{"start":{"line":5,"column":4},"end":{"line":16,"column":5}},"5":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"6":{"start":{"line":7,"column":12},"end":{"line":7,"column":35}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":29}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":27}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":20}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":45}},"11":{"start":{"line":19,"column":0},"end":{"line":38,"column":2}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":65}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":46}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":32}},"15":{"start":{"line":30,"column":8},"end":{"line":30,"column":52}},"16":{"start":{"line":33,"column":8},"end":{"line":33,"column":65}},"17":{"start":{"line":36,"column":8},"end":{"line":36,"column":70}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":4}},{"start":{"line":5,"column":4},"end":{"line":5,"column":4}}]}},"code":["var pathSyntax = require(\"falcor-path-syntax\");","","function sentinel(type, value, props) {","    var copy = Object.create(null);","    if (props != null) {","        for(var key in props) {","            copy[key] = props[key];","        }","        ","        copy[\"$type\"] = type;","        copy.value = value;","        return copy;","    }","    else {","        return { $type: type, value: value };","    }    ","}","","module.exports = {","    ref: function ref(path, props) {","        return sentinel(\"ref\", pathSyntax.fromPath(path), props);","    },","    atom: function atom(value, props) {","        return sentinel(\"atom\", value, props);        ","    },","    undefined: function() {","        return sentinel(\"atom\");","    },    ","    error: function error(errorValue, props) {","        return sentinel(\"error\", errorValue, props);        ","    },","    pathValue: function pathValue(path, value) {","        return { path: pathSyntax.fromPath(path), value: value };","    },","    pathInvalidation: function pathInvalidation(path) {","        return { path: pathSyntax.fromPath(path), invalidated: true };","    }    ","};",""],"l":{"1":1,"3":1,"4":0,"5":0,"6":0,"7":0,"10":0,"11":0,"12":0,"15":0,"19":1,"21":0,"24":0,"27":0,"30":0,"33":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"parser","line":5,"loc":{"start":{"line":5,"column":13},"end":{"line":5,"column":52}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":31},"end":{"line":14,"column":52}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":18},"end":{"line":45,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":40}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"4":{"start":{"line":5,"column":0},"end":{"line":7,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":54}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":24}},"7":{"start":{"line":14,"column":0},"end":{"line":41,"column":2}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":18}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":17}},"11":{"start":{"line":20,"column":4},"end":{"line":38,"column":5}},"12":{"start":{"line":23,"column":8},"end":{"line":37,"column":9}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":43}},"14":{"start":{"line":28,"column":13},"end":{"line":37,"column":9}},"15":{"start":{"line":29,"column":12},"end":{"line":31,"column":14}},"16":{"start":{"line":36,"column":12},"end":{"line":36,"column":30}},"17":{"start":{"line":40,"column":4},"end":{"line":40,"column":15}},"18":{"start":{"line":45,"column":0},"end":{"line":55,"column":2}},"19":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":18}},"21":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"22":{"start":{"line":51,"column":8},"end":{"line":51,"column":33}},"23":{"start":{"line":54,"column":4},"end":{"line":54,"column":16}},"24":{"start":{"line":58,"column":0},"end":{"line":58,"column":35}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":13},"end":{"line":28,"column":13}},{"start":{"line":28,"column":13},"end":{"line":28,"column":13}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]}},"code":["var Tokenizer = require('./tokenizer');","var head = require('./parse-tree/head');","var RoutedTokens = require('./RoutedTokens');","","var parser = function parser(string, extendedRules) {","    return head(new Tokenizer(string, extendedRules));","};","","module.exports = parser;","","// Constructs the paths from paths / pathValues that have strings.","// If it does not have a string, just moves the value into the return","// results.","parser.fromPathsOrPathValues = function(paths, ext) {","    if (!paths) {","        return [];","    }","","    var out = [];","    for (var i = 0, len = paths.length; i < len; i++) {","","        // Is the path a string","        if (typeof paths[i] === 'string') {","            out[i] = parser(paths[i], ext);","        }","","        // is the path a path value with a string value.","        else if (typeof paths[i].path === 'string') {","            out[i] = {","                path: parser(paths[i].path, ext), value: paths[i].value","            };","        }","","        // just copy it over.","        else {","            out[i] = paths[i];","        }","    }","","    return out;","};","","// If the argument is a string, this with convert, else just return","// the path provided.","parser.fromPath = function(path, ext) {","    if (!path) {","        return [];","    }","","    if (typeof path === 'string') {","        return parser(path, ext);","    }","","    return path;","};","","// Potential routed tokens.","parser.RoutedTokens = RoutedTokens;",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"9":1,"14":1,"15":0,"16":0,"19":0,"20":0,"23":0,"24":0,"28":0,"29":0,"36":0,"40":0,"45":1,"46":0,"47":0,"50":0,"51":0,"54":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/tokenizer/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/tokenizer/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0,0,0,0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":33},"end":{"line":16,"column":55}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":10},"end":{"line":28,"column":21}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":10},"end":{"line":42,"column":21}}},"4":{"name":"toNumber","line":51,"loc":{"start":{"line":51,"column":21},"end":{"line":51,"column":42}}},"5":{"name":"toOutput","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":37}}},"6":{"name":"getNext","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":24}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":26}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":26}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":24}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":24}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":16}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":18}},"10":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}},"11":{"start":{"line":11,"column":0},"end":{"line":11,"column":23}},"12":{"start":{"line":12,"column":0},"end":{"line":12,"column":16}},"13":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":45}},"15":{"start":{"line":16,"column":0},"end":{"line":21,"column":2}},"16":{"start":{"line":17,"column":4},"end":{"line":17,"column":26}},"17":{"start":{"line":18,"column":4},"end":{"line":18,"column":19}},"18":{"start":{"line":19,"column":4},"end":{"line":19,"column":25}},"19":{"start":{"line":20,"column":4},"end":{"line":20,"column":26}},"20":{"start":{"line":23,"column":0},"end":{"line":49,"column":2}},"21":{"start":{"line":29,"column":8},"end":{"line":30,"column":79}},"22":{"start":{"line":32,"column":8},"end":{"line":32,"column":34}},"23":{"start":{"line":33,"column":8},"end":{"line":33,"column":32}},"24":{"start":{"line":34,"column":8},"end":{"line":34,"column":50}},"25":{"start":{"line":36,"column":8},"end":{"line":36,"column":31}},"26":{"start":{"line":43,"column":8},"end":{"line":44,"column":79}},"27":{"start":{"line":45,"column":8},"end":{"line":45,"column":36}},"28":{"start":{"line":47,"column":8},"end":{"line":47,"column":31}},"29":{"start":{"line":51,"column":0},"end":{"line":56,"column":2}},"30":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"31":{"start":{"line":53,"column":8},"end":{"line":53,"column":18}},"32":{"start":{"line":55,"column":4},"end":{"line":55,"column":15}},"33":{"start":{"line":58,"column":0},"end":{"line":64,"column":1}},"34":{"start":{"line":59,"column":4},"end":{"line":63,"column":6}},"35":{"start":{"line":66,"column":0},"end":{"line":150,"column":1}},"36":{"start":{"line":67,"column":4},"end":{"line":67,"column":23}},"37":{"start":{"line":68,"column":4},"end":{"line":68,"column":19}},"38":{"start":{"line":69,"column":4},"end":{"line":70,"column":52}},"39":{"start":{"line":71,"column":4},"end":{"line":71,"column":13}},"40":{"start":{"line":73,"column":4},"end":{"line":136,"column":20}},"41":{"start":{"line":75,"column":8},"end":{"line":75,"column":40}},"42":{"start":{"line":76,"column":8},"end":{"line":78,"column":9}},"43":{"start":{"line":77,"column":12},"end":{"line":77,"column":18}},"44":{"start":{"line":81,"column":8},"end":{"line":81,"column":40}},"45":{"start":{"line":83,"column":8},"end":{"line":94,"column":9}},"46":{"start":{"line":86,"column":12},"end":{"line":86,"column":31}},"47":{"start":{"line":87,"column":12},"end":{"line":87,"column":18}},"48":{"start":{"line":88,"column":12},"end":{"line":88,"column":21}},"49":{"start":{"line":92,"column":13},"end":{"line":94,"column":9}},"50":{"start":{"line":93,"column":12},"end":{"line":93,"column":18}},"51":{"start":{"line":96,"column":8},"end":{"line":96,"column":14}},"52":{"start":{"line":97,"column":8},"end":{"line":97,"column":17}},"53":{"start":{"line":98,"column":8},"end":{"line":133,"column":9}},"54":{"start":{"line":100,"column":16},"end":{"line":100,"column":47}},"55":{"start":{"line":101,"column":16},"end":{"line":101,"column":22}},"56":{"start":{"line":103,"column":16},"end":{"line":103,"column":49}},"57":{"start":{"line":104,"column":16},"end":{"line":104,"column":22}},"58":{"start":{"line":106,"column":16},"end":{"line":106,"column":49}},"59":{"start":{"line":107,"column":16},"end":{"line":107,"column":22}},"60":{"start":{"line":109,"column":16},"end":{"line":109,"column":49}},"61":{"start":{"line":110,"column":16},"end":{"line":110,"column":22}},"62":{"start":{"line":112,"column":16},"end":{"line":112,"column":47}},"63":{"start":{"line":113,"column":16},"end":{"line":113,"column":22}},"64":{"start":{"line":115,"column":16},"end":{"line":115,"column":47}},"65":{"start":{"line":116,"column":16},"end":{"line":116,"column":22}},"66":{"start":{"line":118,"column":16},"end":{"line":118,"column":40}},"67":{"start":{"line":119,"column":16},"end":{"line":119,"column":22}},"68":{"start":{"line":122,"column":16},"end":{"line":122,"column":40}},"69":{"start":{"line":123,"column":16},"end":{"line":123,"column":22}},"70":{"start":{"line":125,"column":16},"end":{"line":125,"column":41}},"71":{"start":{"line":126,"column":16},"end":{"line":126,"column":22}},"72":{"start":{"line":128,"column":16},"end":{"line":128,"column":40}},"73":{"start":{"line":129,"column":16},"end":{"line":129,"column":22}},"74":{"start":{"line":131,"column":16},"end":{"line":131,"column":42}},"75":{"start":{"line":132,"column":16},"end":{"line":132,"column":22}},"76":{"start":{"line":134,"column":8},"end":{"line":134,"column":50}},"77":{"start":{"line":135,"column":8},"end":{"line":135,"column":14}},"78":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"79":{"start":{"line":139,"column":8},"end":{"line":139,"column":58}},"80":{"start":{"line":142,"column":4},"end":{"line":144,"column":5}},"81":{"start":{"line":143,"column":8},"end":{"line":143,"column":30}},"82":{"start":{"line":146,"column":4},"end":{"line":149,"column":6}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":27}},{"start":{"line":30,"column":30},"end":{"line":30,"column":78}}]},"2":{"line":43,"type":"cond-expr","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":27}},{"start":{"line":44,"column":30},"end":{"line":44,"column":78}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"4":{"line":69,"type":"cond-expr","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":30}},{"start":{"line":70,"column":33},"end":{"line":70,"column":51}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":8}},{"start":{"line":76,"column":8},"end":{"line":76,"column":8}}]},"6":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"7":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":12},"end":{"line":83,"column":35}},{"start":{"line":84,"column":12},"end":{"line":84,"column":50}}]},"8":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":13},"end":{"line":92,"column":13}},{"start":{"line":92,"column":13},"end":{"line":92,"column":13}}]},"9":{"line":98,"type":"switch","locations":[{"start":{"line":99,"column":12},"end":{"line":101,"column":22}},{"start":{"line":102,"column":12},"end":{"line":104,"column":22}},{"start":{"line":105,"column":12},"end":{"line":107,"column":22}},{"start":{"line":108,"column":12},"end":{"line":110,"column":22}},{"start":{"line":111,"column":12},"end":{"line":113,"column":22}},{"start":{"line":114,"column":12},"end":{"line":116,"column":22}},{"start":{"line":117,"column":12},"end":{"line":119,"column":22}},{"start":{"line":120,"column":12},"end":{"line":120,"column":31}},{"start":{"line":121,"column":12},"end":{"line":123,"column":22}},{"start":{"line":124,"column":12},"end":{"line":126,"column":22}},{"start":{"line":127,"column":12},"end":{"line":129,"column":22}},{"start":{"line":130,"column":12},"end":{"line":132,"column":22}}]},"10":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"11":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":15}},{"start":{"line":138,"column":19},"end":{"line":138,"column":31}}]},"12":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]}},"code":["var TokenTypes = require('./../TokenTypes');","var DOT_SEPARATOR = '.';","var COMMA_SEPARATOR = ',';","var OPENING_BRACKET = '[';","var CLOSING_BRACKET = ']';","var OPENING_BRACE = '{';","var CLOSING_BRACE = '}';","var COLON = ':';","var ESCAPE = '\\\\';","var DOUBLE_OUOTES = '\"';","var SINGE_OUOTES = \"'\";","var SPACE = \" \";","var SPECIAL_CHARACTERS = '\\\\\\'\"[]., ';","var EXT_SPECIAL_CHARACTERS = '\\\\{}\\'\"[]., :';","","var Tokenizer = module.exports = function(string, ext) {","    this._string = string;","    this._idx = -1;","    this._extended = ext;","    this.parseString = '';","};","","Tokenizer.prototype = {","    /**","     * grabs the next token either from the peek operation or generates the","     * next token.","     */","    next: function() {","        var nextToken = this._nextToken ?","            this._nextToken : getNext(this._string, this._idx, this._extended);","","        this._idx = nextToken.idx;","        this._nextToken = false;","        this.parseString += nextToken.token.token;","","        return nextToken.token;","    },","","    /**","     * will peak but not increment the tokenizer","     */","    peek: function() {","        var nextToken = this._nextToken ?","            this._nextToken : getNext(this._string, this._idx, this._extended);","        this._nextToken = nextToken;","","        return nextToken.token;","    }","};","","Tokenizer.toNumber = function toNumber(x) {","    if (!isNaN(+x)) {","        return +x;","    }","    return NaN;","};","","function toOutput(token, type, done) {","    return {","        token: token,","        done: done,","        type: type","    };","}","","function getNext(string, idx, ext) {","    var output = false;","    var token = '';","    var specialChars = ext ?","        EXT_SPECIAL_CHARACTERS : SPECIAL_CHARACTERS;","    var done;","","    do {","","        done = idx + 1 >= string.length;","        if (done) {","            break;","        }","","        // we have to peek at the next token","        var character = string[idx + 1];","","        if (character !== undefined &&","            specialChars.indexOf(character) === -1) {","","            token += character;","            ++idx;","            continue;","        }","","        // The token to delimiting character transition.","        else if (token.length) {","            break;","        }","","        ++idx;","        var type;","        switch (character) {","            case DOT_SEPARATOR:","                type = TokenTypes.dotSeparator;","                break;","            case COMMA_SEPARATOR:","                type = TokenTypes.commaSeparator;","                break;","            case OPENING_BRACKET:","                type = TokenTypes.openingBracket;","                break;","            case CLOSING_BRACKET:","                type = TokenTypes.closingBracket;","                break;","            case OPENING_BRACE:","                type = TokenTypes.openingBrace;","                break;","            case CLOSING_BRACE:","                type = TokenTypes.closingBrace;","                break;","            case SPACE:","                type = TokenTypes.space;","                break;","            case DOUBLE_OUOTES:","            case SINGE_OUOTES:","                type = TokenTypes.quote;","                break;","            case ESCAPE:","                type = TokenTypes.escape;","                break;","            case COLON:","                type = TokenTypes.colon;","                break;","            default:","                type = TokenTypes.unknown;","                break;","        }","        output = toOutput(character, type, false);","        break;","    } while (!done);","","    if (!output && token.length) {","        output = toOutput(token, TokenTypes.token, false);","    }","","    if (!output) {","        output = {done: true};","    }","","    return {","        token: output,","        idx: idx","    };","}","","",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":1,"17":0,"18":0,"19":0,"20":0,"23":1,"29":0,"32":0,"33":0,"34":0,"36":0,"43":0,"45":0,"47":0,"51":1,"52":0,"53":0,"55":0,"58":1,"59":0,"66":1,"67":0,"68":0,"69":0,"71":0,"73":0,"75":0,"76":0,"77":0,"81":0,"83":0,"86":0,"87":0,"88":0,"92":0,"93":0,"96":0,"97":0,"98":0,"100":0,"101":0,"103":0,"104":0,"106":0,"107":0,"109":0,"110":0,"112":0,"113":0,"115":0,"116":0,"118":0,"119":0,"122":0,"123":0,"125":0,"126":0,"128":0,"129":0,"131":0,"132":0,"134":0,"135":0,"138":0,"139":0,"142":0,"143":0,"146":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/TokenTypes.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/TokenTypes.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":2}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":28}}},"branchMap":{},"code":["var TokenTypes = {","    token: 'token',","    dotSeparator: '.',","    commaSeparator: ',',","    openingBracket: '[',","    closingBracket: ']',","    openingBrace: '{',","    closingBrace: '}',","    escape: '\\\\',","    space: ' ',","    colon: ':',","    quote: 'quote',","    unknown: 'unknown'","};","","module.exports = TokenTypes;",""],"l":{"1":1,"16":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/head.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/head.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"head","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":9,"column":0},"end":{"line":58,"column":2}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":19}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":17}},"8":{"start":{"line":14,"column":4},"end":{"line":51,"column":5}},"9":{"start":{"line":16,"column":8},"end":{"line":47,"column":9}},"10":{"start":{"line":18,"column":16},"end":{"line":18,"column":44}},"11":{"start":{"line":19,"column":16},"end":{"line":21,"column":17}},"12":{"start":{"line":20,"column":20},"end":{"line":20,"column":65}},"13":{"start":{"line":22,"column":16},"end":{"line":22,"column":46}},"14":{"start":{"line":23,"column":16},"end":{"line":23,"column":22}},"15":{"start":{"line":27,"column":16},"end":{"line":29,"column":17}},"16":{"start":{"line":28,"column":20},"end":{"line":28,"column":63}},"17":{"start":{"line":30,"column":16},"end":{"line":30,"column":22}},"18":{"start":{"line":36,"column":16},"end":{"line":36,"column":22}},"19":{"start":{"line":41,"column":16},"end":{"line":41,"column":54}},"20":{"start":{"line":42,"column":16},"end":{"line":42,"column":22}},"21":{"start":{"line":45,"column":16},"end":{"line":45,"column":59}},"22":{"start":{"line":46,"column":16},"end":{"line":46,"column":22}},"23":{"start":{"line":50,"column":8},"end":{"line":50,"column":33}},"24":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"25":{"start":{"line":54,"column":8},"end":{"line":54,"column":47}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":15}}},"branchMap":{"1":{"line":16,"type":"switch","locations":[{"start":{"line":17,"column":12},"end":{"line":23,"column":22}},{"start":{"line":26,"column":12},"end":{"line":30,"column":22}},{"start":{"line":33,"column":12},"end":{"line":36,"column":22}},{"start":{"line":40,"column":12},"end":{"line":42,"column":22}},{"start":{"line":44,"column":12},"end":{"line":46,"column":22}}]},"2":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":16},"end":{"line":19,"column":16}},{"start":{"line":19,"column":16},"end":{"line":19,"column":16}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":16}},{"start":{"line":27,"column":16},"end":{"line":27,"column":16}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]}},"code":["var TokenTypes = require('./../TokenTypes');","var E = require('./../exceptions');","var indexer = require('./indexer');","","/**"," * The top level of the parse tree.  This returns the generated path"," * from the tokenizer."," */","module.exports = function head(tokenizer) {","    var token = tokenizer.next();","    var state = {};","    var out = [];","","    while (!token.done) {","","        switch (token.type) {","            case TokenTypes.token:","                var first = +token.token[0];","                if (!isNaN(first)) {","                    E.throwError(E.invalidIdentifier, tokenizer);","                }","                out[out.length] = token.token;","                break;","","            // dotSeparators at the top level have no meaning","            case TokenTypes.dotSeparator:","                if (out.length === 0) {","                    E.throwError(E.unexpectedToken, tokenizer);","                }","                break;","","            // Spaces do nothing.","            case TokenTypes.space:","                // NOTE: Spaces at the top level are allowed.","                // titlesById  .summary is a valid path.","                break;","","","            // Its time to decend the parse tree.","            case TokenTypes.openingBracket:","                indexer(tokenizer, token, state, out);","                break;","","            default:","                E.throwError(E.unexpectedToken, tokenizer);","                break;","        }","","        // Keep cycling through the tokenizer.","        token = tokenizer.next();","    }","","    if (out.length === 0) {","        E.throwError(E.invalidPath, tokenizer);","    }","","    return out;","};","",""],"l":{"1":1,"2":1,"3":1,"9":1,"10":0,"11":0,"12":0,"14":0,"16":0,"18":0,"19":0,"20":0,"22":0,"23":0,"27":0,"28":0,"30":0,"36":0,"41":0,"42":0,"45":0,"46":0,"50":0,"53":0,"54":0,"57":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/exceptions/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/exceptions/index.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":31,"column":2}},"2":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"3":{"start":{"line":27,"column":12},"end":{"line":27,"column":86}},"4":{"start":{"line":29,"column":8},"end":{"line":29,"column":51}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]}},"code":["module.exports = {","    indexer: {","        nested: 'Indexers cannot be nested.',","        needQuotes: 'unquoted indexers must be numeric.',","        empty: 'cannot have empty indexers.',","        leadingDot: 'Indexers cannot have leading dots.',","        leadingComma: 'Indexers cannot have leading comma.',","        requiresComma: 'Indexers require commas between indexer args.',","        routedTokens: 'Only one token can be used per indexer when specifying routed tokens.'","    },","    range: {","        precedingNaN: 'ranges must be preceded by numbers.',","        suceedingNaN: 'ranges must be suceeded by numbers.'","    },","    routed: {","        invalid: 'Invalid routed token.  only integers|ranges|keys are supported.'","    },","    quote: {","        empty: 'cannot have empty quoted keys.',","        illegalEscape: 'Invalid escape character.  Only quotes are escapable.'","    },","    unexpectedToken: 'Unexpected token.',","    invalidIdentifier: 'Invalid Identifier.',","    invalidPath: 'Please provide a valid path.',","    throwError: function(err, tokenizer, token) {","        if (token) {","            throw err + ' -- ' + tokenizer.parseString + ' with next token: ' + token;","        }","        throw err + ' -- ' + tokenizer.parseString;","    }","};","",""],"l":{"1":1,"26":0,"27":0,"29":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/indexer.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/indexer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"indexer","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":71}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"7":{"start":{"line":12,"column":0},"end":{"line":113,"column":2}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":33}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":21}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":29}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":30}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":23}},"13":{"start":{"line":21,"column":4},"end":{"line":94,"column":5}},"14":{"start":{"line":23,"column":8},"end":{"line":32,"column":9}},"15":{"start":{"line":28,"column":16},"end":{"line":30,"column":17}},"16":{"start":{"line":29,"column":20},"end":{"line":29,"column":64}},"17":{"start":{"line":31,"column":16},"end":{"line":31,"column":22}},"18":{"start":{"line":34,"column":8},"end":{"line":85,"column":9}},"19":{"start":{"line":37,"column":16},"end":{"line":37,"column":37}},"20":{"start":{"line":38,"column":16},"end":{"line":38,"column":53}},"21":{"start":{"line":39,"column":16},"end":{"line":39,"column":22}},"22":{"start":{"line":43,"column":16},"end":{"line":43,"column":37}},"23":{"start":{"line":44,"column":16},"end":{"line":46,"column":17}},"24":{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},"25":{"start":{"line":47,"column":16},"end":{"line":47,"column":56}},"26":{"start":{"line":48,"column":16},"end":{"line":48,"column":22}},"27":{"start":{"line":52,"column":16},"end":{"line":54,"column":17}},"28":{"start":{"line":53,"column":20},"end":{"line":53,"column":61}},"29":{"start":{"line":55,"column":16},"end":{"line":55,"column":52}},"30":{"start":{"line":56,"column":16},"end":{"line":56,"column":22}},"31":{"start":{"line":60,"column":16},"end":{"line":60,"column":22}},"32":{"start":{"line":63,"column":16},"end":{"line":63,"column":28}},"33":{"start":{"line":64,"column":16},"end":{"line":64,"column":22}},"34":{"start":{"line":69,"column":16},"end":{"line":69,"column":52}},"35":{"start":{"line":70,"column":16},"end":{"line":70,"column":22}},"36":{"start":{"line":75,"column":16},"end":{"line":75,"column":53}},"37":{"start":{"line":76,"column":16},"end":{"line":76,"column":22}},"38":{"start":{"line":79,"column":16},"end":{"line":79,"column":35}},"39":{"start":{"line":80,"column":16},"end":{"line":80,"column":22}},"40":{"start":{"line":83,"column":16},"end":{"line":83,"column":59}},"41":{"start":{"line":84,"column":16},"end":{"line":84,"column":22}},"42":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"43":{"start":{"line":89,"column":12},"end":{"line":89,"column":18}},"44":{"start":{"line":93,"column":8},"end":{"line":93,"column":33}},"45":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"46":{"start":{"line":97,"column":8},"end":{"line":97,"column":44}},"47":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"48":{"start":{"line":101,"column":8},"end":{"line":101,"column":51}},"49":{"start":{"line":105,"column":4},"end":{"line":107,"column":5}},"50":{"start":{"line":106,"column":8},"end":{"line":106,"column":41}},"51":{"start":{"line":109,"column":4},"end":{"line":109,"column":36}},"52":{"start":{"line":112,"column":4},"end":{"line":112,"column":30}}},"branchMap":{"1":{"line":23,"type":"switch","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":34}},{"start":{"line":25,"column":12},"end":{"line":31,"column":22}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":16},"end":{"line":28,"column":16}},{"start":{"line":28,"column":16},"end":{"line":28,"column":16}}]},"3":{"line":34,"type":"switch","locations":[{"start":{"line":36,"column":12},"end":{"line":39,"column":22}},{"start":{"line":42,"column":12},"end":{"line":48,"column":22}},{"start":{"line":51,"column":12},"end":{"line":56,"column":22}},{"start":{"line":59,"column":12},"end":{"line":60,"column":22}},{"start":{"line":62,"column":12},"end":{"line":64,"column":22}},{"start":{"line":68,"column":12},"end":{"line":70,"column":22}},{"start":{"line":74,"column":12},"end":{"line":76,"column":22}},{"start":{"line":78,"column":12},"end":{"line":80,"column":22}},{"start":{"line":82,"column":12},"end":{"line":84,"column":22}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":16}},{"start":{"line":44,"column":16},"end":{"line":44,"column":16}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":16}},{"start":{"line":52,"column":16},"end":{"line":52,"column":16}}]},"6":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"8":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"9":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":32}},{"start":{"line":100,"column":36},"end":{"line":100,"column":49}}]},"10":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]}},"code":["var TokenTypes = require('./../TokenTypes');","var E = require('./../exceptions');","var idxE = E.indexer;","var range = require('./range');","var quote = require('./quote');","var routed = require('./routed');","","/**"," * The indexer is all the logic that happens in between"," * the '[', opening bracket, and ']' closing bracket."," */","module.exports = function indexer(tokenizer, openingToken, state, out) {","    var token = tokenizer.next();","    var done = false;","    var allowedMaxLength = 1;","    var routedIndexer = false;","","    // State variables","    state.indexer = [];","","    while (!token.done) {","","        switch (token.type) {","            case TokenTypes.token:","            case TokenTypes.quote:","","                // ensures that token adders are properly delimited.","                if (state.indexer.length === allowedMaxLength) {","                    E.throwError(idxE.requiresComma, tokenizer);","                }","                break;","        }","","        switch (token.type) {","            // Extended syntax case","            case TokenTypes.openingBrace:","                routedIndexer = true;","                routed(tokenizer, token, state, out);","                break;","","","            case TokenTypes.token:","                var t = +token.token;","                if (isNaN(t)) {","                    E.throwError(idxE.needQuotes, tokenizer);","                }","                state.indexer[state.indexer.length] = t;","                break;","","            // dotSeparators at the top level have no meaning","            case TokenTypes.dotSeparator:","                if (!state.indexer.length) {","                    E.throwError(idxE.leadingDot, tokenizer);","                }","                range(tokenizer, token, state, out);","                break;","","            // Spaces do nothing.","            case TokenTypes.space:","                break;","","            case TokenTypes.closingBracket:","                done = true;","                break;","","","            // The quotes require their own tree due to what can be in it.","            case TokenTypes.quote:","                quote(tokenizer, token, state, out);","                break;","","","            // Its time to decend the parse tree.","            case TokenTypes.openingBracket:","                E.throwError(idxE.nested, tokenizer);","                break;","","            case TokenTypes.commaSeparator:","                ++allowedMaxLength;","                break;","","            default:","                E.throwError(E.unexpectedToken, tokenizer);","                break;","        }","","        // If done, leave loop","        if (done) {","            break;","        }","","        // Keep cycling through the tokenizer.","        token = tokenizer.next();","    }","","    if (state.indexer.length === 0) {","        E.throwError(idxE.empty, tokenizer);","    }","","    if (state.indexer.length > 1 && routedIndexer) {","        E.throwError(idxE.routedTokens, tokenizer);","    }","","    // Remember, if an array of 1, keySets will be generated.","    if (state.indexer.length === 1) {","        state.indexer = state.indexer[0];","    }","","    out[out.length] = state.indexer;","","    // Clean state.","    state.indexer = undefined;","};","",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"12":1,"13":0,"14":0,"15":0,"16":0,"19":0,"21":0,"23":0,"28":0,"29":0,"31":0,"34":0,"37":0,"38":0,"39":0,"43":0,"44":0,"45":0,"47":0,"48":0,"52":0,"53":0,"55":0,"56":0,"60":0,"63":0,"64":0,"69":0,"70":0,"75":0,"76":0,"79":0,"80":0,"83":0,"84":0,"88":0,"89":0,"93":0,"96":0,"97":0,"100":0,"101":0,"105":0,"106":0,"109":0,"112":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/range.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/range.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"range","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":9,"column":0},"end":{"line":76,"column":2}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":21}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":25}},"9":{"start":{"line":16,"column":4},"end":{"line":16,"column":39}},"10":{"start":{"line":17,"column":4},"end":{"line":17,"column":54}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":11}},"12":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":54}},"14":{"start":{"line":26,"column":4},"end":{"line":73,"column":5}},"15":{"start":{"line":28,"column":8},"end":{"line":57,"column":9}},"16":{"start":{"line":32,"column":16},"end":{"line":34,"column":17}},"17":{"start":{"line":33,"column":20},"end":{"line":33,"column":63}},"18":{"start":{"line":35,"column":16},"end":{"line":35,"column":27}},"19":{"start":{"line":37,"column":16},"end":{"line":39,"column":17}},"20":{"start":{"line":38,"column":20},"end":{"line":38,"column":38}},"21":{"start":{"line":40,"column":16},"end":{"line":40,"column":22}},"22":{"start":{"line":44,"column":16},"end":{"line":44,"column":64}},"23":{"start":{"line":47,"column":16},"end":{"line":49,"column":17}},"24":{"start":{"line":48,"column":20},"end":{"line":48,"column":66}},"25":{"start":{"line":51,"column":16},"end":{"line":51,"column":28}},"26":{"start":{"line":52,"column":16},"end":{"line":52,"column":22}},"27":{"start":{"line":55,"column":16},"end":{"line":55,"column":28}},"28":{"start":{"line":56,"column":16},"end":{"line":56,"column":22}},"29":{"start":{"line":62,"column":8},"end":{"line":72,"column":9}},"30":{"start":{"line":63,"column":12},"end":{"line":63,"column":29}},"31":{"start":{"line":66,"column":12},"end":{"line":66,"column":37}},"32":{"start":{"line":71,"column":12},"end":{"line":71,"column":18}},"33":{"start":{"line":75,"column":4},"end":{"line":75,"column":67}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":11},"end":{"line":26,"column":16}},{"start":{"line":26,"column":20},"end":{"line":26,"column":31}}]},"3":{"line":28,"type":"switch","locations":[{"start":{"line":31,"column":12},"end":{"line":40,"column":22}},{"start":{"line":42,"column":12},"end":{"line":52,"column":22}},{"start":{"line":54,"column":12},"end":{"line":56,"column":22}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":16}},{"start":{"line":32,"column":16},"end":{"line":32,"column":16}}]},"5":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":16},"end":{"line":37,"column":16}},{"start":{"line":37,"column":16},"end":{"line":37,"column":16}}]},"6":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":16},"end":{"line":47,"column":16}},{"start":{"line":47,"column":16},"end":{"line":47,"column":16}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":8}},{"start":{"line":62,"column":8},"end":{"line":62,"column":8}}]},"8":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":54},"end":{"line":75,"column":56}},{"start":{"line":75,"column":59},"end":{"line":75,"column":65}}]}},"code":["var Tokenizer = require('./../tokenizer');","var TokenTypes = require('./../TokenTypes');","var E = require('./../exceptions');","","/**"," * The indexer is all the logic that happens in between"," * the '[', opening bracket, and ']' closing bracket."," */","module.exports = function range(tokenizer, openingToken, state, out) {","    var token = tokenizer.peek();","    var dotCount = 1;","    var done = false;","    var inclusive = true;","","    // Grab the last token off the stack.  Must be an integer.","    var idx = state.indexer.length - 1;","    var from = Tokenizer.toNumber(state.indexer[idx]);","    var to;","","    if (isNaN(from)) {","        E.throwError(E.range.precedingNaN, tokenizer);","    }","","    // Why is number checking so difficult in javascript.","","    while (!done && !token.done) {","","        switch (token.type) {","","            // dotSeparators at the top level have no meaning","            case TokenTypes.dotSeparator:","                if (dotCount === 3) {","                    E.throwError(E.unexpectedToken, tokenizer);","                }","                ++dotCount;","","                if (dotCount === 3) {","                    inclusive = false;","                }","                break;","","            case TokenTypes.token:","                // move the tokenizer forward and save to.","                to = Tokenizer.toNumber(tokenizer.next().token);","","                // throw potential error.","                if (isNaN(to)) {","                    E.throwError(E.range.suceedingNaN, tokenizer);","                }","","                done = true;","                break;","","            default:","                done = true;","                break;","        }","","        // Keep cycling through the tokenizer.  But ranges have to peek","        // before they go to the next token since there is no 'terminating'","        // character.","        if (!done) {","            tokenizer.next();","","            // go to the next token without consuming.","            token = tokenizer.peek();","        }","","        // break and remove state information.","        else {","            break;","        }","    }","","    state.indexer[idx] = {from: from, to: inclusive ? to : to - 1};","};","",""],"l":{"1":1,"2":1,"3":1,"9":1,"10":0,"11":0,"12":0,"13":0,"16":0,"17":0,"18":0,"20":0,"21":0,"26":0,"28":0,"32":0,"33":0,"35":0,"37":0,"38":0,"40":0,"44":0,"47":0,"48":0,"51":0,"52":0,"55":0,"56":0,"62":0,"63":0,"66":0,"71":0,"75":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/quote.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/quote.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0,0,0,0,0,0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"quote","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"4":{"start":{"line":12,"column":0},"end":{"line":81,"column":2}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":33}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":24}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":25}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":21}},"10":{"start":{"line":19,"column":4},"end":{"line":74,"column":5}},"11":{"start":{"line":21,"column":8},"end":{"line":65,"column":9}},"12":{"start":{"line":32,"column":16},"end":{"line":34,"column":17}},"13":{"start":{"line":33,"column":20},"end":{"line":33,"column":66}},"14":{"start":{"line":36,"column":16},"end":{"line":36,"column":42}},"15":{"start":{"line":37,"column":16},"end":{"line":37,"column":22}},"16":{"start":{"line":42,"column":16},"end":{"line":56,"column":17}},"17":{"start":{"line":43,"column":20},"end":{"line":43,"column":46}},"18":{"start":{"line":44,"column":20},"end":{"line":44,"column":37}},"19":{"start":{"line":48,"column":21},"end":{"line":56,"column":17}},"20":{"start":{"line":49,"column":20},"end":{"line":49,"column":46}},"21":{"start":{"line":55,"column":20},"end":{"line":55,"column":32}},"22":{"start":{"line":58,"column":16},"end":{"line":58,"column":22}},"23":{"start":{"line":60,"column":16},"end":{"line":60,"column":32}},"24":{"start":{"line":61,"column":16},"end":{"line":61,"column":22}},"25":{"start":{"line":64,"column":16},"end":{"line":64,"column":59}},"26":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"27":{"start":{"line":69,"column":12},"end":{"line":69,"column":18}},"28":{"start":{"line":73,"column":8},"end":{"line":73,"column":33}},"29":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"30":{"start":{"line":77,"column":8},"end":{"line":77,"column":46}},"31":{"start":{"line":80,"column":4},"end":{"line":80,"column":53}}},"branchMap":{"1":{"line":21,"type":"switch","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":34}},{"start":{"line":23,"column":12},"end":{"line":23,"column":34}},{"start":{"line":25,"column":12},"end":{"line":25,"column":41}},{"start":{"line":26,"column":12},"end":{"line":26,"column":43}},{"start":{"line":28,"column":12},"end":{"line":28,"column":43}},{"start":{"line":29,"column":12},"end":{"line":29,"column":43}},{"start":{"line":30,"column":12},"end":{"line":30,"column":41}},{"start":{"line":31,"column":12},"end":{"line":37,"column":22}},{"start":{"line":40,"column":12},"end":{"line":58,"column":22}},{"start":{"line":59,"column":12},"end":{"line":61,"column":22}},{"start":{"line":63,"column":12},"end":{"line":64,"column":59}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":16}},{"start":{"line":32,"column":16},"end":{"line":32,"column":16}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":16}},{"start":{"line":42,"column":16},"end":{"line":42,"column":16}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":21},"end":{"line":48,"column":21}},{"start":{"line":48,"column":21},"end":{"line":48,"column":21}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"6":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]}},"code":["var TokenTypes = require('./../TokenTypes');","var E = require('./../exceptions');","var quoteE = E.quote;","","/**"," * quote is all the parse tree in between quotes.  This includes the only"," * escaping logic."," *"," * parse-tree:"," * <opening-quote>(.|(<escape><opening-quote>))*<opening-quote>"," */","module.exports = function quote(tokenizer, openingToken, state, out) {","    var token = tokenizer.next();","    var innerToken = '';","    var openingQuote = openingToken.token;","    var escaping = false;","    var done = false;","","    while (!token.done) {","","        switch (token.type) {","            case TokenTypes.token:","            case TokenTypes.space:","","            case TokenTypes.dotSeparator:","            case TokenTypes.commaSeparator:","","            case TokenTypes.openingBracket:","            case TokenTypes.closingBracket:","            case TokenTypes.openingBrace:","            case TokenTypes.closingBrace:","                if (escaping) {","                    E.throwError(quoteE.illegalEscape, tokenizer);","                }","","                innerToken += token.token;","                break;","","","            case TokenTypes.quote:","                // the simple case.  We are escaping","                if (escaping) {","                    innerToken += token.token;","                    escaping = false;","                }","","                // its not a quote that is the opening quote","                else if (token.token !== openingQuote) {","                    innerToken += token.token;","                }","","                // last thing left.  Its a quote that is the opening quote","                // therefore we must produce the inner token of the indexer.","                else {","                    done = true;","                }","","                break;","            case TokenTypes.escape:","                escaping = true;","                break;","","            default:","                E.throwError(E.unexpectedToken, tokenizer);","        }","","        // If done, leave loop","        if (done) {","            break;","        }","","        // Keep cycling through the tokenizer.","        token = tokenizer.next();","    }","","    if (innerToken.length === 0) {","        E.throwError(quoteE.empty, tokenizer);","    }","","    state.indexer[state.indexer.length] = innerToken;","};","",""],"l":{"1":1,"2":1,"3":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"21":0,"32":0,"33":0,"36":0,"37":0,"42":0,"43":0,"44":0,"48":0,"49":0,"55":0,"58":0,"60":0,"61":0,"64":0,"68":0,"69":0,"73":0,"76":0,"77":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/routed.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/parse-tree/routed.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"routed","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":70}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"5":{"start":{"line":12,"column":0},"end":{"line":63,"column":2}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":38}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":22}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":18}},"9":{"start":{"line":18,"column":4},"end":{"line":27,"column":5}},"10":{"start":{"line":23,"column":12},"end":{"line":23,"column":18}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":53}},"12":{"start":{"line":26,"column":12},"end":{"line":26,"column":18}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":32}},"14":{"start":{"line":33,"column":4},"end":{"line":45,"column":5}},"15":{"start":{"line":34,"column":8},"end":{"line":34,"column":21}},"16":{"start":{"line":37,"column":8},"end":{"line":37,"column":32}},"17":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"18":{"start":{"line":39,"column":12},"end":{"line":39,"column":53}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":26}},"20":{"start":{"line":44,"column":8},"end":{"line":44,"column":32}},"21":{"start":{"line":49,"column":4},"end":{"line":61,"column":5}},"22":{"start":{"line":50,"column":8},"end":{"line":54,"column":10}},"23":{"start":{"line":55,"column":8},"end":{"line":55,"column":58}},"24":{"start":{"line":60,"column":8},"end":{"line":60,"column":49}}},"branchMap":{"1":{"line":18,"type":"switch","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":35}},{"start":{"line":20,"column":8},"end":{"line":20,"column":33}},{"start":{"line":21,"column":8},"end":{"line":23,"column":18}},{"start":{"line":24,"column":8},"end":{"line":26,"column":18}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":8}},{"start":{"line":38,"column":8},"end":{"line":38,"column":8}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]}},"code":["var TokenTypes = require('./../TokenTypes');","var RoutedTokens = require('./../RoutedTokens');","var E = require('./../exceptions');","var routedE = E.routed;","","/**"," * The routing logic."," *"," * parse-tree:"," * <opening-brace><routed-token>(:<token>)<closing-brace>"," */","module.exports = function routed(tokenizer, openingToken, state, out) {","    var routeToken = tokenizer.next();","    var named = false;","    var name = '';","","    // ensure the routed token is a valid ident.","    switch (routeToken.token) {","        case RoutedTokens.integers:","        case RoutedTokens.ranges:","        case RoutedTokens.keys:","            //valid","            break;","        default:","            E.throwError(routedE.invalid, tokenizer);","            break;","    }","","    // Now its time for colon or ending brace.","    var next = tokenizer.next();","","    // we are parsing a named identifier.","    if (next.type === TokenTypes.colon) {","        named = true;","","        // Get the token name.","        next = tokenizer.next();","        if (next.type !== TokenTypes.token) {","            E.throwError(routedE.invalid, tokenizer);","        }","        name = next.token;","","        // move to the closing brace.","        next = tokenizer.next();","    }","","    // must close with a brace.","","    if (next.type === TokenTypes.closingBrace) {","        var outputToken = {","            type: routeToken.token,","            named: named,","            name: name","        };","        state.indexer[state.indexer.length] = outputToken;","    }","","    // closing brace expected","    else {","        E.throwError(routedE.invalid, tokenizer);","    }","","};","",""],"l":{"1":1,"2":1,"3":1,"4":1,"12":1,"13":0,"14":0,"15":0,"18":0,"23":0,"25":0,"26":0,"30":0,"33":0,"34":0,"37":0,"38":0,"39":0,"41":0,"44":0,"49":0,"50":0,"55":0,"60":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/RoutedTokens.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor-path-syntax/src/RoutedTokens.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":2}}},"branchMap":{},"code":["module.exports = {","    integers: 'integers',","    ranges: 'ranges',","    keys: 'keys'","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/model-created.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/model-created.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}}},"branchMap":{},"code":["module.exports = \"$modelCreated\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/clone.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"clone","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":44}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"5":{"start":{"line":6,"column":0},"end":{"line":19,"column":2}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":21}},"7":{"start":{"line":8,"column":4},"end":{"line":17,"column":5}},"8":{"start":{"line":9,"column":8},"end":{"line":9,"column":40}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":24}},"10":{"start":{"line":11,"column":8},"end":{"line":16,"column":9}},"11":{"start":{"line":12,"column":12},"end":{"line":14,"column":13}},"12":{"start":{"line":13,"column":16},"end":{"line":13,"column":25}},"13":{"start":{"line":15,"column":12},"end":{"line":15,"column":33}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":16}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":32},"end":{"line":9,"column":34}},{"start":{"line":9,"column":37},"end":{"line":9,"column":39}}]},"3":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":12}},{"start":{"line":12,"column":12},"end":{"line":12,"column":12}}]},"4":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":16},"end":{"line":12,"column":33}},{"start":{"line":12,"column":37},"end":{"line":12,"column":54}}]}},"code":["var prefix = require(\"./../internal/prefix\");","var hasOwn = require(\"./../support/hasOwn\");","var isArray = Array.isArray;","var isObject = require(\"./../support/isObject\");","","module.exports = function clone(value) {","    var dest = value;","    if (isObject(dest)) {","        dest = isArray(value) ? [] : {};","        var src = value;","        for (var key in src) {","            if (key[0] === prefix || !hasOwn(src, key)) {","                continue;","            }","            dest[key] = src[key];","        }","    }","    return dest;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"15":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/getExpires.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/getExpires.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getSize","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":56}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":11},"end":{"line":3,"column":25}},{"start":{"line":3,"column":29},"end":{"line":3,"column":42}},{"start":{"line":3,"column":46},"end":{"line":3,"column":55}}]}},"code":["var isObject = require(\"./isObject\");","module.exports = function getSize(node) {","    return isObject(node) && node.$expires || undefined;","};",""],"l":{"1":1,"2":1,"3":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/insertNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/insertNode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"insertNode","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"4":{"start":{"line":5,"column":0},"end":{"line":11,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":22}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":28}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":30}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":23}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":16}}},"branchMap":{},"code":["var __key = require(\"./../internal/key\");","var __parent = require(\"./../internal/parent\");","var __version = require(\"./../internal/version\");","","module.exports = function insertNode(node, parent, key, version) {","    node[__key] = key;","    node[__parent] = parent;","    node[__version] = version;","    parent[key] = node;","    return node;","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/replaceNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/replaceNode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"replaceNode","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":75}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":76}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":80}},"4":{"start":{"line":5,"column":0},"end":{"line":14,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":11,"column":5}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":20}},"7":{"start":{"line":8,"column":11},"end":{"line":11,"column":5}},"8":{"start":{"line":9,"column":8},"end":{"line":9,"column":50}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":57}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":30}},"11":{"start":{"line":13,"column":4},"end":{"line":13,"column":23}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":4}},{"start":{"line":6,"column":4},"end":{"line":6,"column":4}}]},"2":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":11},"end":{"line":8,"column":11}},{"start":{"line":8,"column":11},"end":{"line":8,"column":11}}]}},"code":["var isObject = require(\"./../support/isObject\");","var transferBackReferences = require(\"./../support/transferBackReferences\");","var removeNodeAndDescendants = require(\"./../support/removeNodeAndDescendants\");","","module.exports = function replaceNode(node, replacement, parent, key, lru) {","    if (node === replacement) {","        return node;","    } else if (isObject(node)) {","        transferBackReferences(node, replacement);","        removeNodeAndDescendants(node, parent, key, lru);","    }","    parent[key] = replacement;","    return replacement;","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"12":0,"13":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/transferBackReferences.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/transferBackReferences.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"transferBackReferences","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":69}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"4":{"start":{"line":5,"column":0},"end":{"line":20,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":8,"column":15}},"6":{"start":{"line":9,"column":4},"end":{"line":16,"column":5}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":38}},"8":{"start":{"line":11,"column":8},"end":{"line":15,"column":9}},"9":{"start":{"line":12,"column":12},"end":{"line":12,"column":38}},"10":{"start":{"line":13,"column":12},"end":{"line":13,"column":61}},"11":{"start":{"line":14,"column":12},"end":{"line":14,"column":41}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":69}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}}},"branchMap":{"1":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":29},"end":{"line":6,"column":51}},{"start":{"line":6,"column":55},"end":{"line":6,"column":56}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":29},"end":{"line":7,"column":51}},{"start":{"line":7,"column":55},"end":{"line":7,"column":56}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]}},"code":["var __ref = require(\"./../internal/ref\");","var __context = require(\"./../internal/context\");","var __refsLength = require(\"./../internal/refs-length\");","","module.exports = function transferBackReferences(fromNode, destNode) {","    var fromNodeRefsLength = fromNode[__refsLength] || 0,","        destNodeRefsLength = destNode[__refsLength] || 0,","        i = -1;","    while (++i < fromNodeRefsLength) {","        var ref = fromNode[__ref + i];","        if (ref !== void 0) {","            ref[__context] = destNode;","            destNode[__ref + (destNodeRefsLength + i)] = ref;","            fromNode[__ref + i] = void 0;","        }","    }","    destNode[__refsLength] = fromNodeRefsLength + destNodeRefsLength;","    fromNode[__refsLength] = void 0;","    return destNode;","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"17":0,"18":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/removeNodeAndDescendants.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/removeNodeAndDescendants.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"removeNodeAndDescendants","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":75}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":45}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":5,"column":0},"end":{"line":17,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":15,"column":5}},"6":{"start":{"line":7,"column":8},"end":{"line":13,"column":9}},"7":{"start":{"line":8,"column":12},"end":{"line":12,"column":13}},"8":{"start":{"line":9,"column":16},"end":{"line":11,"column":17}},"9":{"start":{"line":10,"column":20},"end":{"line":10,"column":74}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":20}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":17}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":4}},{"start":{"line":6,"column":4},"end":{"line":6,"column":4}}]},"2":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":7,"column":8}},{"start":{"line":7,"column":8},"end":{"line":7,"column":8}}]},"3":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":16},"end":{"line":9,"column":16}},{"start":{"line":9,"column":16},"end":{"line":9,"column":16}}]},"4":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":20},"end":{"line":9,"column":38}},{"start":{"line":9,"column":42},"end":{"line":9,"column":57}},{"start":{"line":9,"column":61},"end":{"line":9,"column":79}}]}},"code":["var hasOwn = require(\"./../support/hasOwn\");","var prefix = require(\"./../internal/prefix\");","var removeNode = require(\"./../support/removeNode\");","","module.exports = function removeNodeAndDescendants(node, parent, key, lru) {","    if (removeNode(node, parent, key, lru)) {","        if (node.$type == null) {","            for (var key2 in node) {","                if (key2[0] !== prefix && key2[0] !== \"$\" && hasOwn(node, key2)) {","                    removeNodeAndDescendants(node[key2], node, key2, lru);","                }","            }","        }","        return true;","    }","    return false;","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"14":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/removeNode.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/removeNode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"removeNode","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":61}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":72}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":76}},"7":{"start":{"line":8,"column":0},"end":{"line":22,"column":2}},"8":{"start":{"line":9,"column":4},"end":{"line":20,"column":5}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":30}},"10":{"start":{"line":11,"column":8},"end":{"line":16,"column":9}},"11":{"start":{"line":12,"column":12},"end":{"line":14,"column":13}},"12":{"start":{"line":13,"column":16},"end":{"line":13,"column":45}},"13":{"start":{"line":15,"column":12},"end":{"line":15,"column":30}},"14":{"start":{"line":17,"column":8},"end":{"line":17,"column":35}},"15":{"start":{"line":18,"column":8},"end":{"line":18,"column":46}},"16":{"start":{"line":19,"column":8},"end":{"line":19,"column":20}},"17":{"start":{"line":21,"column":4},"end":{"line":21,"column":17}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]},"3":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":12}},{"start":{"line":12,"column":12},"end":{"line":12,"column":12}}]}},"code":["var $ref = require(\"./../types/ref\");","var __parent = require(\"./../internal/parent\");","var splice = require(\"./../lru/splice\");","var isObject = require(\"./../support/isObject\");","var unlinkBackReferences = require(\"./../support/unlinkBackReferences\");","var unlinkForwardReference = require(\"./../support/unlinkForwardReference\");","","module.exports = function removeNode(node, parent, key, lru) {","    if (isObject(node)) {","        var type = node.$type;","        if (Boolean(type)) {","            if (type === $ref) {","                unlinkForwardReference(node);","            }","            splice(lru, node);","        }","        unlinkBackReferences(node);","        parent[key] = node[__parent] = void 0;","        return true;","    }","    return false;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"15":0,"17":0,"18":0,"19":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/unlinkBackReferences.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/unlinkBackReferences.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"unlinkBackReferences","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":56}},"5":{"start":{"line":6,"column":0},"end":{"line":16,"column":2}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":44}},"7":{"start":{"line":8,"column":4},"end":{"line":13,"column":5}},"8":{"start":{"line":9,"column":8},"end":{"line":9,"column":34}},"9":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"10":{"start":{"line":11,"column":12},"end":{"line":11,"column":72}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":32}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":16}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":20},"end":{"line":7,"column":38}},{"start":{"line":7,"column":42},"end":{"line":7,"column":43}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":8}},{"start":{"line":10,"column":8},"end":{"line":10,"column":8}}]}},"code":["var __ref = require(\"./../internal/ref\");","var __context = require(\"./../internal/context\");","var __refIndex = require(\"./../internal/ref-index\");","var __refsLength = require(\"./../internal/refs-length\");","","module.exports = function unlinkBackReferences(node) {","    var i = -1, n = node[__refsLength] || 0;","    while (++i < n) {","        var ref = node[__ref + i];","        if (ref != null) {","            ref[__context] = ref[__refIndex] = node[__ref + i] = void 0;","        }","    }","    node[__refsLength] = void 0;","    return node;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"14":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/unlinkForwardReference.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/unlinkForwardReference.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"unlinkForwardReference","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":56}},"5":{"start":{"line":6,"column":0},"end":{"line":18,"column":2}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":43}},"7":{"start":{"line":8,"column":4},"end":{"line":16,"column":5}},"8":{"start":{"line":9,"column":8},"end":{"line":10,"column":53}},"9":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"10":{"start":{"line":12,"column":12},"end":{"line":12,"column":66}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":38}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":76}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":21}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":17},"end":{"line":9,"column":38}},{"start":{"line":9,"column":42},"end":{"line":9,"column":43}}]},"3":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":17},"end":{"line":10,"column":42}},{"start":{"line":10,"column":46},"end":{"line":10,"column":47}}]}},"code":["var __ref = require(\"./../internal/ref\");","var __context = require(\"./../internal/context\");","var __refIndex = require(\"./../internal/ref-index\");","var __refsLength = require(\"./../internal/refs-length\");","","module.exports = function unlinkForwardReference(reference) {","    var destination = reference[__context];","    if (destination) {","        var i = (reference[__refIndex] || 0) - 1,","            n = (destination[__refsLength] || 0) - 1;","        while (++i <= n) {","            destination[__ref + i] = destination[__ref + (i + 1)];","        }","        destination[__refsLength] = n;","        reference[__refIndex] = reference[__context] = destination = void 0;","    }","    return reference;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"7":0,"8":0,"9":0,"11":0,"12":0,"14":0,"15":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/updateNodeAncestors.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/updateNodeAncestors.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"updateNodeAncestors","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":77}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":49}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":86}},"6":{"start":{"line":7,"column":0},"end":{"line":20,"column":2}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":24}},"8":{"start":{"line":9,"column":4},"end":{"line":18,"column":20}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":35}},"10":{"start":{"line":11,"column":8},"end":{"line":11,"column":61}},"11":{"start":{"line":12,"column":8},"end":{"line":16,"column":9}},"12":{"start":{"line":13,"column":12},"end":{"line":13,"column":55}},"13":{"start":{"line":14,"column":15},"end":{"line":16,"column":9}},"14":{"start":{"line":15,"column":12},"end":{"line":15,"column":56}},"15":{"start":{"line":17,"column":8},"end":{"line":17,"column":21}},"16":{"start":{"line":19,"column":4},"end":{"line":19,"column":19}}},"branchMap":{"1":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":34},"end":{"line":11,"column":45}},{"start":{"line":11,"column":49},"end":{"line":11,"column":50}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":12,"column":8}},{"start":{"line":12,"column":8},"end":{"line":12,"column":8}}]},"3":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":21}},{"start":{"line":12,"column":25},"end":{"line":12,"column":37}}]},"4":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":15},"end":{"line":14,"column":15}},{"start":{"line":14,"column":15},"end":{"line":14,"column":15}}]}},"code":["var __key = require(\"./../internal/key\");","var __version = require(\"./../internal/version\");","var __parent = require(\"./../internal/parent\");","var removeNode = require(\"./../support/removeNode\");","var updateBackReferenceVersions = require(\"./../support/updateBackReferenceVersions\");","","module.exports = function updateNodeAncestors(nodeArg, offset, lru, version) {","    var child = nodeArg;","    do {","        var node = child[__parent];","        var size = child.$size = (child.$size || 0) - offset;","        if (size <= 0 && node != null) {","            removeNode(child, node, child[__key], lru);","        } else if (child[__version] !== version) {","            updateBackReferenceVersions(child, version);","        }","        child = node;","    } while (child);","    return nodeArg;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"17":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/updateBackReferenceVersions.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/updateBackReferenceVersions.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"updateBackReferenceVersions","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":72}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":56}},"5":{"start":{"line":6,"column":0},"end":{"line":22,"column":2}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":26}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":18}},"8":{"start":{"line":9,"column":4},"end":{"line":20,"column":25}},"9":{"start":{"line":10,"column":8},"end":{"line":10,"column":34}},"10":{"start":{"line":11,"column":8},"end":{"line":19,"column":9}},"11":{"start":{"line":12,"column":12},"end":{"line":12,"column":38}},"12":{"start":{"line":13,"column":12},"end":{"line":13,"column":44}},"13":{"start":{"line":14,"column":12},"end":{"line":14,"column":23}},"14":{"start":{"line":15,"column":12},"end":{"line":15,"column":44}},"15":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"16":{"start":{"line":17,"column":16},"end":{"line":17,"column":49}},"17":{"start":{"line":21,"column":4},"end":{"line":21,"column":19}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":16}},{"start":{"line":11,"column":20},"end":{"line":11,"column":47}}]},"3":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":20},"end":{"line":15,"column":38}},{"start":{"line":15,"column":42},"end":{"line":15,"column":43}}]}},"code":["var __ref = require(\"./../internal/ref\");","var __parent = require(\"./../internal/parent\");","var __version = require(\"./../internal/version\");","var __refsLength = require(\"./../internal/refs-length\");","","module.exports = function updateBackReferenceVersions(nodeArg, version) {","    var stack = [nodeArg];","    var count = 0;","    do {","        var node = stack[count--];","        if (node && node[__version] !== version) {","            node[__version] = version;","            stack[count++] = node[__parent];","            var i = -1;","            var n = node[__refsLength] || 0;","            while (++i < n) {","                stack[count++] = node[__ref + i];","            }","        }","    } while (count > -1);","    return nodeArg;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/reconstructPath.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/reconstructPath.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"reconstructPath","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":60}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":20,"column":2}},"2":{"start":{"line":16,"column":4},"end":{"line":16,"column":55}},"3":{"start":{"line":17,"column":4},"end":{"line":17,"column":28}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":16}}},"branchMap":{},"code":["/**"," * Reconstructs the path for the current key, from currentPath (requestedPath)"," * state maintained during set/merge walk operations."," *"," * During the walk, since the requestedPath array is updated after we attempt to"," * merge/insert nodes during a walk (it reflects the inserted node's parent branch)"," * we need to reconstitute a path from it."," *"," * @param  {Array} currentPath The current requestedPath state, during the walk"," * @param  {String} key        The current key value, during the walk"," * @return {Array} A new array, with the path which represents the node we're about"," * to insert"," */","module.exports = function reconstructPath(currentPath, key) {","","    var path = currentPath.slice(0, currentPath.depth);","    path[path.length] = key;","","    return path;","};",""],"l":{"14":1,"16":0,"17":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/setPathValues.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/setPathValues.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"setPathValues","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":30,"column":89}}},"2":{"name":"setPathSet","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":78,"column":54}}},"3":{"name":"setReference","line":123,"loc":{"start":{"line":123,"column":0},"end":{"line":125,"column":54}}},"4":{"name":"setNode","line":184,"loc":{"start":{"line":184,"column":0},"end":{"line":187,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":49}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":54}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":42}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":50}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":52}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":54}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":52}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":63}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":64}},"17":{"start":{"line":20,"column":0},"end":{"line":20,"column":80}},"18":{"start":{"line":30,"column":0},"end":{"line":72,"column":2}},"19":{"start":{"line":32,"column":4},"end":{"line":32,"column":32}},"20":{"start":{"line":33,"column":4},"end":{"line":33,"column":24}},"21":{"start":{"line":34,"column":4},"end":{"line":34,"column":36}},"22":{"start":{"line":35,"column":4},"end":{"line":35,"column":37}},"23":{"start":{"line":36,"column":4},"end":{"line":36,"column":28}},"24":{"start":{"line":37,"column":4},"end":{"line":37,"column":32}},"25":{"start":{"line":38,"column":4},"end":{"line":38,"column":72}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":41}},"27":{"start":{"line":40,"column":4},"end":{"line":40,"column":42}},"28":{"start":{"line":42,"column":4},"end":{"line":42,"column":27}},"29":{"start":{"line":43,"column":4},"end":{"line":43,"column":28}},"30":{"start":{"line":44,"column":4},"end":{"line":44,"column":28}},"31":{"start":{"line":45,"column":4},"end":{"line":45,"column":38}},"32":{"start":{"line":46,"column":4},"end":{"line":46,"column":28}},"33":{"start":{"line":47,"column":4},"end":{"line":47,"column":43}},"34":{"start":{"line":49,"column":4},"end":{"line":62,"column":5}},"35":{"start":{"line":51,"column":8},"end":{"line":51,"column":51}},"36":{"start":{"line":52,"column":8},"end":{"line":52,"column":34}},"37":{"start":{"line":53,"column":8},"end":{"line":53,"column":36}},"38":{"start":{"line":54,"column":8},"end":{"line":54,"column":43}},"39":{"start":{"line":55,"column":8},"end":{"line":55,"column":45}},"40":{"start":{"line":57,"column":8},"end":{"line":61,"column":10}},"41":{"start":{"line":64,"column":4},"end":{"line":64,"column":38}},"42":{"start":{"line":65,"column":4},"end":{"line":65,"column":47}},"43":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"44":{"start":{"line":68,"column":8},"end":{"line":68,"column":28}},"45":{"start":{"line":71,"column":4},"end":{"line":71,"column":44}},"46":{"start":{"line":75,"column":0},"end":{"line":120,"column":1}},"47":{"start":{"line":80,"column":4},"end":{"line":80,"column":18}},"48":{"start":{"line":81,"column":4},"end":{"line":81,"column":41}},"49":{"start":{"line":82,"column":4},"end":{"line":82,"column":29}},"50":{"start":{"line":83,"column":4},"end":{"line":83,"column":42}},"51":{"start":{"line":84,"column":4},"end":{"line":84,"column":45}},"52":{"start":{"line":86,"column":4},"end":{"line":119,"column":19}},"53":{"start":{"line":88,"column":8},"end":{"line":88,"column":36}},"54":{"start":{"line":90,"column":8},"end":{"line":94,"column":10}},"55":{"start":{"line":95,"column":8},"end":{"line":95,"column":35}},"56":{"start":{"line":96,"column":8},"end":{"line":96,"column":36}},"57":{"start":{"line":97,"column":8},"end":{"line":97,"column":51}},"58":{"start":{"line":98,"column":8},"end":{"line":98,"column":34}},"59":{"start":{"line":99,"column":8},"end":{"line":99,"column":36}},"60":{"start":{"line":100,"column":8},"end":{"line":113,"column":9}},"61":{"start":{"line":101,"column":12},"end":{"line":112,"column":13}},"62":{"start":{"line":102,"column":16},"end":{"line":107,"column":18}},"63":{"start":{"line":109,"column":16},"end":{"line":109,"column":39}},"64":{"start":{"line":110,"column":16},"end":{"line":110,"column":85}},"65":{"start":{"line":111,"column":16},"end":{"line":111,"column":81}},"66":{"start":{"line":114,"column":8},"end":{"line":114,"column":42}},"67":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"68":{"start":{"line":116,"column":12},"end":{"line":116,"column":18}},"69":{"start":{"line":118,"column":8},"end":{"line":118,"column":45}},"70":{"start":{"line":123,"column":0},"end":{"line":182,"column":1}},"71":{"start":{"line":127,"column":4},"end":{"line":127,"column":31}},"72":{"start":{"line":128,"column":4},"end":{"line":128,"column":50}},"73":{"start":{"line":129,"column":4},"end":{"line":129,"column":55}},"74":{"start":{"line":131,"column":4},"end":{"line":135,"column":5}},"75":{"start":{"line":132,"column":8},"end":{"line":132,"column":47}},"76":{"start":{"line":133,"column":8},"end":{"line":133,"column":39}},"77":{"start":{"line":134,"column":8},"end":{"line":134,"column":33}},"78":{"start":{"line":137,"column":4},"end":{"line":137,"column":23}},"79":{"start":{"line":139,"column":4},"end":{"line":139,"column":25}},"80":{"start":{"line":140,"column":4},"end":{"line":140,"column":22}},"81":{"start":{"line":142,"column":4},"end":{"line":142,"column":27}},"82":{"start":{"line":144,"column":4},"end":{"line":179,"column":5}},"83":{"start":{"line":145,"column":8},"end":{"line":145,"column":40}},"84":{"start":{"line":146,"column":8},"end":{"line":146,"column":47}},"85":{"start":{"line":149,"column":8},"end":{"line":149,"column":22}},"86":{"start":{"line":150,"column":8},"end":{"line":150,"column":41}},"87":{"start":{"line":152,"column":8},"end":{"line":152,"column":29}},"88":{"start":{"line":154,"column":8},"end":{"line":168,"column":34}},"89":{"start":{"line":155,"column":12},"end":{"line":155,"column":39}},"90":{"start":{"line":156,"column":12},"end":{"line":156,"column":39}},"91":{"start":{"line":157,"column":12},"end":{"line":161,"column":14}},"92":{"start":{"line":162,"column":12},"end":{"line":162,"column":30}},"93":{"start":{"line":163,"column":12},"end":{"line":166,"column":13}},"94":{"start":{"line":164,"column":16},"end":{"line":164,"column":44}},"95":{"start":{"line":165,"column":16},"end":{"line":165,"column":31}},"96":{"start":{"line":167,"column":12},"end":{"line":167,"column":32}},"97":{"start":{"line":170,"column":8},"end":{"line":170,"column":36}},"98":{"start":{"line":172,"column":8},"end":{"line":178,"column":9}},"99":{"start":{"line":173,"column":12},"end":{"line":173,"column":51}},"100":{"start":{"line":174,"column":12},"end":{"line":174,"column":46}},"101":{"start":{"line":175,"column":12},"end":{"line":175,"column":47}},"102":{"start":{"line":176,"column":12},"end":{"line":176,"column":40}},"103":{"start":{"line":177,"column":12},"end":{"line":177,"column":45}},"104":{"start":{"line":181,"column":4},"end":{"line":181,"column":26}},"105":{"start":{"line":184,"column":0},"end":{"line":230,"column":1}},"106":{"start":{"line":189,"column":4},"end":{"line":189,"column":26}},"107":{"start":{"line":191,"column":4},"end":{"line":206,"column":5}},"108":{"start":{"line":193,"column":8},"end":{"line":196,"column":10}},"109":{"start":{"line":198,"column":8},"end":{"line":198,"column":26}},"110":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"111":{"start":{"line":201,"column":12},"end":{"line":201,"column":27}},"112":{"start":{"line":204,"column":8},"end":{"line":204,"column":28}},"113":{"start":{"line":205,"column":8},"end":{"line":205,"column":26}},"114":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"115":{"start":{"line":209,"column":8},"end":{"line":209,"column":30}},"116":{"start":{"line":212,"column":4},"end":{"line":221,"column":5}},"117":{"start":{"line":213,"column":8},"end":{"line":217,"column":9}},"118":{"start":{"line":214,"column":12},"end":{"line":214,"column":78}},"119":{"start":{"line":215,"column":15},"end":{"line":217,"column":9}},"120":{"start":{"line":216,"column":12},"end":{"line":216,"column":30}},"121":{"start":{"line":219,"column":8},"end":{"line":219,"column":22}},"122":{"start":{"line":220,"column":8},"end":{"line":220,"column":27}},"123":{"start":{"line":223,"column":4},"end":{"line":227,"column":6}},"124":{"start":{"line":229,"column":4},"end":{"line":229,"column":26}}},"branchMap":{"1":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":30},"end":{"line":38,"column":63}},{"start":{"line":38,"column":66},"end":{"line":38,"column":71}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":17},"end":{"line":39,"column":31}},{"start":{"line":39,"column":35},"end":{"line":39,"column":40}}]},"3":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"4":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":37}},{"start":{"line":67,"column":41},"end":{"line":67,"column":70}}]},"5":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":8}},{"start":{"line":100,"column":8},"end":{"line":100,"column":8}}]},"6":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":12}},{"start":{"line":101,"column":12},"end":{"line":101,"column":12}}]},"7":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":8}},{"start":{"line":115,"column":8},"end":{"line":115,"column":8}}]},"8":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"9":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"10":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":17},"end":{"line":145,"column":31}},{"start":{"line":145,"column":35},"end":{"line":145,"column":39}}]},"11":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":12},"end":{"line":163,"column":12}},{"start":{"line":163,"column":12},"end":{"line":163,"column":12}}]},"12":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":172,"column":8}},{"start":{"line":172,"column":8},"end":{"line":172,"column":8}}]},"13":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":27},"end":{"line":173,"column":45}},{"start":{"line":173,"column":49},"end":{"line":173,"column":50}}]},"14":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":8}},{"start":{"line":200,"column":8},"end":{"line":200,"column":8}}]},"15":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"16":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"17":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":8}},{"start":{"line":213,"column":8},"end":{"line":213,"column":8}}]},"18":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":15},"end":{"line":215,"column":15}},{"start":{"line":215,"column":15},"end":{"line":215,"column":15}}]}},"code":["var __key = require(\"./../internal/key\");","var __ref = require(\"./../internal/ref\");","var __parent = require(\"./../internal/parent\");","var __context = require(\"./../internal/context\");","var __version = require(\"./../internal/version\");","var __refIndex = require(\"./../internal/ref-index\");","var __refsLength = require(\"./../internal/refs-length\");","","var $ref = require(\"./../types/ref\");","","var getBoundValue = require(\"./../get/getBoundValue\");","","var promote = require(\"./../lru/promote\");","var isExpired = require(\"./../support/isExpired\");","var isFunction = require(\"./../support/isFunction\");","var isPrimitive = require(\"./../support/isPrimitive\");","var expireNode = require(\"./../support/expireNode\");","var iterateKeySet = require(\"falcor-path-utils\").iterateKeySet;","var incrementVersion = require(\"./../support/incrementVersion\");","var mergeValueOrInsertBranch = require(\"./../support/mergeValueOrInsertBranch\");","","/**"," * Sets a list of PathValues into a JSON Graph."," * @function"," * @param {Object} model - the Model for which to insert the PathValues."," * @param {Array.<PathValue>} pathValues - the PathValues to set."," * @return {Array.<Path>} - a list of optimized paths for the successfully set values."," */","","module.exports = function setPathValues(model, pathValues, x, errorSelector, comparator) {","","    var modelRoot = model._root;","    var lru = modelRoot;","    var expired = modelRoot.expired;","    var version = incrementVersion();","    var bound = model._path;","    var cache = modelRoot.cache;","    var node = bound.length ? getBoundValue(model, bound).value : cache;","    var parent = node[__parent] || cache;","    var initialVersion = cache[__version];","","    var requestedPath = [];","    var requestedPaths = [];","    var optimizedPaths = [];","    var optimizedIndex = bound.length;","    var pathValueIndex = -1;","    var pathValueCount = pathValues.length;","","    while (++pathValueIndex < pathValueCount) {","","        var pathValue = pathValues[pathValueIndex];","        var path = pathValue.path;","        var value = pathValue.value;","        var optimizedPath = bound.slice(0);","        optimizedPath.index = optimizedIndex;","","        setPathSet(","            value, path, 0, cache, parent, node,","            requestedPaths, optimizedPaths, requestedPath, optimizedPath,","            version, expired, lru, comparator, errorSelector","        );","    }","","    var newVersion = cache[__version];","    var rootChangeHandler = modelRoot.onChange;","","    if (isFunction(rootChangeHandler) && initialVersion !== newVersion) {","        rootChangeHandler();","    }","","    return [requestedPaths, optimizedPaths];","};","","/* eslint-disable no-constant-condition */","function setPathSet(","    value, path, depth, root, parent, node,","    requestedPaths, optimizedPaths, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var note = {};","    var branch = depth < path.length - 1;","    var keySet = path[depth];","    var key = iterateKeySet(keySet, note);","    var optimizedIndex = optimizedPath.index;","","    do {","","        requestedPath.depth = depth;","","        var results = setNode(","            root, parent, node, key, value,","            branch, false, requestedPath, optimizedPath,","            version, expired, lru, comparator, errorSelector","        );","        requestedPath[depth] = key;","        requestedPath.index = depth;","        optimizedPath[optimizedPath.index++] = key;","        var nextNode = results[0];","        var nextParent = results[1];","        if (nextNode) {","            if (branch) {","                setPathSet(","                    value, path, depth + 1,","                    root, nextParent, nextNode,","                    requestedPaths, optimizedPaths, requestedPath, optimizedPath,","                    version, expired, lru, comparator, errorSelector","                );","            } else {","                promote(lru, nextNode);","                requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));","                optimizedPaths.push(optimizedPath.slice(0, optimizedPath.index));","            }","        }","        key = iterateKeySet(keySet, note);","        if (note.done) {","            break;","        }","        optimizedPath.index = optimizedIndex;","    } while (true);","}","/* eslint-enable */","","function setReference(","    value, root, node, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var reference = node.value;","    optimizedPath.splice(0, optimizedPath.length);","    optimizedPath.push.apply(optimizedPath, reference);","","    if (isExpired(node)) {","        optimizedPath.index = reference.length;","        expireNode(node, expired, lru);","        return [undefined, root];","    }","","    promote(lru, node);","","    var container = node;","    var parent = root;","","    node = node[__context];","","    if (node != null) {","        parent = node[__parent] || root;","        optimizedPath.index = reference.length;","    } else {","","        var index = 0;","        var count = reference.length - 1;","","        parent = node = root;","","        do {","            var key = reference[index];","            var branch = index < count;","            var results = setNode(","                root, parent, node, key, value,","                branch, true, requestedPath, optimizedPath,","                version, expired, lru, comparator, errorSelector","            );","            node = results[0];","            if (isPrimitive(node)) {","                optimizedPath.index = index;","                return results;","            }","            parent = results[1];","        } while (index++ < count);","","        optimizedPath.index = index;","","        if (container[__context] !== node) {","            var backRefs = node[__refsLength] || 0;","            node[__refsLength] = backRefs + 1;","            node[__ref + backRefs] = container;","            container[__context] = node;","            container[__refIndex] = backRefs;","        }","    }","","    return [node, parent];","}","","function setNode(","    root, parent, node, key, value,","    branch, reference, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var type = node.$type;","","    while (type === $ref) {","","        var results = setReference(","            value, root, node, requestedPath, optimizedPath,","            version, expired, lru, comparator, errorSelector","        );","","        node = results[0];","","        if (isPrimitive(node)) {","            return results;","        }","","        parent = results[1];","        type = node.$type;","    }","","    if (type !== void 0) {","        return [node, parent];","    }","","    if (key == null) {","        if (branch) {","            throw new Error(\"`null` is not allowed in branch key positions.\");","        } else if (node) {","            key = node[__key];","        }","    } else {","        parent = node;","        node = parent[key];","    }","","    node = mergeValueOrInsertBranch(","        parent, node, key, value,","        branch, reference, requestedPath, optimizedPath,","        version, expired, lru, comparator, errorSelector","    );","","    return [node, parent];","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"11":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"30":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"51":0,"52":0,"53":0,"54":0,"55":0,"57":0,"64":0,"65":0,"67":0,"68":0,"71":0,"75":1,"80":0,"81":0,"82":0,"83":0,"84":0,"86":0,"88":0,"90":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"109":0,"110":0,"111":0,"114":0,"115":0,"116":0,"118":0,"123":1,"127":0,"128":0,"129":0,"131":0,"132":0,"133":0,"134":0,"137":0,"139":0,"140":0,"142":0,"144":0,"145":0,"146":0,"149":0,"150":0,"152":0,"154":0,"155":0,"156":0,"157":0,"162":0,"163":0,"164":0,"165":0,"167":0,"170":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"181":0,"184":1,"189":0,"191":0,"193":0,"198":0,"200":0,"201":0,"204":0,"205":0,"208":0,"209":0,"212":0,"213":0,"214":0,"215":0,"216":0,"219":0,"220":0,"223":0,"229":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getBoundValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getBoundValue.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getBoundValue","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":70}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":52}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":65}},"3":{"start":{"line":4,"column":0},"end":{"line":44,"column":2}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":23}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":28}},"6":{"start":{"line":8,"column":4},"end":{"line":9,"column":30}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":25}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":39}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":53}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":24}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":69}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":38}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":57}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":25}},"15":{"start":{"line":22,"column":4},"end":{"line":22,"column":39}},"16":{"start":{"line":23,"column":4},"end":{"line":23,"column":53}},"17":{"start":{"line":25,"column":4},"end":{"line":25,"column":31}},"18":{"start":{"line":26,"column":4},"end":{"line":26,"column":28}},"19":{"start":{"line":27,"column":4},"end":{"line":27,"column":24}},"20":{"start":{"line":28,"column":4},"end":{"line":28,"column":24}},"21":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"22":{"start":{"line":31,"column":8},"end":{"line":31,"column":19}},"23":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"24":{"start":{"line":35,"column":8},"end":{"line":35,"column":53}},"25":{"start":{"line":38,"column":4},"end":{"line":43,"column":6}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":26},"end":{"line":16,"column":52}},{"start":{"line":16,"column":56},"end":{"line":16,"column":68}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":11},"end":{"line":30,"column":22}},{"start":{"line":30,"column":26},"end":{"line":30,"column":56}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":13}},{"start":{"line":34,"column":17},"end":{"line":34,"column":24}}]}},"code":["var getValueSync = require(\"./../get/getValueSync\");","var InvalidModelError = require(\"./../errors/InvalidModelError\");","","module.exports = function getBoundValue(model, pathArg, materialized) {","","    var path = pathArg;","    var boundPath = pathArg;","    var boxed, treatErrorsAsValues,","        value, shorted, found;","","    boxed = model._boxed;","    materialized = model._materialized;","    treatErrorsAsValues = model._treatErrorsAsValues;","","    model._boxed = true;","    model._materialized = materialized === undefined || materialized;","    model._treatErrorsAsValues = true;","","    value = getValueSync(model, path.concat(null), true);","","    model._boxed = boxed;","    model._materialized = materialized;","    model._treatErrorsAsValues = treatErrorsAsValues;","","    path = value.optimizedPath;","    shorted = value.shorted;","    found = value.found;","    value = value.value;","","    while (path.length && path[path.length - 1] === null) {","        path.pop();","    }","","    if (found && shorted) {","        throw new InvalidModelError(boundPath, path);","    }","","    return {","        path: path,","        value: value,","        shorted: shorted,","        found: found","    };","};",""],"l":{"1":1,"2":1,"4":1,"6":0,"7":0,"8":0,"11":0,"12":0,"13":0,"15":0,"16":0,"17":0,"19":0,"21":0,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"34":0,"35":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getValueSync.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getValueSync.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getValueSync","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":67}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":58}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":51}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"8":{"start":{"line":9,"column":0},"end":{"line":137,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":32}},"11":{"start":{"line":12,"column":4},"end":{"line":12,"column":27}},"12":{"start":{"line":13,"column":4},"end":{"line":13,"column":45}},"13":{"start":{"line":14,"column":4},"end":{"line":14,"column":18}},"14":{"start":{"line":15,"column":4},"end":{"line":15,"column":73}},"15":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"16":{"start":{"line":17,"column":4},"end":{"line":17,"column":24}},"17":{"start":{"line":19,"column":4},"end":{"line":83,"column":5}},"18":{"start":{"line":20,"column":8},"end":{"line":20,"column":34}},"19":{"start":{"line":21,"column":8},"end":{"line":24,"column":9}},"20":{"start":{"line":22,"column":12},"end":{"line":22,"column":29}},"21":{"start":{"line":23,"column":12},"end":{"line":23,"column":54}},"22":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"23":{"start":{"line":27,"column":12},"end":{"line":27,"column":28}},"24":{"start":{"line":28,"column":12},"end":{"line":28,"column":27}},"25":{"start":{"line":29,"column":12},"end":{"line":29,"column":26}},"26":{"start":{"line":30,"column":12},"end":{"line":30,"column":18}},"27":{"start":{"line":33,"column":8},"end":{"line":33,"column":26}},"28":{"start":{"line":36,"column":8},"end":{"line":41,"column":9}},"29":{"start":{"line":37,"column":12},"end":{"line":37,"column":28}},"30":{"start":{"line":38,"column":12},"end":{"line":38,"column":26}},"31":{"start":{"line":39,"column":12},"end":{"line":39,"column":34}},"32":{"start":{"line":40,"column":12},"end":{"line":40,"column":18}},"33":{"start":{"line":45,"column":8},"end":{"line":81,"column":9}},"34":{"start":{"line":46,"column":12},"end":{"line":72,"column":13}},"35":{"start":{"line":50,"column":16},"end":{"line":55,"column":17}},"36":{"start":{"line":51,"column":20},"end":{"line":51,"column":35}},"37":{"start":{"line":52,"column":20},"end":{"line":52,"column":36}},"38":{"start":{"line":53,"column":20},"end":{"line":53,"column":34}},"39":{"start":{"line":54,"column":20},"end":{"line":54,"column":26}},"40":{"start":{"line":57,"column":16},"end":{"line":57,"column":75}},"41":{"start":{"line":58,"column":16},"end":{"line":58,"column":33}},"42":{"start":{"line":63,"column":16},"end":{"line":68,"column":17}},"43":{"start":{"line":64,"column":20},"end":{"line":64,"column":33}},"44":{"start":{"line":65,"column":20},"end":{"line":65,"column":34}},"45":{"start":{"line":66,"column":20},"end":{"line":66,"column":34}},"46":{"start":{"line":67,"column":20},"end":{"line":67,"column":26}},"47":{"start":{"line":69,"column":16},"end":{"line":69,"column":37}},"48":{"start":{"line":70,"column":16},"end":{"line":70,"column":31}},"49":{"start":{"line":71,"column":16},"end":{"line":71,"column":48}},"50":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"51":{"start":{"line":75,"column":16},"end":{"line":75,"column":22}},"52":{"start":{"line":80,"column":12},"end":{"line":80,"column":23}},"53":{"start":{"line":82,"column":8},"end":{"line":82,"column":20}},"54":{"start":{"line":85,"column":4},"end":{"line":106,"column":5}},"55":{"start":{"line":87,"column":8},"end":{"line":92,"column":9}},"56":{"start":{"line":88,"column":12},"end":{"line":91,"column":13}},"57":{"start":{"line":89,"column":16},"end":{"line":89,"column":35}},"58":{"start":{"line":90,"column":16},"end":{"line":90,"column":22}},"59":{"start":{"line":94,"column":8},"end":{"line":99,"column":9}},"60":{"start":{"line":95,"column":12},"end":{"line":95,"column":27}},"61":{"start":{"line":96,"column":12},"end":{"line":96,"column":25}},"62":{"start":{"line":98,"column":12},"end":{"line":98,"column":23}},"63":{"start":{"line":101,"column":8},"end":{"line":105,"column":9}},"64":{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},"65":{"start":{"line":103,"column":16},"end":{"line":103,"column":68}},"66":{"start":{"line":109,"column":4},"end":{"line":115,"column":5}},"67":{"start":{"line":110,"column":8},"end":{"line":114,"column":9}},"68":{"start":{"line":111,"column":12},"end":{"line":111,"column":25}},"69":{"start":{"line":113,"column":12},"end":{"line":113,"column":32}},"70":{"start":{"line":118,"column":4},"end":{"line":129,"column":5}},"71":{"start":{"line":119,"column":8},"end":{"line":122,"column":10}},"72":{"start":{"line":123,"column":11},"end":{"line":129,"column":5}},"73":{"start":{"line":124,"column":8},"end":{"line":124,"column":59}},"74":{"start":{"line":125,"column":11},"end":{"line":129,"column":5}},"75":{"start":{"line":126,"column":8},"end":{"line":126,"column":29}},"76":{"start":{"line":127,"column":11},"end":{"line":129,"column":5}},"77":{"start":{"line":128,"column":8},"end":{"line":128,"column":24}},"78":{"start":{"line":131,"column":4},"end":{"line":136,"column":6}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":11},"end":{"line":19,"column":15}},{"start":{"line":19,"column":19},"end":{"line":19,"column":30}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"5":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":26}},{"start":{"line":36,"column":30},"end":{"line":36,"column":54}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":16},"end":{"line":50,"column":16}},{"start":{"line":50,"column":16},"end":{"line":50,"column":16}}]},"9":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":16},"end":{"line":63,"column":16}},{"start":{"line":63,"column":16},"end":{"line":63,"column":16}}]},"10":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]},"11":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"12":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":19}},{"start":{"line":85,"column":23},"end":{"line":85,"column":31}}]},"13":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":12},"end":{"line":88,"column":12}},{"start":{"line":88,"column":12},"end":{"line":88,"column":12}}]},"14":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":8}},{"start":{"line":94,"column":8},"end":{"line":94,"column":8}}]},"15":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":12}},{"start":{"line":102,"column":12},"end":{"line":102,"column":12}}]},"16":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"17":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":11}},{"start":{"line":109,"column":15},"end":{"line":109,"column":19}}]},"18":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]},"19":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"20":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":11}},{"start":{"line":118,"column":15},"end":{"line":118,"column":30}},{"start":{"line":118,"column":34},"end":{"line":118,"column":61}}]},"21":{"line":120,"type":"cond-expr","locations":[{"start":{"line":120,"column":34},"end":{"line":120,"column":44}},{"start":{"line":120,"column":47},"end":{"line":120,"column":73}}]},"22":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":11},"end":{"line":123,"column":11}},{"start":{"line":123,"column":11},"end":{"line":123,"column":11}}]},"23":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":15},"end":{"line":123,"column":18}},{"start":{"line":123,"column":22},"end":{"line":123,"column":34}}]},"24":{"line":124,"type":"cond-expr","locations":[{"start":{"line":124,"column":42},"end":{"line":124,"column":52}},{"start":{"line":124,"column":55},"end":{"line":124,"column":58}}]},"25":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":14},"end":{"line":124,"column":27}},{"start":{"line":124,"column":31},"end":{"line":124,"column":39}}]},"26":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":11},"end":{"line":125,"column":11}},{"start":{"line":125,"column":11},"end":{"line":125,"column":11}}]},"27":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":15},"end":{"line":125,"column":19}},{"start":{"line":125,"column":23},"end":{"line":125,"column":42}}]},"28":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":11},"end":{"line":127,"column":11}},{"start":{"line":127,"column":11},"end":{"line":127,"column":11}}]}},"code":["var followReference = require(\"./../get/followReference\");","var clone = require(\"./../get/util/clone\");","var isExpired = require(\"./../get/util/isExpired\");","var promote = require(\"./../get/util/lru\").promote;","var $ref = require(\"./../types/ref\");","var $atom = require(\"./../types/atom\");","var $error = require(\"./../types/error\");","","module.exports = function getValueSync(model, simplePath, noClone) {","    var root = model._root.cache;","    var len = simplePath.length;","    var optimizedPath = [];","    var shorted = false, shouldShort = false;","    var depth = 0;","    var key, i, next = root, curr = root, out = root, type, ref, refNode;","    var found = true;","    var expired = false;","","    while (next && depth < len) {","        key = simplePath[depth++];","        if (key !== null) {","            next = curr[key];","            optimizedPath[optimizedPath.length] = key;","        }","","        if (!next) {","            out = undefined;","            shorted = true;","            found = false;","            break;","        }","","        type = next.$type;","","        // A materialized item.  There is nothing to deref to.","        if (type === $atom && next.value === undefined) {","            out = undefined;","            found = false;","            shorted = depth < len;","            break;","        }","","        // Up to the last key we follow references, ensure that they are not","        // expired either.","        if (depth < len) {","            if (type === $ref) {","","                // If the reference is expired then we need to set expired to","                // true.","                if (isExpired(next)) {","                    expired = true;","                    out = undefined;","                    found = false;","                    break;","                }","","                ref = followReference(model, root, root, next, next.value);","                refNode = ref[0];","","                // The next node is also set to undefined because nothing","                // could be found, this reference points to nothing, so","                // nothing must be returned.","                if (!refNode) {","                    out = void 0;","                    next = void 0;","                    found = false;","                    break;","                }","                type = refNode.$type;","                next = refNode;","                optimizedPath = ref[1].slice(0);","            }","","            if (type) {","                break;","            }","        }","        // If there is a value, then we have great success, else, report an undefined.","        else {","            out = next;","        }","        curr = next;","    }","","    if (depth < len && !expired) {","        // Unfortunately, if all that follows are nulls, then we have not shorted.","        for (i = depth; i < len; ++i) {","            if (simplePath[depth] !== null) {","                shouldShort = true;","                break;","            }","        }","        // if we should short or report value.  Values are reported on nulls.","        if (shouldShort) {","            shorted = true;","            out = void 0;","        } else {","            out = next;","        }","","        for (i = depth; i < len; ++i) {","            if (simplePath[i] !== null) {","                optimizedPath[optimizedPath.length] = simplePath[i];","            }","        }","    }","","    // promotes if not expired","    if (out && type) {","        if (isExpired(out)) {","            out = void 0;","        } else {","            promote(model, out);","        }","    }","","    // if (out && out.$type === $error && !model._treatErrorsAsValues) {","    if (out && type === $error && !model._treatErrorsAsValues) {","        throw {","            path: depth === len ? simplePath : simplePath.slice(0, depth),","            value: out.value","        };","    } else if (out && model._boxed) {","        out = Boolean(type) && !noClone ? clone(out) : out;","    } else if (!out && model._materialized) {","        out = {$type: $atom};","    } else if (out) {","        out = out.value;","    }","","    return {","        value: out,","        shorted: shorted,","        optimizedPath: optimizedPath,","        found: found","    };","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"22":0,"23":0,"26":0,"27":0,"28":0,"29":0,"30":0,"33":0,"36":0,"37":0,"38":0,"39":0,"40":0,"45":0,"46":0,"50":0,"51":0,"52":0,"53":0,"54":0,"57":0,"58":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":0,"70":0,"71":0,"74":0,"75":0,"80":0,"82":0,"85":0,"87":0,"88":0,"89":0,"90":0,"94":0,"95":0,"96":0,"98":0,"101":0,"102":0,"103":0,"109":0,"110":0,"111":0,"113":0,"118":0,"119":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"131":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/followReference.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/followReference.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"followReference","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":11,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":51}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":51}},"8":{"start":{"line":10,"column":0},"end":{"line":88,"column":1}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":23}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":33}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":51}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":18}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":16}},"14":{"start":{"line":19,"column":4},"end":{"line":76,"column":5}},"15":{"start":{"line":20,"column":8},"end":{"line":26,"column":9}},"16":{"start":{"line":21,"column":12},"end":{"line":21,"column":37}},"17":{"start":{"line":22,"column":12},"end":{"line":22,"column":49}},"18":{"start":{"line":24,"column":12},"end":{"line":24,"column":35}},"19":{"start":{"line":25,"column":12},"end":{"line":25,"column":27}},"20":{"start":{"line":27,"column":8},"end":{"line":74,"column":9}},"21":{"start":{"line":28,"column":12},"end":{"line":28,"column":34}},"22":{"start":{"line":29,"column":12},"end":{"line":29,"column":51}},"23":{"start":{"line":31,"column":12},"end":{"line":71,"column":13}},"24":{"start":{"line":32,"column":16},"end":{"line":35,"column":17}},"25":{"start":{"line":33,"column":20},"end":{"line":33,"column":32}},"26":{"start":{"line":34,"column":20},"end":{"line":34,"column":26}},"27":{"start":{"line":37,"column":16},"end":{"line":37,"column":28}},"28":{"start":{"line":38,"column":16},"end":{"line":38,"column":25}},"29":{"start":{"line":44,"column":16},"end":{"line":44,"column":28}},"30":{"start":{"line":46,"column":16},"end":{"line":48,"column":17}},"31":{"start":{"line":47,"column":20},"end":{"line":47,"column":26}},"32":{"start":{"line":50,"column":16},"end":{"line":52,"column":17}},"33":{"start":{"line":51,"column":20},"end":{"line":51,"column":61}},"34":{"start":{"line":55,"column":16},"end":{"line":68,"column":17}},"35":{"start":{"line":56,"column":20},"end":{"line":61,"column":21}},"36":{"start":{"line":57,"column":24},"end":{"line":58,"column":70}},"37":{"start":{"line":60,"column":24},"end":{"line":60,"column":45}},"38":{"start":{"line":63,"column":20},"end":{"line":63,"column":30}},"39":{"start":{"line":64,"column":20},"end":{"line":64,"column":38}},"40":{"start":{"line":65,"column":20},"end":{"line":65,"column":46}},"41":{"start":{"line":66,"column":20},"end":{"line":66,"column":32}},"42":{"start":{"line":67,"column":20},"end":{"line":67,"column":29}},"43":{"start":{"line":70,"column":16},"end":{"line":70,"column":22}},"44":{"start":{"line":73,"column":12},"end":{"line":73,"column":26}},"45":{"start":{"line":75,"column":8},"end":{"line":75,"column":14}},"46":{"start":{"line":79,"column":4},"end":{"line":85,"column":5}},"47":{"start":{"line":80,"column":8},"end":{"line":80,"column":21}},"48":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"49":{"start":{"line":82,"column":12},"end":{"line":82,"column":34}},"50":{"start":{"line":84,"column":8},"end":{"line":84,"column":24}},"51":{"start":{"line":87,"column":4},"end":{"line":87,"column":29}},"52":{"start":{"line":91,"column":0},"end":{"line":91,"column":33}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":23}},{"start":{"line":20,"column":27},"end":{"line":20,"column":56}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"4":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":24},"end":{"line":29,"column":28}},{"start":{"line":29,"column":32},"end":{"line":29,"column":42}},{"start":{"line":29,"column":46},"end":{"line":29,"column":50}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":31,"column":12}},{"start":{"line":31,"column":12},"end":{"line":31,"column":12}}]},"6":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":16}},{"start":{"line":32,"column":16},"end":{"line":32,"column":16}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":16},"end":{"line":46,"column":16}},{"start":{"line":46,"column":16},"end":{"line":46,"column":16}}]},"8":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":20},"end":{"line":46,"column":24}},{"start":{"line":46,"column":28},"end":{"line":46,"column":43}}]},"9":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":16},"end":{"line":50,"column":16}},{"start":{"line":50,"column":16},"end":{"line":50,"column":16}}]},"10":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":16}},{"start":{"line":55,"column":16},"end":{"line":55,"column":16}}]},"11":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":20},"end":{"line":56,"column":20}},{"start":{"line":56,"column":20},"end":{"line":56,"column":20}}]},"12":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"13":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":32}},{"start":{"line":79,"column":36},"end":{"line":79,"column":51}}]}},"code":["var hardLink = require(\"./../get/util/hardlink\");","var createHardlink = hardLink.create;","var onValue = require(\"./../get/onValue\");","var isExpired = require(\"./../get/util/isExpired\");","var $ref = require(\"./../types/ref\");","var __context = require(\"./../internal/context\");","var promote = require(\"./../get/util/lru\").promote;","","/* eslint-disable no-constant-condition */","function followReference(model, root, nodeArg, referenceContainerArg,","                         referenceArg, seed, isJSONG) {","","    var node = nodeArg;","    var reference = referenceArg;","    var referenceContainer = referenceContainerArg;","    var depth = 0;","    var k, next;","","    while (true) {","        if (depth === 0 && referenceContainer[__context]) {","            depth = reference.length;","            next = referenceContainer[__context];","        } else {","            k = reference[depth++];","            next = node[k];","        }","        if (next) {","            var type = next.$type;","            var value = type && next.value || next;","","            if (depth < reference.length) {","                if (type) {","                    node = next;","                    break;","                }","","                node = next;","                continue;","            }","","            // We need to report a value or follow another reference.","            else {","","                node = next;","","                if (type && isExpired(next)) {","                    break;","                }","","                if (!referenceContainer[__context]) {","                    createHardlink(referenceContainer, next);","                }","","                // Restart the reference follower.","                if (type === $ref) {","                    if (isJSONG) {","                        onValue(model, next, seed, null, null, null,","                                reference, reference.length, isJSONG);","                    } else {","                        promote(model, next);","                    }","","                    depth = 0;","                    reference = value;","                    referenceContainer = next;","                    node = root;","                    continue;","                }","","                break;","            }","        } else {","            node = void 0;","        }","        break;","    }","","","    if (depth < reference.length && node !== void 0) {","        var ref = [];","        for (var i = 0; i < depth; i++) {","            ref[i] = reference[i];","        }","        reference = ref;","    }","","    return [node, reference];","}","/* eslint-enable */","","module.exports = followReference;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"10":1,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"37":0,"38":0,"44":0,"46":0,"47":0,"50":0,"51":0,"55":0,"56":0,"57":0,"60":0,"63":0,"64":0,"65":0,"66":0,"67":0,"70":0,"73":0,"75":0,"79":0,"80":0,"81":0,"82":0,"84":0,"87":0,"91":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/hardlink.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/hardlink.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"createHardlink","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}}},"2":{"name":"removeHardlink","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":52}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"5":{"start":{"line":6,"column":0},"end":{"line":16,"column":1}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":32}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":36}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":32}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"11":{"start":{"line":18,"column":0},"end":{"line":33,"column":1}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":41}},"13":{"start":{"line":20,"column":4},"end":{"line":32,"column":5}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":42}},"15":{"start":{"line":22,"column":8},"end":{"line":22,"column":40}},"16":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"17":{"start":{"line":25,"column":12},"end":{"line":25,"column":60}},"18":{"start":{"line":26,"column":12},"end":{"line":26,"column":18}},"19":{"start":{"line":29,"column":8},"end":{"line":29,"column":40}},"20":{"start":{"line":30,"column":8},"end":{"line":30,"column":40}},"21":{"start":{"line":31,"column":8},"end":{"line":31,"column":41}},"22":{"start":{"line":35,"column":0},"end":{"line":38,"column":2}}},"branchMap":{"1":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":19},"end":{"line":9,"column":35}},{"start":{"line":9,"column":39},"end":{"line":9,"column":40}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]}},"code":["var __ref = require(\"./../../internal/ref\");","var __context = require(\"./../../internal/context\");","var __refIndex = require(\"./../../internal/ref-index\");","var __refsLength = require(\"./../../internal/refs-length\");","","function createHardlink(from, to) {","","    // create a back reference","    var backRefs = to[__refsLength] || 0;","    to[__ref + backRefs] = from;","    to[__refsLength] = backRefs + 1;","","    // create a hard reference","    from[__refIndex] = backRefs;","    from[__context] = to;","}","","function removeHardlink(cacheObject) {","    var context = cacheObject[__context];","    if (context) {","        var idx = cacheObject[__refIndex];","        var len = context[__refsLength];","","        while (idx < len) {","            context[__ref + idx] = context[__ref + idx + 1];","            ++idx;","        }","","        context[__refsLength] = len - 1;","        cacheObject[__context] = void 0;","        cacheObject[__refIndex] = void 0;","    }","}","","module.exports = {","    create: createHardlink,","    remove: removeHardlink","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"9":0,"10":0,"11":0,"14":0,"15":0,"18":1,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"29":0,"30":0,"31":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/onValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/onValue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"onValue","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":11,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":32}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":59}},"8":{"start":{"line":9,"column":0},"end":{"line":119,"column":2}},"9":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":15}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":42}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":40}},"13":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":29}},"15":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"16":{"start":{"line":25,"column":8},"end":{"line":25,"column":43}},"17":{"start":{"line":29,"column":4},"end":{"line":59,"column":5}},"18":{"start":{"line":30,"column":8},"end":{"line":30,"column":35}},"19":{"start":{"line":34,"column":9},"end":{"line":59,"column":5}},"20":{"start":{"line":35,"column":8},"end":{"line":35,"column":32}},"21":{"start":{"line":39,"column":9},"end":{"line":59,"column":5}},"22":{"start":{"line":40,"column":8},"end":{"line":44,"column":9}},"23":{"start":{"line":41,"column":12},"end":{"line":41,"column":36}},"24":{"start":{"line":43,"column":12},"end":{"line":43,"column":35}},"25":{"start":{"line":47,"column":9},"end":{"line":59,"column":5}},"26":{"start":{"line":48,"column":8},"end":{"line":48,"column":68}},"27":{"start":{"line":49,"column":8},"end":{"line":49,"column":53}},"28":{"start":{"line":50,"column":8},"end":{"line":54,"column":9}},"29":{"start":{"line":51,"column":12},"end":{"line":51,"column":36}},"30":{"start":{"line":53,"column":12},"end":{"line":53,"column":35}},"31":{"start":{"line":58,"column":8},"end":{"line":58,"column":31}},"32":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"33":{"start":{"line":62,"column":8},"end":{"line":62,"column":37}},"34":{"start":{"line":65,"column":4},"end":{"line":118,"column":5}},"35":{"start":{"line":66,"column":8},"end":{"line":66,"column":30}},"36":{"start":{"line":67,"column":8},"end":{"line":70,"column":9}},"37":{"start":{"line":68,"column":12},"end":{"line":68,"column":39}},"38":{"start":{"line":69,"column":12},"end":{"line":69,"column":28}},"39":{"start":{"line":71,"column":8},"end":{"line":78,"column":9}},"40":{"start":{"line":72,"column":12},"end":{"line":72,"column":35}},"41":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"42":{"start":{"line":75,"column":16},"end":{"line":75,"column":31}},"43":{"start":{"line":77,"column":12},"end":{"line":77,"column":29}},"44":{"start":{"line":81,"column":8},"end":{"line":81,"column":31}},"45":{"start":{"line":84,"column":8},"end":{"line":84,"column":62}},"46":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"47":{"start":{"line":86,"column":12},"end":{"line":86,"column":59}},"48":{"start":{"line":92,"column":9},"end":{"line":118,"column":5}},"49":{"start":{"line":93,"column":8},"end":{"line":93,"column":30}},"50":{"start":{"line":99,"column":8},"end":{"line":99,"column":25}},"51":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"52":{"start":{"line":101,"column":12},"end":{"line":101,"column":34}},"53":{"start":{"line":103,"column":8},"end":{"line":111,"column":9}},"54":{"start":{"line":104,"column":12},"end":{"line":104,"column":33}},"55":{"start":{"line":105,"column":12},"end":{"line":107,"column":13}},"56":{"start":{"line":106,"column":16},"end":{"line":106,"column":29}},"57":{"start":{"line":108,"column":12},"end":{"line":108,"column":24}},"58":{"start":{"line":109,"column":12},"end":{"line":109,"column":22}},"59":{"start":{"line":110,"column":12},"end":{"line":110,"column":27}},"60":{"start":{"line":112,"column":8},"end":{"line":112,"column":29}},"61":{"start":{"line":113,"column":8},"end":{"line":117,"column":9}},"62":{"start":{"line":114,"column":12},"end":{"line":114,"column":32}},"63":{"start":{"line":116,"column":12},"end":{"line":116,"column":36}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":13}},{"start":{"line":24,"column":17},"end":{"line":24,"column":41}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":9},"end":{"line":34,"column":9}},{"start":{"line":34,"column":9},"end":{"line":34,"column":9}}]},"7":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":9}},{"start":{"line":39,"column":9},"end":{"line":39,"column":9}}]},"8":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":13},"end":{"line":39,"column":32}},{"start":{"line":39,"column":36},"end":{"line":39,"column":57}}]},"9":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"10":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":9},"end":{"line":47,"column":9}},{"start":{"line":47,"column":9},"end":{"line":47,"column":9}}]},"11":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":23},"end":{"line":48,"column":33}},{"start":{"line":48,"column":37},"end":{"line":48,"column":67}}]},"12":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"13":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":20}},{"start":{"line":50,"column":24},"end":{"line":50,"column":41}}]},"14":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"15":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"16":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":8}},{"start":{"line":67,"column":8},"end":{"line":67,"column":8}}]},"17":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]},"18":{"line":84,"type":"cond-expr","locations":[{"start":{"line":84,"column":35},"end":{"line":84,"column":49}},{"start":{"line":84,"column":52},"end":{"line":84,"column":61}}]},"19":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"20":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":9},"end":{"line":92,"column":9}},{"start":{"line":92,"column":9},"end":{"line":92,"column":9}}]},"21":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":8}},{"start":{"line":100,"column":8},"end":{"line":100,"column":8}}]},"22":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"23":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":8}},{"start":{"line":113,"column":8},"end":{"line":113,"column":8}}]}},"code":["var lru = require(\"./util/lru\");","var clone = require(\"./util/clone\");","var promote = lru.promote;","var $ref = require(\"./../types/ref\");","var $atom = require(\"./../types/atom\");","var $error = require(\"./../types/error\");","var $modelCreated = require(\"./../internal/model-created\");","","module.exports = function onValue(model, node, seed, depth, outerResults,","                                  requestedPath, optimizedPath, optimizedLength,","                                  isJSONG, fromReference) {","    // Preload","    if (!seed) {","        return;","    }","","    var i, len, k, key, curr, prev, prevK;","    var materialized = false, valueNode;","","    if (node) {","        promote(model, node);","    }","","    if (!node || node.value === undefined) {","        materialized = model._materialized;","    }","","    // materialized","    if (materialized) {","        valueNode = {$type: $atom};","    }","","    // Boxed Mode will clone the node.","    else if (model._boxed) {","        valueNode = clone(node);","    }","","    // JSONG always clones the node.","    else if (node.$type === $ref || node.$type === $error) {","        if (isJSONG) {","            valueNode = clone(node);","        } else {","            valueNode = node.value;","        }","    }","","    else if (isJSONG) {","        var isObject = node.value && typeof node.value === \"object\";","        var isUserCreatedNode = !node[$modelCreated];","        if (isObject || isUserCreatedNode) {","            valueNode = clone(node);","        } else {","            valueNode = node.value;","        }","    }","","    else {","        valueNode = node.value;","    }","","    if (outerResults) {","        outerResults.hasValue = true;","    }","","    if (isJSONG) {","        curr = seed.jsonGraph;","        if (!curr) {","            curr = seed.jsonGraph = {};","            seed.paths = [];","        }","        for (i = 0, len = optimizedLength - 1; i < len; i++) {","            key = optimizedPath[i];","","            if (!curr[key]) {","                curr[key] = {};","            }","            curr = curr[key];","        }","","        // assign the last","        key = optimizedPath[i];","","        // TODO: Special case? do string comparisons make big difference?","        curr[key] = materialized ? {$type: $atom} : valueNode;","        if (requestedPath) {","            seed.paths.push(requestedPath.slice(0, depth));","        }","    }","","    // The output is pathMap and the depth is 0.  It is just a","    // value report it as the found JSON","    else if (depth === 0) {","        seed.json = valueNode;","    }","","    // The output is pathMap but we need to build the pathMap before","    // reporting the value.","    else {","        curr = seed.json;","        if (!curr) {","            curr = seed.json = {};","        }","        for (i = 0; i < depth - 1; i++) {","            k = requestedPath[i];","            if (!curr[k]) {","                curr[k] = {};","            }","            prev = curr;","            prevK = k;","            curr = curr[k];","        }","        k = requestedPath[i];","        if (k !== null) {","            curr[k] = valueNode;","        } else {","            prev[prevK] = valueNode;","        }","    }","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"13":0,"14":0,"17":0,"18":0,"20":0,"21":0,"24":0,"25":0,"29":0,"30":0,"34":0,"35":0,"39":0,"40":0,"41":0,"43":0,"47":0,"48":0,"49":0,"50":0,"51":0,"53":0,"58":0,"61":0,"62":0,"65":0,"66":0,"67":0,"68":0,"69":0,"71":0,"72":0,"74":0,"75":0,"77":0,"81":0,"84":0,"85":0,"86":0,"92":0,"93":0,"99":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"108":0,"109":0,"110":0,"112":0,"113":0,"114":0,"116":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/lru.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/lru.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"lruPromote","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}}},"2":{"name":"lruSplice","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":46}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":46}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":60}},"6":{"start":{"line":9,"column":0},"end":{"line":32,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":27}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":28}},"9":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":15}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":30}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":30}},"13":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":28}},"15":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"16":{"start":{"line":24,"column":8},"end":{"line":24,"column":28}},"17":{"start":{"line":26,"column":4},"end":{"line":26,"column":28}},"18":{"start":{"line":29,"column":4},"end":{"line":29,"column":26}},"19":{"start":{"line":30,"column":4},"end":{"line":30,"column":26}},"20":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"21":{"start":{"line":34,"column":0},"end":{"line":56,"column":1}},"22":{"start":{"line":35,"column":4},"end":{"line":35,"column":27}},"23":{"start":{"line":38,"column":4},"end":{"line":38,"column":30}},"24":{"start":{"line":39,"column":4},"end":{"line":39,"column":30}},"25":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"26":{"start":{"line":41,"column":8},"end":{"line":41,"column":28}},"27":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"28":{"start":{"line":44,"column":8},"end":{"line":44,"column":28}},"29":{"start":{"line":46,"column":4},"end":{"line":46,"column":28}},"30":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"31":{"start":{"line":49,"column":8},"end":{"line":49,"column":30}},"32":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"33":{"start":{"line":52,"column":8},"end":{"line":52,"column":30}},"34":{"start":{"line":54,"column":4},"end":{"line":54,"column":33}},"35":{"start":{"line":55,"column":4},"end":{"line":55,"column":30}},"36":{"start":{"line":58,"column":0},"end":{"line":61,"column":2}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"7":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]}},"code":["var __head = require(\"./../../internal/head\");","var __tail = require(\"./../../internal/tail\");","var __next = require(\"./../../internal/next\");","var __prev = require(\"./../../internal/prev\");","var __invalidated = require(\"./../../internal/invalidated\");","","// [H] -> Next -> ... -> [T]","// [T] -> Prev -> ... -> [H]","function lruPromote(model, object) {","    var root = model._root;","    var head = root[__head];","    if (head === object) {","        return;","    }","","    // The item always exist in the cache since to get anything in the","    // cache it first must go through set.","    var prev = object[__prev];","    var next = object[__next];","    if (next) {","        next[__prev] = prev;","    }","    if (prev) {","        prev[__next] = next;","    }","    object[__prev] = void 0;","","    // Insert into head position","    root[__head] = object;","    object[__next] = head;","    head[__prev] = object;","}","","function lruSplice(model, object) {","    var root = model._root;","","    // Its in the cache.  Splice out.","    var prev = object[__prev];","    var next = object[__next];","    if (next) {","        next[__prev] = prev;","    }","    if (prev) {","        prev[__next] = next;","    }","    object[__prev] = void 0;","","    if (object === root[__head]) {","        root[__head] = void 0;","    }","    if (object === root[__tail]) {","        root[__tail] = void 0;","    }","    object[__invalidated] = true;","    root.expired.push(object);","}","","module.exports = {","    promote: lruPromote,","    splice: lruSplice","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"9":1,"10":0,"11":0,"12":0,"13":0,"18":0,"19":0,"20":0,"21":0,"23":0,"24":0,"26":0,"29":0,"30":0,"31":0,"34":1,"35":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"46":0,"48":0,"49":0,"51":0,"52":0,"54":0,"55":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/clone.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"clone","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":38}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"2":{"start":{"line":4,"column":0},"end":{"line":16,"column":2}},"3":{"start":{"line":5,"column":4},"end":{"line":5,"column":25}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"6":{"start":{"line":8,"column":4},"end":{"line":14,"column":5}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":24}},"8":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":21}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":30}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":20}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":8}},{"start":{"line":10,"column":8},"end":{"line":10,"column":8}}]}},"code":["// Copies the node","var prefix = require(\"./../../internal/prefix\");","","module.exports = function clone(node) {","    var outValue, i, len;","    var keys = Object.keys(node);","    outValue = {};","    for (i = 0, len = keys.length; i < len; i++) {","        var k = keys[i];","        if (k[0] === prefix) {","            continue;","        }","        outValue[k] = node[k];","    }","    return outValue;","};","",""],"l":{"2":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"13":0,"15":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/types/atom.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/types/atom.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":24}}},"branchMap":{},"code":["module.exports = \"atom\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/isExpired.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/isExpired.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{"1":[0,0,0],"2":[0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isExpired","line":2,"loc":{"start":{"line":2,"column":17},"end":{"line":2,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":5,"column":2}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":67}},"4":{"start":{"line":4,"column":4},"end":{"line":4,"column":85}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":19},"end":{"line":3,"column":43}},{"start":{"line":3,"column":47},"end":{"line":3,"column":49}},{"start":{"line":3,"column":53},"end":{"line":3,"column":66}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":11},"end":{"line":4,"column":26}},{"start":{"line":4,"column":30},"end":{"line":4,"column":44}},{"start":{"line":4,"column":49},"end":{"line":4,"column":63}},{"start":{"line":4,"column":67},"end":{"line":4,"column":83}}]}},"code":["var now = require(\"./../../support/now\");","module.exports = function isExpired(node) {","    var $expires = node.$expires === void 0 && -1 || node.$expires;","    return $expires !== -1 && $expires !== 1 && ($expires === 0 || $expires < now());","};",""],"l":{"1":1,"2":1,"3":0,"4":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/errors/InvalidModelError.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/errors/InvalidModelError.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"InvalidModelError","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":110}},"3":{"start":{"line":10,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":27}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":37}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":31}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":35}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":40}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}}},"branchMap":{},"code":["var NAME = \"InvalidModelError\";","var MESSAGE = \"The boundPath of the model is not valid since a value or error was found before the path end.\";","/**"," * An InvalidModelError can only happen when a user binds, whether sync"," * or async to shorted value.  See the unit tests for examples."," *"," * @param {String} message"," * @private"," */","function InvalidModelError(boundPath, shortedPath) {","    this.message = MESSAGE;","    this.stack = (new Error()).stack;","    this.boundPath = boundPath;","    this.shortedPath = shortedPath;","}","","// instanceof will be an error, but stack will be correct because its defined in the constructor.","InvalidModelError.prototype = new Error();","InvalidModelError.prototype.name = NAME;","InvalidModelError.message = MESSAGE;","","module.exports = InvalidModelError;",""],"l":{"1":1,"2":1,"10":1,"11":0,"12":0,"13":0,"14":0,"18":1,"19":1,"20":1,"22":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/mergeValueOrInsertBranch.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/mergeValueOrInsertBranch.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"mergeValueOrInsertBranch","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":22,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":56}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":50}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":52}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":48}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":52}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":52}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":54}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":70}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":86}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":62}},"16":{"start":{"line":19,"column":0},"end":{"line":67,"column":2}},"17":{"start":{"line":24,"column":4},"end":{"line":24,"column":40}},"18":{"start":{"line":26,"column":4},"end":{"line":64,"column":5}},"19":{"start":{"line":27,"column":8},"end":{"line":30,"column":9}},"20":{"start":{"line":28,"column":12},"end":{"line":28,"column":29}},"21":{"start":{"line":29,"column":12},"end":{"line":29,"column":43}},"22":{"start":{"line":31,"column":8},"end":{"line":35,"column":9}},"23":{"start":{"line":32,"column":12},"end":{"line":32,"column":59}},"24":{"start":{"line":33,"column":12},"end":{"line":33,"column":58}},"25":{"start":{"line":34,"column":12},"end":{"line":34,"column":62}},"26":{"start":{"line":37,"column":8},"end":{"line":37,"column":28}},"27":{"start":{"line":38,"column":8},"end":{"line":38,"column":37}},"28":{"start":{"line":45,"column":8},"end":{"line":45,"column":80}},"29":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"30":{"start":{"line":48,"column":12},"end":{"line":48,"column":97}},"31":{"start":{"line":50,"column":8},"end":{"line":63,"column":9}},"32":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"33":{"start":{"line":53,"column":16},"end":{"line":53,"column":86}},"34":{"start":{"line":56,"column":12},"end":{"line":56,"column":80}},"35":{"start":{"line":58,"column":12},"end":{"line":58,"column":62}},"36":{"start":{"line":60,"column":12},"end":{"line":60,"column":64}},"37":{"start":{"line":61,"column":12},"end":{"line":61,"column":75}},"38":{"start":{"line":62,"column":12},"end":{"line":62,"column":58}},"39":{"start":{"line":66,"column":4},"end":{"line":66,"column":16}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":14}},{"start":{"line":26,"column":18},"end":{"line":26,"column":27}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":16}},{"start":{"line":27,"column":20},"end":{"line":27,"column":35}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]},"6":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":13},"end":{"line":31,"column":17}},{"start":{"line":31,"column":21},"end":{"line":31,"column":34}},{"start":{"line":31,"column":39},"end":{"line":31,"column":56}}]},"7":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":8}},{"start":{"line":47,"column":8},"end":{"line":47,"column":8}}]},"8":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":13},"end":{"line":47,"column":17}},{"start":{"line":47,"column":21},"end":{"line":47,"column":26}},{"start":{"line":47,"column":31},"end":{"line":47,"column":53}}]},"9":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"10":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":12}},{"start":{"line":52,"column":12},"end":{"line":52,"column":12}}]},"11":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":16},"end":{"line":52,"column":32}},{"start":{"line":52,"column":36},"end":{"line":52,"column":61}}]},"12":{"line":56,"type":"cond-expr","locations":[{"start":{"line":56,"column":55},"end":{"line":56,"column":68}},{"start":{"line":56,"column":71},"end":{"line":56,"column":78}}]}},"code":["var $ref = require(\"./../types/ref\");","var $error = require(\"./../types/error\");","var getType = require(\"./../support/getType\");","var getSize = require(\"./../support/getSize\");","var getTimestamp = require(\"./../support/getTimestamp\");","","var isExpired = require(\"./../support/isExpired\");","var isPrimitive = require(\"./../support/isPrimitive\");","var isFunction = require(\"./../support/isFunction\");","","var wrapNode = require(\"./../support/wrapNode\");","var expireNode = require(\"./../support/expireNode\");","var insertNode = require(\"./../support/insertNode\");","var replaceNode = require(\"./../support/replaceNode\");","var updateNodeAncestors = require(\"./../support/updateNodeAncestors\");","var updateBackReferenceVersions = require(\"./../support/updateBackReferenceVersions\");","var reconstructPath = require(\"./../support/reconstructPath\");","","module.exports = function mergeValueOrInsertBranch(","    parent, node, key, value,","    branch, reference, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var type = getType(node, reference);","","    if (branch || reference) {","        if (type && isExpired(node)) {","            type = \"expired\";","            expireNode(node, expired, lru);","        }","        if ((type && type !== $ref) || isPrimitive(node)) {","            node = replaceNode(node, {}, parent, key, lru);","            node = insertNode(node, parent, key, version);","            node = updateBackReferenceVersions(node, version);","        }","    } else {","        var message = value;","        var mType = getType(message);","        // Compare the current cache value with the new value. If either of","        // them don't have a timestamp, or the message's timestamp is newer,","        // replace the cache value with the message value. If a comparator","        // is specified, the comparator takes precedence over timestamps.","        //","        // Comparing either Number or undefined to undefined always results in false.","        var isDistinct = (getTimestamp(message) < getTimestamp(node)) === false;","        // If at least one of the cache/message are sentinels, compare them.","        if ((type || mType) && isFunction(comparator)) {","            isDistinct = !comparator(node, message, optimizedPath.slice(0, optimizedPath.index));","        }","        if (isDistinct) {","","            if (mType === $error && isFunction(errorSelector)) {","                message = errorSelector(reconstructPath(requestedPath, key), message);","            }","","            message = wrapNode(message, mType, mType ? message.value : message);","","            var sizeOffset = getSize(node) - getSize(message);","","            node = replaceNode(node, message, parent, key, lru);","            parent = updateNodeAncestors(parent, sizeOffset, lru, version);","            node = insertNode(node, parent, key, version);","        }","    }","","    return node;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"7":1,"8":1,"9":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"24":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"37":0,"38":0,"45":0,"47":0,"48":0,"50":0,"52":0,"53":0,"56":0,"58":0,"60":0,"61":0,"62":0,"66":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/getType.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/getType.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getType","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":3,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":54}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":8},"end":{"line":6,"column":24}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":16}}},"branchMap":{"1":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":15},"end":{"line":4,"column":29}},{"start":{"line":4,"column":33},"end":{"line":4,"column":43}},{"start":{"line":4,"column":47},"end":{"line":4,"column":53}}]},"2":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":4}},{"start":{"line":5,"column":4},"end":{"line":5,"column":4}}]},"3":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":15}},{"start":{"line":5,"column":19},"end":{"line":5,"column":23}}]}},"code":["var isObject = require(\"./../support/isObject\");","","module.exports = function getType(node, anyType) {","    var type = isObject(node) && node.$type || void 0;","    if (anyType && type) {","        return \"branch\";","    }","    return type;","};",""],"l":{"1":1,"3":1,"4":0,"5":0,"6":0,"8":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/RequestQueueV2.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/RequestQueueV2.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"RequestQueueV2","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":38}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":9},"end":{"line":32,"column":54}}},"4":{"name":"refCountCallback","line":93,"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":36}}},"5":{"name":"(anonymous_5)","line":109,"loc":{"start":{"line":109,"column":15},"end":{"line":109,"column":26}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":19},"end":{"line":125,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":11,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":23}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":31}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":40}},"7":{"start":{"line":17,"column":0},"end":{"line":135,"column":2}},"8":{"start":{"line":22,"column":8},"end":{"line":22,"column":35}},"9":{"start":{"line":33,"column":8},"end":{"line":33,"column":24}},"10":{"start":{"line":34,"column":8},"end":{"line":34,"column":29}},"11":{"start":{"line":35,"column":8},"end":{"line":35,"column":22}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":38}},"13":{"start":{"line":37,"column":8},"end":{"line":37,"column":19}},"14":{"start":{"line":38,"column":8},"end":{"line":38,"column":45}},"15":{"start":{"line":39,"column":8},"end":{"line":39,"column":45}},"16":{"start":{"line":40,"column":8},"end":{"line":40,"column":29}},"17":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"18":{"start":{"line":43,"column":8},"end":{"line":79,"column":9}},"19":{"start":{"line":44,"column":12},"end":{"line":44,"column":34}},"20":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"21":{"start":{"line":46,"column":16},"end":{"line":46,"column":25}},"22":{"start":{"line":51,"column":12},"end":{"line":73,"column":13}},"23":{"start":{"line":52,"column":16},"end":{"line":53,"column":72}},"24":{"start":{"line":58,"column":16},"end":{"line":63,"column":17}},"25":{"start":{"line":59,"column":20},"end":{"line":59,"column":49}},"26":{"start":{"line":60,"column":20},"end":{"line":60,"column":49}},"27":{"start":{"line":61,"column":20},"end":{"line":61,"column":65}},"28":{"start":{"line":62,"column":20},"end":{"line":62,"column":28}},"29":{"start":{"line":68,"column":16},"end":{"line":69,"column":72}},"30":{"start":{"line":70,"column":16},"end":{"line":70,"column":37}},"31":{"start":{"line":71,"column":16},"end":{"line":71,"column":37}},"32":{"start":{"line":72,"column":16},"end":{"line":72,"column":24}},"33":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"34":{"start":{"line":77,"column":16},"end":{"line":77,"column":22}},"35":{"start":{"line":83,"column":8},"end":{"line":90,"column":9}},"36":{"start":{"line":84,"column":12},"end":{"line":84,"column":59}},"37":{"start":{"line":85,"column":12},"end":{"line":85,"column":48}},"38":{"start":{"line":86,"column":12},"end":{"line":86,"column":20}},"39":{"start":{"line":87,"column":12},"end":{"line":88,"column":68}},"40":{"start":{"line":89,"column":12},"end":{"line":89,"column":57}},"41":{"start":{"line":93,"column":8},"end":{"line":105,"column":9}},"42":{"start":{"line":94,"column":12},"end":{"line":96,"column":13}},"43":{"start":{"line":95,"column":16},"end":{"line":95,"column":23}},"44":{"start":{"line":98,"column":12},"end":{"line":98,"column":20}},"45":{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},"46":{"start":{"line":103,"column":16},"end":{"line":103,"column":21}},"47":{"start":{"line":109,"column":8},"end":{"line":119,"column":10}},"48":{"start":{"line":110,"column":12},"end":{"line":112,"column":13}},"49":{"start":{"line":111,"column":16},"end":{"line":111,"column":23}},"50":{"start":{"line":114,"column":12},"end":{"line":114,"column":28}},"51":{"start":{"line":115,"column":12},"end":{"line":115,"column":44}},"52":{"start":{"line":116,"column":12},"end":{"line":118,"column":13}},"53":{"start":{"line":117,"column":16},"end":{"line":117,"column":35}},"54":{"start":{"line":126,"column":8},"end":{"line":126,"column":38}},"55":{"start":{"line":127,"column":8},"end":{"line":127,"column":32}},"56":{"start":{"line":128,"column":8},"end":{"line":133,"column":9}},"57":{"start":{"line":129,"column":12},"end":{"line":132,"column":13}},"58":{"start":{"line":130,"column":16},"end":{"line":130,"column":38}},"59":{"start":{"line":131,"column":16},"end":{"line":131,"column":22}},"60":{"start":{"line":137,"column":0},"end":{"line":137,"column":32}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":12}},{"start":{"line":45,"column":12},"end":{"line":45,"column":12}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":12}},{"start":{"line":51,"column":12},"end":{"line":51,"column":12}}]},"3":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":58,"column":16}},{"start":{"line":58,"column":16},"end":{"line":58,"column":16}}]},"4":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":76,"column":12}},{"start":{"line":76,"column":12},"end":{"line":76,"column":12}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"6":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":12}},{"start":{"line":94,"column":12},"end":{"line":94,"column":12}}]},"7":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":12},"end":{"line":102,"column":12}},{"start":{"line":102,"column":12},"end":{"line":102,"column":12}}]},"8":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":12}},{"start":{"line":110,"column":12},"end":{"line":110,"column":12}}]},"9":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":16},"end":{"line":110,"column":24}},{"start":{"line":110,"column":28},"end":{"line":110,"column":39}}]},"10":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":12}},{"start":{"line":129,"column":12},"end":{"line":129,"column":12}}]}},"code":["var RequestTypes = require(\"./RequestTypes\");","var GetRequest = require(\"./GetRequestV2\");","","/**"," * The request queue is responsible for queuing the operations to"," * the model\"s dataSource."," *"," * @param {Model} model -"," * @param {Scheduler} scheduler -"," */","function RequestQueueV2(model, scheduler) {","    this.model = model;","    this.scheduler = scheduler;","    this.requests = this._requests = [];","}","","RequestQueueV2.prototype = {","    /**","     * Sets the scheduler, but will not affect any current requests.","     */","    setScheduler: function(scheduler) {","        this.scheduler = scheduler;","    },","","    /**","     * Creates a get request to the dataSource.  Depending on the current","     * scheduler is how the getRequest will be flushed.","     * @param {Array} requestedPaths -","     * @param {Array} optimizedPaths -","     * @param {Function} cb -","     */","    get: function(requestedPaths, optimizedPaths, cb) {","        var self = this;","        var disposables = [];","        var count = 0;","        var requests = self._requests;","        var i, len;","        var oRemainingPaths = optimizedPaths;","        var rRemainingPaths = requestedPaths;","        var disposed = false;","        var request;","","        for (i = 0, len = requests.length; i < len; ++i) {","            request = requests[i];","            if (request.type !== RequestTypes.GetRequest) {","                continue;","            }","","            // The request has been sent, attempt to jump on the request","            // if possible.","            if (request.sent) {","                var results = request.add(","                    rRemainingPaths, oRemainingPaths, refCountCallback);","","                // Checks to see if the results were successfully inserted","                // into the outgoing results.  Then our paths will be reduced","                // to the complement.","                if (results[0]) {","                    rRemainingPaths = results[1];","                    oRemainingPaths = results[2];","                    disposables[disposables.length] = results[3];","                    ++count;","                }","            }","","            // If there is a non sent request, then we can batch and leave.","            else {","                request.batch(","                    rRemainingPaths, oRemainingPaths, refCountCallback);","                oRemainingPaths = [];","                rRemainingPaths = [];","                ++count;","            }","","            // If there are no more remaining paths then exit the loop.","            if (!oRemainingPaths.length) {","                break;","            }","        }","","        // After going through all the available requests if there are more","        // paths to process then a new request must be made.","        if (oRemainingPaths.length) {","            request = new GetRequest(self.scheduler, self);","            requests[requests.length] = request;","            ++count;","            var disposable = request.batch(","                rRemainingPaths, oRemainingPaths, refCountCallback);","            disposables[disposables.length] = disposable;","        }","","        // This is a simple refCount callback.","        function refCountCallback() {","            if (disposed) {","                return;","            }","","            --count;","","            // If the count becomes 0, then its time to notify the","            // listener that the request is done.","            if (count === 0) {","                cb();","            }","        }","","        // When disposing the request all of the outbound requests will be","        // disposed of.","        return function() {","            if (disposed || count === 0) {","                return;","            }","","            disposed = true;","            var length = disposables.length;","            for (var idx = 0; idx < length; ++idx) {","                disposables[idx]();","            }","        };","    },","","    /**","     * Removes the request from the request","     */","    removeRequest: function(request) {","        var requests = this._requests;","        var i = requests.length;","        while (--i >= 0) {","            if (requests[i].id === request.id) {","                requests.splice(i, 1);","                break;","            }","        }","    }","};","","module.exports = RequestQueueV2;",""],"l":{"1":1,"2":1,"11":1,"12":0,"13":0,"14":0,"17":1,"22":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"45":0,"46":0,"51":0,"52":0,"58":0,"59":0,"60":0,"61":0,"62":0,"68":0,"70":0,"71":0,"72":0,"76":0,"77":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"93":1,"94":0,"95":0,"98":0,"102":0,"103":0,"109":0,"110":0,"111":0,"114":0,"115":0,"116":0,"117":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"137":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/RequestTypes.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/RequestTypes.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}}},"branchMap":{},"code":["module.exports = {","    GetRequest: \"GET\"","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/GetRequestV2.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/GetRequestV2.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":19},"end":{"line":19,"column":53}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":11},"end":{"line":46,"column":62}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":56},"end":{"line":64,"column":67}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":46},"end":{"line":65,"column":66}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":100,"column":9},"end":{"line":100,"column":50}}},"6":{"name":"(anonymous_6)","line":138,"loc":{"start":{"line":138,"column":12},"end":{"line":138,"column":43}}},"7":{"name":"(anonymous_7)","line":171,"loc":{"start":{"line":171,"column":43},"end":{"line":171,"column":55}}},"8":{"name":"createDisposable","line":196,"loc":{"start":{"line":196,"column":0},"end":{"line":196,"column":40}}},"9":{"name":"(anonymous_9)","line":198,"loc":{"start":{"line":198,"column":11},"end":{"line":198,"column":22}}},"10":{"name":"flattenRequestedPaths","line":217,"loc":{"start":{"line":217,"column":0},"end":{"line":217,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":51}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":19}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":58}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":54}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":54}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":20}},"9":{"start":{"line":19,"column":0},"end":{"line":35,"column":2}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":22}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":27}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":37}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":27}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":31}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":32}},"16":{"start":{"line":27,"column":4},"end":{"line":27,"column":23}},"17":{"start":{"line":28,"column":4},"end":{"line":28,"column":30}},"18":{"start":{"line":29,"column":4},"end":{"line":29,"column":30}},"19":{"start":{"line":30,"column":4},"end":{"line":30,"column":25}},"20":{"start":{"line":31,"column":4},"end":{"line":31,"column":20}},"21":{"start":{"line":32,"column":4},"end":{"line":32,"column":28}},"22":{"start":{"line":33,"column":4},"end":{"line":33,"column":27}},"23":{"start":{"line":34,"column":4},"end":{"line":34,"column":27}},"24":{"start":{"line":37,"column":0},"end":{"line":191,"column":2}},"25":{"start":{"line":47,"column":8},"end":{"line":47,"column":24}},"26":{"start":{"line":48,"column":8},"end":{"line":48,"column":42}},"27":{"start":{"line":49,"column":8},"end":{"line":49,"column":42}},"28":{"start":{"line":50,"column":8},"end":{"line":50,"column":40}},"29":{"start":{"line":51,"column":8},"end":{"line":51,"column":32}},"30":{"start":{"line":55,"column":8},"end":{"line":55,"column":37}},"31":{"start":{"line":56,"column":8},"end":{"line":56,"column":37}},"32":{"start":{"line":57,"column":8},"end":{"line":57,"column":34}},"33":{"start":{"line":58,"column":8},"end":{"line":58,"column":22}},"34":{"start":{"line":61,"column":8},"end":{"line":86,"column":9}},"35":{"start":{"line":62,"column":12},"end":{"line":62,"column":34}},"36":{"start":{"line":64,"column":12},"end":{"line":85,"column":15}},"37":{"start":{"line":65,"column":16},"end":{"line":84,"column":19}},"38":{"start":{"line":66,"column":20},"end":{"line":66,"column":58}},"39":{"start":{"line":67,"column":20},"end":{"line":67,"column":42}},"40":{"start":{"line":71,"column":20},"end":{"line":83,"column":21}},"41":{"start":{"line":72,"column":24},"end":{"line":72,"column":55}},"42":{"start":{"line":77,"column":24},"end":{"line":82,"column":25}},"43":{"start":{"line":78,"column":28},"end":{"line":78,"column":50}},"44":{"start":{"line":79,"column":28},"end":{"line":81,"column":29}},"45":{"start":{"line":80,"column":32},"end":{"line":80,"column":46}},"46":{"start":{"line":91,"column":8},"end":{"line":91,"column":43}},"47":{"start":{"line":102,"column":8},"end":{"line":102,"column":24}},"48":{"start":{"line":103,"column":8},"end":{"line":103,"column":78}},"49":{"start":{"line":104,"column":8},"end":{"line":104,"column":32}},"50":{"start":{"line":105,"column":8},"end":{"line":105,"column":32}},"51":{"start":{"line":107,"column":8},"end":{"line":113,"column":9}},"52":{"start":{"line":108,"column":12},"end":{"line":108,"column":53}},"53":{"start":{"line":109,"column":12},"end":{"line":109,"column":53}},"54":{"start":{"line":111,"column":12},"end":{"line":111,"column":44}},"55":{"start":{"line":112,"column":12},"end":{"line":112,"column":44}},"56":{"start":{"line":115,"column":8},"end":{"line":115,"column":29}},"57":{"start":{"line":116,"column":8},"end":{"line":116,"column":31}},"58":{"start":{"line":121,"column":8},"end":{"line":130,"column":9}},"59":{"start":{"line":122,"column":12},"end":{"line":122,"column":28}},"60":{"start":{"line":123,"column":12},"end":{"line":123,"column":45}},"61":{"start":{"line":124,"column":12},"end":{"line":124,"column":44}},"62":{"start":{"line":125,"column":12},"end":{"line":125,"column":59}},"63":{"start":{"line":126,"column":12},"end":{"line":126,"column":43}},"64":{"start":{"line":127,"column":12},"end":{"line":127,"column":26}},"65":{"start":{"line":129,"column":12},"end":{"line":129,"column":53}},"66":{"start":{"line":132,"column":8},"end":{"line":132,"column":80}},"67":{"start":{"line":139,"column":8},"end":{"line":139,"column":24}},"68":{"start":{"line":140,"column":8},"end":{"line":140,"column":44}},"69":{"start":{"line":141,"column":8},"end":{"line":141,"column":36}},"70":{"start":{"line":142,"column":8},"end":{"line":142,"column":52}},"71":{"start":{"line":143,"column":8},"end":{"line":143,"column":46}},"72":{"start":{"line":144,"column":8},"end":{"line":144,"column":36}},"73":{"start":{"line":146,"column":8},"end":{"line":146,"column":33}},"74":{"start":{"line":149,"column":8},"end":{"line":149,"column":57}},"75":{"start":{"line":152,"column":8},"end":{"line":186,"column":9}},"76":{"start":{"line":153,"column":12},"end":{"line":153,"column":28}},"77":{"start":{"line":157,"column":12},"end":{"line":161,"column":13}},"78":{"start":{"line":158,"column":16},"end":{"line":160,"column":18}},"79":{"start":{"line":164,"column":12},"end":{"line":169,"column":13}},"80":{"start":{"line":165,"column":16},"end":{"line":168,"column":18}},"81":{"start":{"line":171,"column":12},"end":{"line":176,"column":15}},"82":{"start":{"line":172,"column":16},"end":{"line":175,"column":18}},"83":{"start":{"line":177,"column":12},"end":{"line":177,"column":78}},"84":{"start":{"line":182,"column":12},"end":{"line":185,"column":49}},"85":{"start":{"line":189,"column":8},"end":{"line":189,"column":32}},"86":{"start":{"line":196,"column":0},"end":{"line":215,"column":1}},"87":{"start":{"line":197,"column":4},"end":{"line":197,"column":25}},"88":{"start":{"line":198,"column":4},"end":{"line":214,"column":6}},"89":{"start":{"line":199,"column":8},"end":{"line":201,"column":9}},"90":{"start":{"line":200,"column":12},"end":{"line":200,"column":19}},"91":{"start":{"line":203,"column":8},"end":{"line":203,"column":24}},"92":{"start":{"line":204,"column":8},"end":{"line":204,"column":39}},"93":{"start":{"line":205,"column":8},"end":{"line":205,"column":42}},"94":{"start":{"line":206,"column":8},"end":{"line":206,"column":42}},"95":{"start":{"line":209,"column":8},"end":{"line":209,"column":37}},"96":{"start":{"line":210,"column":8},"end":{"line":213,"column":9}},"97":{"start":{"line":211,"column":12},"end":{"line":211,"column":42}},"98":{"start":{"line":212,"column":12},"end":{"line":212,"column":56}},"99":{"start":{"line":217,"column":0},"end":{"line":227,"column":1}},"100":{"start":{"line":218,"column":4},"end":{"line":218,"column":17}},"101":{"start":{"line":219,"column":4},"end":{"line":219,"column":20}},"102":{"start":{"line":220,"column":4},"end":{"line":225,"column":5}},"103":{"start":{"line":221,"column":8},"end":{"line":221,"column":33}},"104":{"start":{"line":222,"column":8},"end":{"line":224,"column":9}},"105":{"start":{"line":223,"column":12},"end":{"line":223,"column":37}},"106":{"start":{"line":226,"column":4},"end":{"line":226,"column":15}},"107":{"start":{"line":229,"column":0},"end":{"line":229,"column":30}}},"branchMap":{"1":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"2":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":20},"end":{"line":71,"column":20}},{"start":{"line":71,"column":20},"end":{"line":71,"column":20}}]},"3":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":28},"end":{"line":79,"column":28}},{"start":{"line":79,"column":28},"end":{"line":79,"column":28}}]},"4":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"5":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":8}},{"start":{"line":121,"column":8},"end":{"line":121,"column":8}}]},"6":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":152,"column":8}},{"start":{"line":152,"column":8},"end":{"line":152,"column":8}}]},"7":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":12}},{"start":{"line":157,"column":12},"end":{"line":157,"column":12}}]},"8":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":12},"end":{"line":164,"column":12}},{"start":{"line":164,"column":12},"end":{"line":164,"column":12}}]},"9":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":8},"end":{"line":199,"column":8}},{"start":{"line":199,"column":8},"end":{"line":199,"column":8}}]},"10":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":12},"end":{"line":199,"column":20}},{"start":{"line":199,"column":24},"end":{"line":199,"column":41}}]},"11":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":8}},{"start":{"line":210,"column":8},"end":{"line":210,"column":8}}]},"12":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":12},"end":{"line":210,"column":23}},{"start":{"line":210,"column":27},"end":{"line":210,"column":40}}]}},"code":["var complement = require(\"./complement\");","var flushGetRequest = require(\"./flushGetRequest\");","var REQUEST_ID = 0;","var GetRequestType = require(\"./RequestTypes\").GetRequest;","var setJSONGraphs = require(\"./../set/setJSONGraphs\");","var setPathValues = require(\"./../set/setPathValues\");","var $error = require(\"./../types/error\");","var emptyArray = [];","","/**"," * Creates a new GetRequest.  This GetRequest takes a scheduler and"," * the request queue.  Once the scheduler fires, all batched requests"," * will be sent to the server.  Upon request completion, the data is"," * merged back into the cache and all callbacks are notified."," *"," * @param {Scheduler} scheduler -"," * @param {RequestQueueV2} requestQueue -"," */","var GetRequestV2 = function(scheduler, requestQueue) {","    this.sent = false;","    this.scheduled = false;","    this.requestQueue = requestQueue;","    this.id = ++REQUEST_ID;","    this.type = GetRequestType;","","    this._scheduler = scheduler;","    this._pathMap = {};","    this._optimizedPaths = [];","    this._requestedPaths = [];","    this._callbacks = [];","    this._count = 0;","    this._disposable = null;","    this._collapsed = null;","    this._disposed = false;","};","","GetRequestV2.prototype = {","    /**","     * batches the paths that are passed in.  Once the request is complete,","     * all callbacks will be called and the request will be removed from","     * parent queue.","     * @param {Array} requestedPaths -","     * @param {Array} optimizedPaths -","     * @param {Function} callback -","     */","    batch: function(requestedPaths, optimizedPaths, callback) {","        var self = this;","        var oPaths = self._optimizedPaths;","        var rPaths = self._requestedPaths;","        var callbacks = self._callbacks;","        var idx = oPaths.length;","","        // If its not sent, simply add it to the requested paths","        // and callbacks.","        oPaths[idx] = optimizedPaths;","        rPaths[idx] = requestedPaths;","        callbacks[idx] = callback;","        ++self._count;","","        // If it has not been scheduled, then schedule the action","        if (!self.scheduled) {","            self.scheduled = true;","","            self._disposable = self._scheduler.schedule(function() {","                flushGetRequest(self, oPaths, function(err, data) {","                    self.requestQueue.removeRequest(self);","                    self._disposed = true;","","                    // If there is at least one callback remaining, then","                    // callback the callbacks.","                    if (self._count) {","                        self._merge(rPaths, err, data);","","                        // Call the callbacks.  The first one inserts all the","                        // data so that the rest do not have consider if their","                        // data is present or not.","                        for (var i = 0, len = callbacks.length; i < len; ++i) {","                            var fn = callbacks[i];","                            if (fn) {","                                fn(err, data);","                            }","                        }","                    }","                });","            });","        }","","        // Disposes this batched request.  This does not mean that the","        // entire request has been disposed, but just the local one, if all","        // requests are disposed, then the outer disposable will be removed.","        return createDisposable(self, idx);","    },","","    /**","     * Attempts to add paths to the outgoing request.  If there are added","     * paths then the request callback will be added to the callback list.","     *","     * @returns {Array} - the remaining paths in the request.","     */","    add: function(requested, optimized, callback) {","        // uses the length tree complement calculator.","        var self = this;","        var complementTuple = complement(requested, optimized, self._pathMap);","        var optimizedComplement;","        var requestedComplement;","","        if (complementTuple) {","            requestedComplement = complementTuple[2];","            optimizedComplement = complementTuple[1];","        } else {","            requestedComplement = requested;","            optimizedComplement = optimized;","        }","","        var inserted = false;","        var disposable = false;","","        // If the out paths is less than the passed in paths, then there","        // has been an intersection and the complement has been returned.","        // Therefore, this can be deduped across requests.","        if (optimizedComplement.length < optimized.length) {","            inserted = true;","            var idx = self._callbacks.length;","            self._callbacks[idx] = callback;","            self._requestedPaths[idx] = complementTuple[0];","            self._optimizedPaths[idx] = [];","            ++self._count;","","            disposable = createDisposable(self, idx);","        }","","        return [inserted, requestedComplement, optimizedComplement, disposable];","    },","","    /**","     * merges the response into the model\"s cache.","     */","    _merge: function(requested, err, data) {","        var self = this;","        var model = self.requestQueue.model;","        var modelRoot = model._root;","        var errorSelector = modelRoot.errorSelector;","        var comparator = modelRoot.comparator;","        var boundPath = model._path;","","        model._path = emptyArray;","","        // flatten all the requested paths, adds them to the","        var nextPaths = flattenRequestedPaths(requested);","","        // Insert errors in every requested position.","        if (err) {","            var error = err;","","            // Converts errors to objects, a more friendly storage","            // of errors.","            if (error instanceof Error) {","                error = {","                    message: error.message","                };","            }","","            // Not all errors are value $types.","            if (!error.$type) {","                error = {","                    $type: $error,","                    value: error","                };","            }","","            var pathValues = nextPaths.map(function(x) {","                return {","                    path: x,","                    value: error","                };","            });","            setPathValues(model, pathValues, null, errorSelector, comparator);","        }","","        // Insert the jsonGraph from the dataSource.","        else {","            setJSONGraphs(model, [{","                paths: nextPaths,","                jsonGraph: data.jsonGraph","            }], null, errorSelector, comparator);","        }","","        // return the model\"s boundPath","        model._path = boundPath;","    }","};","","// Creates a more efficient closure of the things that are","// needed.  So the request and the idx.  Also prevents code","// duplication.","function createDisposable(request, idx) {","    var disposed = false;","    return function() {","        if (disposed || request._disposed) {","            return;","        }","","        disposed = true;","        request._callbacks[idx] = null;","        request._optimizedPaths[idx] = [];","        request._requestedPaths[idx] = [];","","        // If there are no more requests, then dispose all of the request.","        var count = --request._count;","        if (count === 0 && !request.sent) {","            request._disposable.dispose();","            request.requestQueue.removeRequest(request);","        }","    };","}","","function flattenRequestedPaths(requested) {","    var out = [];","    var outLen = -1;","    for (var i = 0, len = requested.length; i < len; ++i) {","        var paths = requested[i];","        for (var j = 0, innerLen = paths.length; j < innerLen; ++j) {","            out[++outLen] = paths[j];","        }","    }","    return out;","}","","module.exports = GetRequestV2;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"37":1,"47":0,"48":0,"49":0,"50":0,"51":0,"55":0,"56":0,"57":0,"58":0,"61":0,"62":0,"64":0,"65":0,"66":0,"67":0,"71":0,"72":0,"77":0,"78":0,"79":0,"80":0,"91":0,"102":0,"103":0,"104":0,"105":0,"107":0,"108":0,"109":0,"111":0,"112":0,"115":0,"116":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"129":0,"132":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"146":0,"149":0,"152":0,"153":0,"157":0,"158":0,"164":0,"165":0,"171":0,"172":0,"177":0,"182":0,"189":0,"196":1,"197":0,"198":0,"199":0,"200":0,"203":0,"204":0,"205":0,"206":0,"209":0,"210":0,"211":0,"212":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"226":0,"229":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/complement.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/complement.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"complement","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":67}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":53}},"3":{"start":{"line":11,"column":0},"end":{"line":50,"column":2}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":33}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":33}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":35}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":55}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":34}},"9":{"start":{"line":18,"column":4},"end":{"line":43,"column":5}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":32}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":40}},"12":{"start":{"line":24,"column":8},"end":{"line":42,"column":9}},"13":{"start":{"line":26,"column":12},"end":{"line":29,"column":13}},"14":{"start":{"line":27,"column":16},"end":{"line":27,"column":63}},"15":{"start":{"line":28,"column":16},"end":{"line":28,"column":69}},"16":{"start":{"line":35,"column":12},"end":{"line":38,"column":13}},"17":{"start":{"line":36,"column":16},"end":{"line":36,"column":66}},"18":{"start":{"line":37,"column":16},"end":{"line":37,"column":66}},"19":{"start":{"line":40,"column":12},"end":{"line":40,"column":71}},"20":{"start":{"line":41,"column":12},"end":{"line":41,"column":37}},"21":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"22":{"start":{"line":46,"column":8},"end":{"line":46,"column":20}},"23":{"start":{"line":49,"column":4},"end":{"line":49,"column":78}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":20}},{"start":{"line":24,"column":24},"end":{"line":24,"column":58}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":12}},{"start":{"line":26,"column":12},"end":{"line":26,"column":12}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":12}},{"start":{"line":35,"column":12},"end":{"line":35,"column":12}}]},"5":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":16},"end":{"line":35,"column":34}},{"start":{"line":35,"column":38},"end":{"line":35,"column":43}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]}},"code":["var hasIntersection = require(\"falcor-path-utils\").hasIntersection;","var arraySlice = require(\"./../support/array-slice\");","","/**"," * creates the complement of the requested and optimized paths"," * based on the provided tree."," *"," * If there is no complement then this is just a glorified"," * array copy."," */","module.exports = function complement(requested, optimized, tree) {","    var optimizedComplement = [];","    var requestedComplement = [];","    var requestedIntersection = [];","    var intersectionLength = -1, complementLength = -1;","    var intersectionFound = false;","","    for (var i = 0, len = optimized.length; i < len; ++i) {","        // If this does not intersect then add it to the output.","        var path = optimized[i];","        var subTree = tree[path.length];","","        // If there is no subtree to look into or there is no intersection.","        if (!subTree || !hasIntersection(subTree, path, 0)) {","","            if (intersectionFound) {","                optimizedComplement[++complementLength] = path;","                requestedComplement[complementLength] = requested[i];","            }","        } else {","            // If there has been no intersection yet and","            // i is bigger than 0 (meaning we have had only complements)","            // then we need to update our complements to match the current","            // reality.","            if (!intersectionFound && i > 0) {","                requestedComplement = arraySlice(requested, 0, i);","                optimizedComplement = arraySlice(optimized, 0, i);","            }","","            requestedIntersection[++intersectionLength] = requested[i];","            intersectionFound = true;","        }","    }","","    if (!intersectionFound) {","        return null;","    }","","    return [requestedIntersection, optimizedComplement, requestedComplement ];","};",""],"l":{"1":1,"2":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"18":0,"20":0,"21":0,"24":0,"26":0,"27":0,"28":0,"35":0,"36":0,"37":0,"40":0,"41":0,"45":0,"46":0,"49":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-slice.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-slice.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"arraySlice","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":62}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":2}},"2":{"start":{"line":2,"column":4},"end":{"line":2,"column":30}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":15}},"4":{"start":{"line":4,"column":4},"end":{"line":4,"column":33}},"5":{"start":{"line":6,"column":4},"end":{"line":8,"column":5}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":14}},"7":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":19}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":30}},"10":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":37}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}}},"branchMap":{"1":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":16},"end":{"line":2,"column":24}},{"start":{"line":2,"column":28},"end":{"line":2,"column":29}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":4}},{"start":{"line":6,"column":4},"end":{"line":6,"column":4}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"4":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":18}},{"start":{"line":10,"column":22},"end":{"line":10,"column":32}}]}},"code":["module.exports = function arraySlice(array, indexArg, endArg) {","    var index = indexArg || 0;","    var i = -1;","    var n = array.length - index;","","    if (n < 0) {","        n = 0;","    }","","    if (endArg > 0 && n > endArg) {","        n = endArg;","    }","","    var array2 = new Array(n);","    while (++i < n) {","        array2[i] = array[i + index];","    }","    return array2;","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"6":0,"7":0,"10":0,"11":0,"14":0,"15":0,"16":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/flushGetRequest.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/flushGetRequest.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"flushGetRequest","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":74}}},"2":{"name":"(anonymous_2)","line":71,"loc":{"start":{"line":71,"column":18},"end":{"line":71,"column":33}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":11},"end":{"line":73,"column":25}}},"4":{"name":"(anonymous_4)","line":75,"loc":{"start":{"line":75,"column":11},"end":{"line":75,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":30}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"4":{"start":{"line":14,"column":0},"end":{"line":78,"column":2}},"5":{"start":{"line":15,"column":4},"end":{"line":18,"column":5}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":52}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":15}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":24}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":30}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":35}},"11":{"start":{"line":30,"column":4},"end":{"line":30,"column":44}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":47}},"13":{"start":{"line":32,"column":4},"end":{"line":45,"column":5}},"14":{"start":{"line":33,"column":8},"end":{"line":33,"column":41}},"15":{"start":{"line":34,"column":8},"end":{"line":44,"column":9}},"16":{"start":{"line":35,"column":12},"end":{"line":35,"column":35}},"17":{"start":{"line":36,"column":12},"end":{"line":36,"column":37}},"18":{"start":{"line":38,"column":12},"end":{"line":43,"column":13}},"19":{"start":{"line":39,"column":16},"end":{"line":39,"column":41}},"20":{"start":{"line":41,"column":16},"end":{"line":41,"column":52}},"21":{"start":{"line":42,"column":16},"end":{"line":42,"column":68}},"22":{"start":{"line":48,"column":4},"end":{"line":48,"column":43}},"23":{"start":{"line":49,"column":4},"end":{"line":49,"column":56}},"24":{"start":{"line":50,"column":4},"end":{"line":53,"column":5}},"25":{"start":{"line":51,"column":8},"end":{"line":51,"column":49}},"26":{"start":{"line":52,"column":8},"end":{"line":52,"column":58}},"27":{"start":{"line":57,"column":4},"end":{"line":57,"column":63}},"28":{"start":{"line":58,"column":4},"end":{"line":58,"column":22}},"29":{"start":{"line":67,"column":4},"end":{"line":77,"column":11}},"30":{"start":{"line":72,"column":12},"end":{"line":72,"column":33}},"31":{"start":{"line":74,"column":12},"end":{"line":74,"column":41}},"32":{"start":{"line":76,"column":12},"end":{"line":76,"column":42}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":12}},{"start":{"line":38,"column":12},"end":{"line":38,"column":12}}]}},"code":["var pathUtils = require(\"falcor-path-utils\");","var toTree = pathUtils.toTree;","var toPaths = pathUtils.toPaths;","","/**"," * Flushes the current set of requests.  This will send the paths to the"," * dataSource.  * The results of the dataSource will be sent to callback which"," * should perform the zip of all callbacks."," * @param {GetRequest} request -"," * @param {Array} listOfPaths -"," * @param {Function} callback -"," * @private"," */","module.exports = function flushGetRequest(request, listOfPaths, callback) {","    if (request._count === 0) {","        request.requestQueue.removeRequest(request);","        return;","    }","","    request.sent = true;","    request.scheduled = false;","","    // TODO: Move this to the collapse algorithm,","    // TODO: we should have a collapse that returns the paths and","    // TODO: the trees.","","    // Take all the paths and add them to the pathMap by length.","    // Since its a list of paths","    var pathMap = request._pathMap;","    var listKeys = Object.keys(listOfPaths);","    var listIdx = 0, listLen = listKeys.length;","    for (; listIdx < listLen; ++listIdx) {","        var paths = listOfPaths[listIdx];","        for (var j = 0, pathLen = paths.length; j < pathLen; ++j) {","            var pathSet = paths[j];","            var len = pathSet.length;","","            if (!pathMap[len]) {","                pathMap[len] = [pathSet];","            } else {","                var pathSetsByLength = pathMap[len];","                pathSetsByLength[pathSetsByLength.length] = pathSet;","            }","        }","    }","","    // now that we have them all by length, convert each to a tree.","    var pathMapKeys = Object.keys(pathMap);","    var pathMapIdx = 0, pathMapLen = pathMapKeys.length;","    for (; pathMapIdx < pathMapLen; ++pathMapIdx) {","        var pathMapKey = pathMapKeys[pathMapIdx];","        pathMap[pathMapKey] = toTree(pathMap[pathMapKey]);","    }","","    // Take the pathMapTree and create the collapsed paths and send those","    // off to the server.","    var collapsedPaths = request._collasped = toPaths(pathMap);","    var jsonGraphData;","","    // Make the request.","    // You are probably wondering why this is not cancellable.  If a request","    // goes out, and all the requests are removed, the request should not be","    // cancelled.  The reasoning is that another request could come in, after","    // all callbacks have been removed and be deduped.  Might as well keep this","    // around until it comes back.  If at that point there are no requests then","    // we cancel at the callback above.","    request.","        requestQueue.","        model._source.","        get(collapsedPaths).","        subscribe(function(data) {","            jsonGraphData = data;","        }, function(err) {","            callback(err, jsonGraphData);","        }, function() {","            callback(null, jsonGraphData);","        });","};","",""],"l":{"1":1,"2":1,"3":1,"14":1,"15":0,"16":0,"17":0,"20":0,"21":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0,"42":0,"48":0,"49":0,"50":0,"51":0,"52":0,"57":0,"58":0,"67":0,"72":0,"74":0,"76":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/ModelResponse.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/ModelResponse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"ModelResponse","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}}},"2":{"name":"create","line":22,"loc":{"start":{"line":22,"column":23},"end":{"line":22,"column":52}}},"3":{"name":"mixin","line":35,"loc":{"start":{"line":35,"column":33},"end":{"line":35,"column":50}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":32},"end":{"line":38,"column":51}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":44},"end":{"line":39,"column":68}}},"6":{"name":"toJSONG","line":74,"loc":{"start":{"line":74,"column":35},"end":{"line":74,"column":54}}},"7":{"name":"progressively","line":135,"loc":{"start":{"line":135,"column":40},"end":{"line":135,"column":65}}},"8":{"name":"subscribe","line":139,"loc":{"start":{"line":139,"column":36},"end":{"line":139,"column":64}}},"9":{"name":"then","line":155,"loc":{"start":{"line":155,"column":31},"end":{"line":155,"column":62}}},"10":{"name":"(anonymous_10)","line":157,"loc":{"start":{"line":157,"column":30},"end":{"line":157,"column":56}}},"11":{"name":"(anonymous_11)","line":160,"loc":{"start":{"line":160,"column":12},"end":{"line":160,"column":29}}},"12":{"name":"(anonymous_12)","line":167,"loc":{"start":{"line":167,"column":12},"end":{"line":167,"column":29}}},"13":{"name":"(anonymous_13)","line":171,"loc":{"start":{"line":171,"column":12},"end":{"line":171,"column":23}}},"14":{"name":"subscribeToResponse","line":180,"loc":{"start":{"line":180,"column":0},"end":{"line":180,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":30}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":67}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":56}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":58}},"8":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":32}},"10":{"start":{"line":22,"column":0},"end":{"line":29,"column":2}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":58}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":25}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":25}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":27}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":20}},"16":{"start":{"line":31,"column":0},"end":{"line":31,"column":62}},"17":{"start":{"line":33,"column":0},"end":{"line":33,"column":52}},"18":{"start":{"line":35,"column":0},"end":{"line":43,"column":2}},"19":{"start":{"line":36,"column":4},"end":{"line":36,"column":20}},"20":{"start":{"line":37,"column":4},"end":{"line":37,"column":39}},"21":{"start":{"line":38,"column":4},"end":{"line":42,"column":7}},"22":{"start":{"line":39,"column":8},"end":{"line":41,"column":22}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":48}},"24":{"start":{"line":74,"column":0},"end":{"line":76,"column":2}},"25":{"start":{"line":75,"column":4},"end":{"line":75,"column":35}},"26":{"start":{"line":135,"column":0},"end":{"line":137,"column":2}},"27":{"start":{"line":136,"column":4},"end":{"line":136,"column":41}},"28":{"start":{"line":139,"column":0},"end":{"line":153,"column":2}},"29":{"start":{"line":140,"column":4},"end":{"line":140,"column":21}},"30":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"31":{"start":{"line":142,"column":8},"end":{"line":142,"column":85}},"32":{"start":{"line":144,"column":4},"end":{"line":144,"column":49}},"33":{"start":{"line":145,"column":4},"end":{"line":152,"column":5}},"34":{"start":{"line":147,"column":12},"end":{"line":147,"column":45}},"35":{"start":{"line":149,"column":12},"end":{"line":149,"column":53}},"36":{"start":{"line":151,"column":12},"end":{"line":151,"column":37}},"37":{"start":{"line":155,"column":0},"end":{"line":178,"column":2}},"38":{"start":{"line":156,"column":4},"end":{"line":156,"column":20}},"39":{"start":{"line":157,"column":4},"end":{"line":177,"column":29}},"40":{"start":{"line":158,"column":8},"end":{"line":158,"column":36}},"41":{"start":{"line":159,"column":8},"end":{"line":176,"column":10}},"42":{"start":{"line":161,"column":16},"end":{"line":165,"column":17}},"43":{"start":{"line":162,"column":20},"end":{"line":162,"column":38}},"44":{"start":{"line":164,"column":20},"end":{"line":164,"column":35}},"45":{"start":{"line":168,"column":16},"end":{"line":168,"column":32}},"46":{"start":{"line":169,"column":16},"end":{"line":169,"column":31}},"47":{"start":{"line":172,"column":16},"end":{"line":174,"column":17}},"48":{"start":{"line":173,"column":20},"end":{"line":173,"column":35}},"49":{"start":{"line":180,"column":0},"end":{"line":197,"column":1}},"50":{"start":{"line":182,"column":4},"end":{"line":182,"column":27}},"51":{"start":{"line":183,"column":4},"end":{"line":183,"column":35}},"52":{"start":{"line":185,"column":4},"end":{"line":185,"column":27}},"53":{"start":{"line":186,"column":4},"end":{"line":186,"column":30}},"54":{"start":{"line":187,"column":4},"end":{"line":187,"column":65}},"55":{"start":{"line":188,"column":4},"end":{"line":188,"column":61}},"56":{"start":{"line":189,"column":4},"end":{"line":189,"column":32}},"57":{"start":{"line":190,"column":4},"end":{"line":190,"column":56}},"58":{"start":{"line":192,"column":4},"end":{"line":196,"column":30}},"59":{"start":{"line":199,"column":0},"end":{"line":199,"column":31}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":9},"end":{"line":3,"column":30}},{"start":{"line":3,"column":34},"end":{"line":3,"column":66}}]},"2":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"3":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":17}},{"start":{"line":141,"column":21},"end":{"line":141,"column":49}}]},"4":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":29},"end":{"line":142,"column":30}},{"start":{"line":142,"column":34},"end":{"line":142,"column":38}}]},"5":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":49},"end":{"line":142,"column":50}},{"start":{"line":142,"column":54},"end":{"line":142,"column":58}}]},"6":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":73},"end":{"line":142,"column":74}},{"start":{"line":142,"column":78},"end":{"line":142,"column":82}}]},"7":{"line":145,"type":"switch","locations":[{"start":{"line":146,"column":8},"end":{"line":147,"column":45}},{"start":{"line":148,"column":8},"end":{"line":149,"column":53}},{"start":{"line":150,"column":8},"end":{"line":151,"column":37}}]},"8":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":19},"end":{"line":149,"column":31}},{"start":{"line":149,"column":35},"end":{"line":149,"column":52}}]},"9":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":16},"end":{"line":161,"column":16}},{"start":{"line":161,"column":16},"end":{"line":161,"column":16}}]},"10":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":16},"end":{"line":172,"column":16}},{"start":{"line":172,"column":16},"end":{"line":172,"column":16}}]},"11":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":28},"end":{"line":187,"column":49}},{"start":{"line":187,"column":53},"end":{"line":187,"column":64}}]},"12":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":29},"end":{"line":188,"column":51}},{"start":{"line":188,"column":55},"end":{"line":188,"column":60}}]},"13":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":30},"end":{"line":190,"column":49}},{"start":{"line":190,"column":53},"end":{"line":190,"column":55}}]}},"code":["var falcor = require(\"./../\");","","var Rx = require(\"rx/dist/rx\") && require(\"rx/dist/rx.aggregates\");","var Observable = Rx.Observable;","","var arraySlice = require(\"./../support/array-slice\");","","var noop = require(\"./../support/noop\");","","var jsongMixin = { outputFormat: { value: \"AsJSONG\" } };","var progressiveMixin = { isProgressive: { value: true } };","","/**"," * A ModelResponse is a container for the results of a get, set, or call operation performed on a Model. The ModelResponse provides methods which can be used to specify the output format of the data retrieved from a Model, as well as how that data is delivered."," * @constructor ModelResponse"," * @augments Observable","*/","function ModelResponse(subscribe) {","    this._subscribe = subscribe;","}","","ModelResponse.create = function create(model, args) {","    var response = new ModelResponse(subscribeToResponse);","    // TODO: make these private","    response.args = args;","    response.type = this;","    response.model = model;","    return response;","};","","ModelResponse.prototype = Object.create(Observable.prototype);","","ModelResponse.prototype.constructor = ModelResponse;","","ModelResponse.prototype._mixin = function mixin() {","    var self = this;","    var mixins = arraySlice(arguments);","    return new self.constructor(function(observer) {","        return self.subscribe(mixins.reduce(function(proto, mixin2) {","            return Object.create(proto, mixin2);","        }, observer));","    });","};","","/**"," * Converts the data format of the data in a JSONGraph Model response to a stream of path values."," * @name toPathValues"," * @memberof ModelResponse.prototype"," * @function"," * @return ModelResponse.<PathValue>"," * @example","var model = new falcor.Model({","  cache: {","    user: {","      name: \"Steve\",","      surname: \"McGuire\"","    }","  }","});","","model.","  get([\"user\",[\"name\", \"surname\"]]).","  toPathValues().","  // this method will be called twice, once with the result of [\"user\", \"name\"]","  // and once with the result of [\"user\", \"surname\"]","  subscribe(function(pathValue){","    console.log(JSON.stringify(pathValue));","  });","// prints...","\"{\\\"path\\\":[\\\"user\\\",\\\"name\\\"],\\\"value\\\":\\\"Steve\\\"}\"","\"{\\\"path\\\":[\\\"user\\\",\\\"surname\\\"],\\\"value\\\":\\\"McGuire\\\"}\""," */","","ModelResponse.prototype._toJSONG = function toJSONG() {","    return this._mixin(jsongMixin);","};","","/**"," * The progressively method breaks the response up into two parts: the data immediately available in the Model cache, and the data in the Model cache after the missing data has been retrieved from the DataSource."," * The progressively method creates a ModelResponse that immediately returns the requested data that is available in the Model cache. If any requested paths are not available in the cache, the ModelResponse will send another JSON message with all of the requested data after it has been retrieved from the DataSource."," * @name progressively"," * @memberof ModelResponse.prototype"," * @function"," * @return {ModelResponse.<JSONEnvelope>} the values found at the requested paths."," * @example","var dataSource = (new falcor.Model({","  cache: {","    user: {","      name: \"Steve\",","      surname: \"McGuire\",","      age: 31","    }","  }","})).asDataSource();","","var model = new falcor.Model({","  source: dataSource,","  cache: {","    user: {","      name: \"Steve\",","      surname: \"McGuire\"","    }","  }","});","","model.","  get([\"user\",[\"name\", \"surname\", \"age\"]]).","  progressively().","  // this callback will be invoked twice, once with the data in the","  // Model cache, and again with the additional data retrieved from the DataSource.","  subscribe(function(json){","    console.log(JSON.stringify(json,null,4));","  });","","// prints...","// {","//     \"json\": {","//         \"user\": {","//             \"name\": \"Steve\",","//             \"surname\": \"McGuire\"","//         }","//     }","// }","// ...and then prints...","// {","//     \"json\": {","//         \"user\": {","//             \"name\": \"Steve\",","//             \"surname\": \"McGuire\",","//             \"age\": 31","//         }","//     }","// }","*/","ModelResponse.prototype.progressively = function progressively() {","    return this._mixin(progressiveMixin);","};","","ModelResponse.prototype.subscribe = function subscribe(a, b, c) {","    var observer = a;","    if (!observer || typeof observer !== \"object\") {","        observer = { onNext: a || noop, onError: b || noop, onCompleted: c || noop };","    }","    var subscription = this._subscribe(observer);","    switch (typeof subscription) {","        case \"function\":","            return { dispose: subscription };","        case \"object\":","            return subscription || { dispose: noop };","        default:","            return { dispose: noop };","    }","};","","ModelResponse.prototype.then = function then(onNext, onError) {","    var self = this;","    return new falcor.Promise(function(resolve, reject) {","        var value, rejected = false;","        self.toArray().subscribe(","            function(values) {","                if (values.length <= 1) {","                    value = values[0];","                } else {","                    value = values;","                }","            },","            function(errors) {","                rejected = true;","                reject(errors);","            },","            function() {","                if (rejected === false) {","                    resolve(value);","                }","            }","        );","    }).then(onNext, onError);","};","","function subscribeToResponse(observer) {","","    var model = this.model;","    var response = new this.type();","","    response.model = model;","    response.args = this.args;","    response.outputFormat = observer.outputFormat || \"AsPathMap\";","    response.isProgressive = observer.isProgressive || false;","    response.subscribeCount = 0;","    response.subscribeLimit = observer.retryLimit || 10;","","    return (response","        .initialize()","        .invokeSourceRequest(model)","        .ensureCollect(model)","        .subscribe(observer));","}","","module.exports = ModelResponse;",""],"l":{"1":1,"3":1,"4":1,"6":1,"8":1,"10":1,"11":1,"18":1,"19":0,"22":1,"23":0,"25":0,"26":0,"27":0,"28":0,"31":1,"33":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"74":1,"75":0,"135":1,"136":0,"139":1,"140":0,"141":0,"142":0,"144":0,"145":0,"147":0,"149":0,"151":0,"155":1,"156":0,"157":0,"158":0,"159":0,"161":0,"162":0,"164":0,"168":0,"169":0,"172":0,"173":0,"180":1,"182":0,"183":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"192":0,"199":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/noop.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/noop.js","s":{"1":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"noop","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}}},"branchMap":{},"code":["module.exports = function noop() {};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/SetResponse.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/SetResponse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":1,"88":0,"89":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"SetResponse","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}}},"2":{"name":"invokeSourceRequest","line":21,"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":80}}},"3":{"name":"setJSONGraph","line":24,"loc":{"start":{"line":24,"column":28},"end":{"line":24,"column":59}}},"4":{"name":"setResponseEnvelope","line":39,"loc":{"start":{"line":39,"column":20},"end":{"line":39,"column":60}}},"5":{"name":"setResponseError","line":42,"loc":{"start":{"line":42,"column":20},"end":{"line":42,"column":48}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":24},"end":{"line":47,"column":47}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":32},"end":{"line":67,"column":51}}},"8":{"name":"subscribeToSetResponse","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":42}}},"9":{"name":"subscribeToLocalSet","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":39}}},"10":{"name":"subscribeToFollowupGet","line":139,"loc":{"start":{"line":139,"column":0},"end":{"line":139,"column":42}}},"11":{"name":"pluckPath","line":150,"loc":{"start":{"line":150,"column":0},"end":{"line":150,"column":30}}},"12":{"name":"pluckEnvelopePaths","line":154,"loc":{"start":{"line":154,"column":0},"end":{"line":154,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":47}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":69}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":67}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":58}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"9":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":71}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":68}},"13":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}},"15":{"start":{"line":21,"column":0},"end":{"line":70,"column":2}},"16":{"start":{"line":23,"column":4},"end":{"line":23,"column":22}},"17":{"start":{"line":24,"column":4},"end":{"line":65,"column":7}},"18":{"start":{"line":26,"column":8},"end":{"line":26,"column":23}},"19":{"start":{"line":27,"column":8},"end":{"line":62,"column":9}},"20":{"start":{"line":29,"column":12},"end":{"line":29,"column":30}},"21":{"start":{"line":30,"column":12},"end":{"line":30,"column":40}},"22":{"start":{"line":31,"column":12},"end":{"line":31,"column":56}},"23":{"start":{"line":33,"column":12},"end":{"line":33,"column":37}},"24":{"start":{"line":34,"column":12},"end":{"line":34,"column":110}},"25":{"start":{"line":35,"column":12},"end":{"line":35,"column":36}},"26":{"start":{"line":36,"column":12},"end":{"line":58,"column":19}},"27":{"start":{"line":40,"column":24},"end":{"line":40,"column":94}},"28":{"start":{"line":43,"column":24},"end":{"line":43,"column":50}},"29":{"start":{"line":48,"column":20},"end":{"line":50,"column":21}},"30":{"start":{"line":49,"column":24},"end":{"line":49,"column":50}},"31":{"start":{"line":51,"column":20},"end":{"line":56,"column":21}},"32":{"start":{"line":52,"column":24},"end":{"line":52,"column":56}},"33":{"start":{"line":53,"column":24},"end":{"line":55,"column":25}},"34":{"start":{"line":54,"column":28},"end":{"line":54,"column":76}},"35":{"start":{"line":57,"column":20},"end":{"line":57,"column":34}},"36":{"start":{"line":61,"column":12},"end":{"line":61,"column":51}},"37":{"start":{"line":64,"column":8},"end":{"line":64,"column":26}},"38":{"start":{"line":67,"column":4},"end":{"line":69,"column":7}},"39":{"start":{"line":68,"column":8},"end":{"line":68,"column":42}},"40":{"start":{"line":72,"column":0},"end":{"line":79,"column":1}},"41":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"42":{"start":{"line":75,"column":8},"end":{"line":75,"column":59}},"43":{"start":{"line":78,"column":4},"end":{"line":78,"column":52}},"44":{"start":{"line":81,"column":0},"end":{"line":137,"column":1}},"45":{"start":{"line":83,"column":4},"end":{"line":86,"column":5}},"46":{"start":{"line":84,"column":8},"end":{"line":84,"column":53}},"47":{"start":{"line":85,"column":8},"end":{"line":85,"column":32}},"48":{"start":{"line":88,"column":4},"end":{"line":88,"column":28}},"49":{"start":{"line":89,"column":4},"end":{"line":89,"column":28}},"50":{"start":{"line":90,"column":4},"end":{"line":90,"column":27}},"51":{"start":{"line":91,"column":4},"end":{"line":91,"column":33}},"52":{"start":{"line":92,"column":4},"end":{"line":92,"column":32}},"53":{"start":{"line":93,"column":4},"end":{"line":93,"column":41}},"54":{"start":{"line":94,"column":4},"end":{"line":94,"column":48}},"55":{"start":{"line":96,"column":4},"end":{"line":96,"column":29}},"56":{"start":{"line":97,"column":4},"end":{"line":97,"column":29}},"57":{"start":{"line":98,"column":4},"end":{"line":98,"column":24}},"58":{"start":{"line":99,"column":4},"end":{"line":99,"column":35}},"59":{"start":{"line":101,"column":4},"end":{"line":123,"column":5}},"60":{"start":{"line":103,"column":8},"end":{"line":103,"column":39}},"61":{"start":{"line":104,"column":8},"end":{"line":104,"column":40}},"62":{"start":{"line":105,"column":8},"end":{"line":105,"column":41}},"63":{"start":{"line":107,"column":8},"end":{"line":122,"column":9}},"64":{"start":{"line":109,"column":12},"end":{"line":109,"column":72}},"65":{"start":{"line":110,"column":12},"end":{"line":110,"column":53}},"66":{"start":{"line":111,"column":12},"end":{"line":111,"column":88}},"67":{"start":{"line":113,"column":12},"end":{"line":113,"column":74}},"68":{"start":{"line":115,"column":12},"end":{"line":121,"column":13}},"69":{"start":{"line":116,"column":16},"end":{"line":116,"column":85}},"70":{"start":{"line":117,"column":19},"end":{"line":121,"column":13}},"71":{"start":{"line":118,"column":16},"end":{"line":118,"column":104}},"72":{"start":{"line":120,"column":16},"end":{"line":120,"column":78}},"73":{"start":{"line":125,"column":4},"end":{"line":125,"column":41}},"74":{"start":{"line":127,"column":4},"end":{"line":136,"column":5}},"75":{"start":{"line":128,"column":8},"end":{"line":128,"column":32}},"76":{"start":{"line":129,"column":8},"end":{"line":129,"column":59}},"77":{"start":{"line":131,"column":8},"end":{"line":135,"column":11}},"78":{"start":{"line":139,"column":0},"end":{"line":148,"column":1}},"79":{"start":{"line":140,"column":4},"end":{"line":140,"column":68}},"80":{"start":{"line":141,"column":4},"end":{"line":143,"column":5}},"81":{"start":{"line":142,"column":8},"end":{"line":142,"column":39}},"82":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"83":{"start":{"line":145,"column":8},"end":{"line":145,"column":44}},"84":{"start":{"line":147,"column":4},"end":{"line":147,"column":40}},"85":{"start":{"line":150,"column":0},"end":{"line":152,"column":1}},"86":{"start":{"line":151,"column":4},"end":{"line":151,"column":26}},"87":{"start":{"line":154,"column":0},"end":{"line":156,"column":1}},"88":{"start":{"line":155,"column":4},"end":{"line":155,"column":35}},"89":{"start":{"line":158,"column":0},"end":{"line":158,"column":29}}},"branchMap":{"1":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":34},"end":{"line":12,"column":43}},{"start":{"line":12,"column":47},"end":{"line":12,"column":69}}]},"2":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"3":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":19}},{"start":{"line":27,"column":23},"end":{"line":27,"column":59}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":20},"end":{"line":48,"column":20}},{"start":{"line":48,"column":20},"end":{"line":48,"column":20}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":20},"end":{"line":51,"column":20}},{"start":{"line":51,"column":20},"end":{"line":51,"column":20}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":24},"end":{"line":53,"column":24}},{"start":{"line":53,"column":24},"end":{"line":53,"column":24}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"9":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":8}},{"start":{"line":107,"column":8},"end":{"line":107,"column":8}}]},"10":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":12}},{"start":{"line":115,"column":12},"end":{"line":115,"column":12}}]},"11":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":19},"end":{"line":117,"column":19}},{"start":{"line":117,"column":19},"end":{"line":117,"column":19}}]},"12":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"13":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":4}},{"start":{"line":141,"column":4},"end":{"line":141,"column":4}}]},"14":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]}},"code":["var Rx = require(\"rx/dist/rx\");","var Observable = Rx.Observable;","var Disposable = Rx.Disposable;","var GetResponse = require(\"./get/GetResponse\");","var IdempotentResponse = require(\"./../response/IdempotentResponse\");","var InvalidSourceError = require(\"./../errors/InvalidSourceError\");","","var arrayFlatMap = require(\"./../support/array-flat-map\");","var emptyArray = new Array(0);","","function SetResponse(subscribe) {","    IdempotentResponse.call(this, subscribe || subscribeToSetResponse);","}","","SetResponse.create = IdempotentResponse.create;","","SetResponse.prototype = Object.create(IdempotentResponse.prototype);","SetResponse.prototype.method = \"set\";","SetResponse.prototype.constructor = SetResponse;","","SetResponse.prototype.invokeSourceRequest = function invokeSourceRequest(model) {","","    var source = this;","    var caught = this.catch(function setJSONGraph(results) {","","        var requestObs;","        if (results && results.invokeSourceRequest === true) {","","            var envelope = {};","            var boundPath = model._path;","            var optimizedPaths = results.optimizedPaths;","","            model._path = emptyArray;","            model._getPathValuesAsJSONG(model._materialize().withoutDataSource(), optimizedPaths, [envelope]);","            model._path = boundPath;","            requestObs = model.","                _request.set(envelope).","                do(","                    function setResponseEnvelope(envelope2) {","                        source.isCompleted = optimizedPaths.length === envelope2.paths.length;","                    },","                    function setResponseError() {","                        source.isCompleted = true;","                    }","                ).","                materialize().","                flatMap(function(notification) {","                    if (notification.kind === \"C\") {","                        return Observable.empty();","                    }","                    if (notification.kind === \"E\") {","                        var ex = notification.exception;","                        if (InvalidSourceError.is(ex)) {","                            return Observable.throw(notification.exception);","                        }","                    }","                    return caught;","                });","        }","        else {","            requestObs = Observable.throw(results);","        }","","        return requestObs;","    });","","    return new this.constructor(function(observer) {","        return caught.subscribe(observer);","    });","};","","function subscribeToSetResponse(observer) {","","    if (this.isCompleted) {","        return subscribeToFollowupGet.call(this, observer);","    }","","    return subscribeToLocalSet.call(this, observer);","}","","function subscribeToLocalSet(observer) {","","    if (this.subscribeCount++ > this.subscribeLimit) {","        observer.onError(\"Loop kill switch thrown.\");","        return Disposable.empty;","    }","","    var requestedPaths = [];","    var optimizedPaths = [];","    var model = this.model;","    var isMaster = this.isMaster;","    var modelRoot = model._root;","    var outputFormat = this.outputFormat;","    var errorSelector = modelRoot.errorSelector;","","    var method = this.method;","    var groups = this.groups;","    var groupIndex = -1;","    var groupCount = groups.length;","","    while (++groupIndex < groupCount) {","","        var group = groups[groupIndex];","        var inputType = group.inputType;","        var methodArgs = group.arguments;","","        if (methodArgs.length > 0) {","","            var operationName = \"_\" + method + inputType + outputFormat;","            var operationFunc = model[operationName];","            var successfulPaths = operationFunc(model, methodArgs, null, errorSelector);","","            optimizedPaths.push.apply(optimizedPaths, successfulPaths[1]);","","            if (inputType === \"PathValues\") {","                requestedPaths.push.apply(requestedPaths, methodArgs.map(pluckPath));","            } else if (inputType === \"JSONGs\") {","                requestedPaths.push.apply(requestedPaths, arrayFlatMap(methodArgs, pluckEnvelopePaths));","            } else {","                requestedPaths.push.apply(requestedPaths, successfulPaths[0]);","            }","        }","    }","","    this.requestedPaths = requestedPaths;","","    if (isMaster) {","        this.isCompleted = true;","        return subscribeToFollowupGet.call(this, observer);","    } else {","        observer.onError({","            method: method,","            optimizedPaths: optimizedPaths,","            invokeSourceRequest: true","        });","    }","}","","function subscribeToFollowupGet(observer) {","    var response = new GetResponse(this.model, this.requestedPaths);","    if (this.outputFormat === \"AsJSONG\") {","        response = response._toJSONG();","    }","    if (this.isProgressive) {","        response = response.progressively();","    }","    return response.subscribe(observer);","}","","function pluckPath(pathValue) {","    return pathValue.path;","}","","function pluckEnvelopePaths(jsonGraphEnvelope) {","    return jsonGraphEnvelope.paths;","}","","module.exports = SetResponse;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"11":1,"12":0,"15":1,"17":1,"18":1,"19":1,"21":1,"23":0,"24":0,"26":0,"27":0,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"40":0,"43":0,"48":0,"49":0,"51":0,"52":0,"53":0,"54":0,"57":0,"61":0,"64":0,"67":0,"68":0,"72":1,"74":0,"75":0,"78":0,"81":1,"83":0,"84":0,"85":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"101":0,"103":0,"104":0,"105":0,"107":0,"109":0,"110":0,"111":0,"113":0,"115":0,"116":0,"117":0,"118":0,"120":0,"125":0,"127":0,"128":0,"129":0,"131":0,"139":1,"140":0,"141":0,"142":0,"144":0,"145":0,"147":0,"150":1,"151":0,"154":1,"155":0,"158":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/GetResponse.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/GetResponse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}},"2":{"name":"GetResponse","line":15,"loc":{"start":{"line":15,"column":35},"end":{"line":17,"column":71}}},"3":{"name":"_toJSONGraph","line":34,"loc":{"start":{"line":34,"column":33},"end":{"line":34,"column":57}}},"4":{"name":"progressively","line":44,"loc":{"start":{"line":44,"column":38},"end":{"line":44,"column":63}}},"5":{"name":"_subscribe","line":55,"loc":{"start":{"line":55,"column":35},"end":{"line":55,"column":65}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":50}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":59}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":51}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"6":{"start":{"line":15,"column":0},"end":{"line":22,"column":2}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":39}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":44}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":48}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":60}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":68}},"13":{"start":{"line":28,"column":0},"end":{"line":28,"column":58}},"14":{"start":{"line":34,"column":0},"end":{"line":37,"column":2}},"15":{"start":{"line":35,"column":4},"end":{"line":36,"column":53}},"16":{"start":{"line":44,"column":0},"end":{"line":47,"column":2}},"17":{"start":{"line":45,"column":4},"end":{"line":46,"column":51}},"18":{"start":{"line":55,"column":0},"end":{"line":72,"column":2}},"19":{"start":{"line":56,"column":4},"end":{"line":56,"column":20}},"20":{"start":{"line":57,"column":4},"end":{"line":57,"column":20}},"21":{"start":{"line":58,"column":4},"end":{"line":58,"column":54}},"22":{"start":{"line":59,"column":4},"end":{"line":59,"column":43}},"23":{"start":{"line":60,"column":4},"end":{"line":62,"column":46}},"24":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"25":{"start":{"line":66,"column":8},"end":{"line":66,"column":21}},"26":{"start":{"line":70,"column":4},"end":{"line":71,"column":54}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":23},"end":{"line":20,"column":34}},{"start":{"line":20,"column":38},"end":{"line":20,"column":43}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":25},"end":{"line":21,"column":38}},{"start":{"line":21,"column":42},"end":{"line":21,"column":47}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]}},"code":["var ModelResponse = require(\"./../ModelResponse\");","var checkCacheAndReport = require(\"./checkCacheAndReport\");","var getRequestCycle = require(\"./getRequestCycle\");","var empty = {dispose: function() {}};","var Observable = require(\"rx/dist/rx\").Observable;","","/**"," * The get response.  It takes in a model and paths and starts"," * the request cycle.  It has been optimized for cache first requests"," * and closures."," * @param {Model} model -"," * @param {Array} paths -"," * @private"," */","var GetResponse = module.exports = function GetResponse(model, paths,","                                                        isJSONGraph,","                                                        isProgressive) {","    this.model = model;","    this.currentRemainingPaths = paths;","    this.isJSONGraph = isJSONGraph || false;","    this.isProgressive = isProgressive || false;","};","","GetResponse.prototype = Object.create(Observable.prototype);","","// becomes a subscribable/thenable from ModelResponse.","GetResponse.prototype.subscribe = ModelResponse.prototype.subscribe;","GetResponse.prototype.then = ModelResponse.prototype.then;","","/**"," * Makes the output of a get response JSONGraph instead of json."," * @private"," */","GetResponse.prototype._toJSONG = function _toJSONGraph() {","    return new GetResponse(this.model, this.currentRemainingPaths,","                           true, this.isProgressive);","};","","/**"," * Progressively responding to data in the cache instead of once the whole"," * operation is complete."," * @public"," */","GetResponse.prototype.progressively = function progressively() {","    return new GetResponse(this.model, this.currentRemainingPaths,","                           this.isJSONGraph, true);","};","","/**"," * purely for the purposes of closure creation other than the initial"," * prototype created closure."," *"," * @private"," */","GetResponse.prototype._subscribe = function _subscribe(observer) {","    var seed = [{}];","    var errors = [];","    var isJSONG = observer.isJSONG = this.isJSONGraph;","    var isProgressive = this.isProgressive;","    var results = checkCacheAndReport(this.model, this.currentRemainingPaths,","                                      observer, isProgressive, isJSONG, seed,","                                      errors);","","    // If there are no results, finish.","    if (!results) {","        return empty;","    }","","    // Starts the async request cycle.","    return getRequestCycle(this, this.model, results,","                           observer, seed, errors, 1);","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"15":1,"18":0,"19":0,"20":0,"21":0,"24":1,"27":1,"28":1,"34":1,"35":0,"44":1,"45":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"65":0,"66":0,"70":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/checkCacheAndReport.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/checkCacheAndReport.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"checkCacheAndReport","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":21,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":34}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":59}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"4":{"start":{"line":19,"column":0},"end":{"line":81,"column":2}},"5":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}},"6":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":71}},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":69}},"9":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"10":{"start":{"line":35,"column":8},"end":{"line":35,"column":48}},"11":{"start":{"line":36,"column":8},"end":{"line":36,"column":20}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":37}},"13":{"start":{"line":42,"column":4},"end":{"line":42,"column":69}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":60}},"15":{"start":{"line":46,"column":4},"end":{"line":52,"column":5}},"16":{"start":{"line":47,"column":8},"end":{"line":47,"column":34}},"17":{"start":{"line":48,"column":8},"end":{"line":48,"column":41}},"18":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"19":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}},"20":{"start":{"line":56,"column":4},"end":{"line":66,"column":5}},"21":{"start":{"line":58,"column":8},"end":{"line":65,"column":9}},"22":{"start":{"line":59,"column":12},"end":{"line":59,"column":39}},"23":{"start":{"line":60,"column":12},"end":{"line":60,"column":37}},"24":{"start":{"line":62,"column":12},"end":{"line":62,"column":20}},"25":{"start":{"line":64,"column":12},"end":{"line":64,"column":39}},"26":{"start":{"line":69,"column":4},"end":{"line":77,"column":5}},"27":{"start":{"line":70,"column":8},"end":{"line":74,"column":9}},"28":{"start":{"line":71,"column":12},"end":{"line":71,"column":37}},"29":{"start":{"line":73,"column":12},"end":{"line":73,"column":35}},"30":{"start":{"line":76,"column":8},"end":{"line":76,"column":20}},"31":{"start":{"line":80,"column":4},"end":{"line":80,"column":19}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":20},"end":{"line":42,"column":50}},{"start":{"line":42,"column":54},"end":{"line":42,"column":68}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":26},"end":{"line":43,"column":38}},{"start":{"line":43,"column":42},"end":{"line":43,"column":59}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"7":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":8},"end":{"line":56,"column":17}},{"start":{"line":56,"column":21},"end":{"line":56,"column":32}},{"start":{"line":56,"column":36},"end":{"line":56,"column":51}},{"start":{"line":56,"column":55},"end":{"line":56,"column":64}}]},"8":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"9":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]}},"code":["var gets = require(\"./../../get\");","var getWithPathsAsJSONGraph = gets.getWithPathsAsJSONGraph;","var getWithPathsAsPathMap = gets.getWithPathsAsPathMap;","","/**"," * Checks cache for the paths and reports if in progressive mode.  If"," * there are missing paths then return the cache hit results."," *"," * @param {Model} model - The model that the request was made with."," * @param {Array} requestedMissingPaths -"," * @param {Boolean} progressive -"," * @param {Boolean} isJSONG -"," * @param {Function} onNext -"," * @param {Function} onError -"," * @param {Function} onCompleted -"," * @param {Object} seed - The state of the output"," * @private"," */","module.exports = function checkCacheAndReport(model, requestedPaths, observer,","                                              progressive, isJSONG, seed,","                                              errors) {","","    // checks the cache for the data.","    var results;","    if (isJSONG) {","        results = getWithPathsAsJSONGraph(model, requestedPaths, seed);","    } else {","        results = getWithPathsAsPathMap(model, requestedPaths, seed);","    }","","    // We must communicate critical errors from get that are critical","    // errors such as bound path is broken or this is a JSONGraph request","    // with a bound path.","    if (results.criticalError) {","        observer.onError(results.criticalError);","        return null;","    }","","    // We are done when there are no missing paths or the model does not","    // have a dataSource to continue on fetching from.","    var hasValues = results.hasValue;","    var completed = !results.requestedMissingPaths || !model._source;","    var hasValueOverall = seed[0].json || seed[0].jsonGraph;","","    // Copy the errors into the total errors array.","    if (results.errors) {","        var errs = results.errors;","        var errorsLength = errors.length;","        for (var i = 0, len = errs.length; i < len; ++i, ++errorsLength) {","            errors[errorsLength] = errs[i];","        }","    }","","    // If there are values to report, then report.","","    if (hasValues && progressive || hasValueOverall && completed) {","        // TODO: Remove the sync counter","        try {","            ++model._root.syncRefCount;","            observer.onNext(seed[0]);","        } catch(e) {","            throw e;","        } finally {","            --model._root.syncRefCount;","        }","    }","","    // if there are missing paths, then lets return them.","    if (completed) {","        if (errors.length) {","            observer.onError(errors);","        } else {","            observer.onCompleted();","        }","","        return null;","    }","","    // Return the results object.","    return results;","};",""],"l":{"1":1,"2":1,"3":1,"19":1,"24":0,"25":0,"26":0,"28":0,"34":0,"35":0,"36":0,"41":0,"42":0,"43":0,"46":0,"47":0,"48":0,"49":0,"50":0,"56":0,"58":0,"59":0,"60":0,"62":0,"64":0,"69":0,"70":0,"71":0,"73":0,"76":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":49}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"5":{"start":{"line":7,"column":0},"end":{"line":12,"column":2}}},"branchMap":{},"code":["var get = require(\"./get\");","var walkPath = require(\"./walkPath\");","","var getWithPathsAsPathMap = get(walkPath, false);","var getWithPathsAsJSONGraph = get(walkPath, true);","","module.exports = {","    getValueSync: require(\"./../get/getValueSync\"),","    getBoundValue: require(\"./../get/getBoundValue\"),","    getWithPathsAsPathMap: getWithPathsAsPathMap,","    getWithPathsAsJSONGraph: getWithPathsAsJSONGraph","};",""],"l":{"1":1,"2":1,"4":1,"5":1,"7":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/get.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/get.js","s":{"1":1,"2":1,"3":1,"4":1,"5":2,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":2,"2":0},"fnMap":{"1":{"name":"get","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":45}}},"2":{"name":"innerGet","line":6,"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":60}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":65}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":79}},"4":{"start":{"line":5,"column":0},"end":{"line":60,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":59,"column":6}},"6":{"start":{"line":7,"column":8},"end":{"line":7,"column":32}},"7":{"start":{"line":8,"column":8},"end":{"line":11,"column":10}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":38}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":36}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":41}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":62}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":19}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"14":{"start":{"line":20,"column":8},"end":{"line":51,"column":9}},"15":{"start":{"line":24,"column":12},"end":{"line":28,"column":13}},"16":{"start":{"line":25,"column":16},"end":{"line":27,"column":18}},"17":{"start":{"line":29,"column":12},"end":{"line":29,"column":70}},"18":{"start":{"line":33,"column":12},"end":{"line":37,"column":13}},"19":{"start":{"line":34,"column":16},"end":{"line":36,"column":18}},"20":{"start":{"line":41,"column":12},"end":{"line":41,"column":31}},"21":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"22":{"start":{"line":43,"column":16},"end":{"line":43,"column":48}},"23":{"start":{"line":49,"column":12},"end":{"line":49,"column":31}},"24":{"start":{"line":50,"column":12},"end":{"line":50,"column":32}},"25":{"start":{"line":53,"column":8},"end":{"line":57,"column":9}},"26":{"start":{"line":54,"column":12},"end":{"line":56,"column":43}},"27":{"start":{"line":58,"column":8},"end":{"line":58,"column":23}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":12}},{"start":{"line":24,"column":12},"end":{"line":24,"column":12}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":12}},{"start":{"line":33,"column":12},"end":{"line":33,"column":12}}]}},"code":["var getCachePosition = require(\"./../get/getCachePosition\");","var InvalidModelError = require(\"./../errors/InvalidModelError\");","var BoundJSONGraphModelError = require(\"./../errors/BoundJSONGraphModelError\");","","module.exports = function get(walk, isJSONG) {","    return function innerGet(model, paths, seed) {","        var valueNode = seed[0];","        var results = {","            values: seed,","            optimizedPaths: []","        };","        var cache = model._root.cache;","        var boundPath = model._path;","        var currentCachePosition = cache;","        var optimizedPath, optimizedLength = boundPath.length;","        var i, len;","        var requestedPath = [];","","        // If the model is bound, then get that cache position.","        if (optimizedLength) {","","            // JSONGraph output cannot ever be bound or else it will","            // throw an error.","            if (isJSONG) {","                return {","                    criticalError: new BoundJSONGraphModelError()","                };","            }","            currentCachePosition = getCachePosition(model, boundPath);","","            // If there was a short, then we 'throw an error' to the outside","            // calling function which will onError the observer.","            if (currentCachePosition.$type) {","                return {","                    criticalError: new InvalidModelError(boundPath, boundPath)","                };","            }","","            // We need to get the new cache position and copy the bound","            // path.","            optimizedPath = [];","            for (i = 0; i < optimizedLength; ++i) {","                optimizedPath[i] = boundPath[i];","            }","        }","","        // Update the optimized path if we","        else {","            optimizedPath = [];","            optimizedLength = 0;","        }","","        for (i = 0, len = paths.length; i < len; i++) {","            walk(model, cache, currentCachePosition, paths[i], 0,","                 valueNode, results, requestedPath, optimizedPath,","                 optimizedLength, isJSONG);","        }","        return results;","    };","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":2,"7":0,"8":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"20":0,"24":0,"25":0,"29":0,"33":0,"34":0,"41":0,"42":0,"43":0,"49":0,"50":0,"53":0,"54":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getCachePosition.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getCachePosition.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"1":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getCachePosition","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":56}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":24,"column":2}},"2":{"start":{"line":11,"column":4},"end":{"line":11,"column":49}},"3":{"start":{"line":12,"column":4},"end":{"line":12,"column":19}},"4":{"start":{"line":13,"column":4},"end":{"line":13,"column":31}},"5":{"start":{"line":17,"column":4},"end":{"line":21,"column":5}},"6":{"start":{"line":20,"column":8},"end":{"line":20,"column":65}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":32}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":11},"end":{"line":17,"column":29}},{"start":{"line":18,"column":11},"end":{"line":18,"column":31}},{"start":{"line":18,"column":35},"end":{"line":18,"column":62}}]}},"code":["/**"," * getCachePosition makes a fast walk to the bound value since all bound"," * paths are the most possible optimized path."," *"," * @param {Model} model -"," * @param {Array} path -"," * @returns {Mixed} - undefined if there is nothing in this position."," * @private"," */","module.exports = function getCachePosition(model, path) {","    var currentCachePosition = model._root.cache;","    var depth = -1;","    var maxDepth = path.length;","","    // The loop is simple now, we follow the current cache position until","    //","    while (++depth < maxDepth &&","           currentCachePosition && !currentCachePosition.$type) {","","        currentCachePosition = currentCachePosition[path[depth]];","    }","","    return currentCachePosition;","};",""],"l":{"10":1,"11":0,"12":0,"13":0,"17":0,"20":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/errors/BoundJSONGraphModelError.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/errors/BoundJSONGraphModelError.js","s":{"1":1,"2":0,"3":0,"4":1,"5":1,"6":1,"7":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"BoundJSONGraphModelError","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":10,"column":1}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":52}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":37}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":69}},"6":{"start":{"line":15,"column":0},"end":{"line":18,"column":43}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":42}}},"branchMap":{},"code":["/**"," * When a bound model attempts to retrieve JSONGraph it should throw an"," * error."," *"," * @private"," */","function BoundJSONGraphModelError() {","    this.message = BoundJSONGraphModelError.message;","    this.stack = (new Error()).stack;","}","","// instanceof will be an error, but stack will be correct because its defined in the constructor.","BoundJSONGraphModelError.prototype = new Error();","BoundJSONGraphModelError.prototype.name = \"BoundJSONGraphModelError\";","BoundJSONGraphModelError.message =","    \"It is not legal to use the JSON Graph \" +","    \"format from a bound Model. JSON Graph format\" +","    \" can only be used from a root model.\";","","module.exports = BoundJSONGraphModelError;",""],"l":{"7":1,"8":0,"9":0,"13":1,"14":1,"15":1,"20":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/walkPath.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/walkPath.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"walkPath","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":11,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":51}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":44}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":63}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":44}},"7":{"start":{"line":8,"column":0},"end":{"line":106,"column":2}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":41}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":41}},"10":{"start":{"line":18,"column":4},"end":{"line":23,"column":5}},"11":{"start":{"line":19,"column":8},"end":{"line":21,"column":40}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":15}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":18}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":25}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":46}},"16":{"start":{"line":29,"column":4},"end":{"line":29,"column":30}},"17":{"start":{"line":30,"column":4},"end":{"line":30,"column":29}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":21}},"19":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"20":{"start":{"line":33,"column":8},"end":{"line":33,"column":26}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":50}},"22":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"23":{"start":{"line":40,"column":8},"end":{"line":40,"column":15}},"24":{"start":{"line":44,"column":4},"end":{"line":44,"column":51}},"25":{"start":{"line":45,"column":4},"end":{"line":105,"column":49}},"26":{"start":{"line":46,"column":8},"end":{"line":46,"column":30}},"27":{"start":{"line":48,"column":8},"end":{"line":48,"column":17}},"28":{"start":{"line":50,"column":8},"end":{"line":57,"column":9}},"29":{"start":{"line":51,"column":12},"end":{"line":51,"column":24}},"30":{"start":{"line":54,"column":12},"end":{"line":54,"column":29}},"31":{"start":{"line":55,"column":12},"end":{"line":55,"column":49}},"32":{"start":{"line":56,"column":12},"end":{"line":56,"column":39}},"33":{"start":{"line":59,"column":8},"end":{"line":59,"column":46}},"34":{"start":{"line":60,"column":8},"end":{"line":60,"column":55}},"35":{"start":{"line":63,"column":8},"end":{"line":93,"column":9}},"36":{"start":{"line":64,"column":12},"end":{"line":64,"column":35}},"37":{"start":{"line":65,"column":12},"end":{"line":65,"column":52}},"38":{"start":{"line":71,"column":12},"end":{"line":92,"column":13}},"39":{"start":{"line":73,"column":16},"end":{"line":77,"column":17}},"40":{"start":{"line":74,"column":20},"end":{"line":76,"column":77}},"41":{"start":{"line":81,"column":16},"end":{"line":81,"column":37}},"42":{"start":{"line":82,"column":16},"end":{"line":83,"column":64}},"43":{"start":{"line":84,"column":16},"end":{"line":84,"column":37}},"44":{"start":{"line":85,"column":16},"end":{"line":85,"column":30}},"45":{"start":{"line":86,"column":16},"end":{"line":86,"column":37}},"46":{"start":{"line":87,"column":16},"end":{"line":87,"column":39}},"47":{"start":{"line":88,"column":16},"end":{"line":88,"column":53}},"48":{"start":{"line":89,"column":16},"end":{"line":91,"column":17}},"49":{"start":{"line":90,"column":20},"end":{"line":90,"column":54}},"50":{"start":{"line":96,"column":8},"end":{"line":98,"column":40}},"51":{"start":{"line":101,"column":8},"end":{"line":103,"column":9}},"52":{"start":{"line":102,"column":12},"end":{"line":102,"column":54}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":9},"end":{"line":18,"column":14}},{"start":{"line":18,"column":18},"end":{"line":18,"column":22}},{"start":{"line":18,"column":26},"end":{"line":18,"column":36}},{"start":{"line":18,"column":41},"end":{"line":18,"column":62}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"5":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},{"start":{"line":39,"column":29},"end":{"line":39,"column":46}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]},"8":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":24},"end":{"line":65,"column":29}},{"start":{"line":65,"column":33},"end":{"line":65,"column":43}},{"start":{"line":65,"column":47},"end":{"line":65,"column":51}}]},"9":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"10":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":16},"end":{"line":71,"column":39}},{"start":{"line":71,"column":43},"end":{"line":71,"column":48}},{"start":{"line":72,"column":16},"end":{"line":72,"column":30}},{"start":{"line":72,"column":34},"end":{"line":72,"column":50}}]},"11":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":16},"end":{"line":73,"column":16}},{"start":{"line":73,"column":16},"end":{"line":73,"column":16}}]},"12":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"13":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":24}},{"start":{"line":101,"column":28},"end":{"line":101,"column":46}}]},"14":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":13},"end":{"line":105,"column":25}},{"start":{"line":105,"column":29},"end":{"line":105,"column":47}}]}},"code":["var followReference = require(\"./followReference\");","var onValueType = require(\"./onValueType\");","var isExpired = require(\"./util/isExpired\");","var iterateKeySet = require(\"falcor-path-utils\").iterateKeySet;","var $ref = require(\"./../types/ref\");","var promote = require(\"./util/lru\").promote;","","module.exports = function walkPath(model, root, curr, path, depth, seed,","                                   outerResults, requestedPath,","                                   optimizedPathArg, optimizedLength, isJSONG,","                                   fromReferenceArg) {","","    var fromReference = fromReferenceArg;","    var optimizedPath = optimizedPathArg;","","    // If there is not a value in the current cache position or its a","    // value type, then we are at the end of the getWalk.","    if ((!curr || curr && curr.$type) || depth === path.length) {","        onValueType(model, curr, path, depth, seed, outerResults,","                requestedPath, optimizedPath, optimizedLength,","                isJSONG, fromReference);","        return;","    }","","    var keySet, i;","    keySet = path[depth];","","    var isKeySet = typeof keySet === \"object\";","    var nextDepth = depth + 1;","    var iteratorNote = false;","    var key = keySet;","    if (isKeySet) {","        iteratorNote = {};","        key = iterateKeySet(keySet, iteratorNote);","    }","","    // The key can be undefined if there is an empty path.  An example of an","    // empty path is: [lolomo, [], summary]","    if (key === undefined && iteratorNote.done) {","        return;","    }","","    // loop over every key over the keySet","    var optimizedLengthPlus1 = optimizedLength + 1;","    do {","        fromReference = false;","","        var next;","","        if (key === null) {","            next = curr;","        }","        else {","            next = curr[key];","            optimizedPath[optimizedLength] = key;","            requestedPath[depth] = key;","        }","","        var nextOptimizedPath = optimizedPath;","        var nextOptimizedLength = optimizedLengthPlus1;","","        // If there is the next position we need to consider references.","        if (next) {","            var nType = next.$type;","            var value = nType && next.value || next;","","            // If next is a reference follow it.  If we are in JSONG mode,","            // report that value into the seed without passing the requested","            // path.  If a requested path is passed to onValueType then it","            // will add that path to the JSONGraph envelope under `paths`","            if (nextDepth < path.length && nType &&","                nType === $ref && !isExpired(next)) {","                if (isJSONG) {","                    onValueType(model, next, path, nextDepth, seed,","                                outerResults, null, optimizedPath,","                                nextOptimizedLength, isJSONG, fromReference);","                }","","                // promote the reference so that it will not be cleaned out of","                // the cache when its heavily used.","                promote(model, next);","                var ref = followReference(model, root, root, next,","                                          value, seed, isJSONG);","                fromReference = true;","                next = ref[0];","                var refPath = ref[1];","                nextOptimizedPath = [];","                nextOptimizedLength = refPath.length;","                for (i = 0; i < nextOptimizedLength; ++i) {","                    nextOptimizedPath[i] = refPath[i];","                }","            }","        }","","        // Recurse to the next level.","        walkPath(model, root, next, path, nextDepth, seed, outerResults,","                requestedPath, nextOptimizedPath, nextOptimizedLength,","                isJSONG, fromReference);","","        // If the iteratorNote is not done, get the next key.","        if (iteratorNote && !iteratorNote.done) {","            key = iterateKeySet(keySet, iteratorNote);","        }","","    } while (iteratorNote && !iteratorNote.done);","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"13":0,"14":0,"18":0,"19":0,"22":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"39":0,"40":0,"44":0,"45":0,"46":0,"48":0,"50":0,"51":0,"54":0,"55":0,"56":0,"59":0,"60":0,"63":0,"64":0,"65":0,"71":0,"73":0,"74":0,"81":0,"82":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"96":0,"101":0,"102":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/onValueType.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/onValueType.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"onValueType","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":21,"column":75}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":42}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":24}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"10":{"start":{"line":10,"column":0},"end":{"line":10,"column":53}},"11":{"start":{"line":11,"column":0},"end":{"line":11,"column":57}},"12":{"start":{"line":19,"column":0},"end":{"line":78,"column":2}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":38}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":72}},"15":{"start":{"line":28,"column":4},"end":{"line":77,"column":5}},"16":{"start":{"line":29,"column":8},"end":{"line":37,"column":9}},"17":{"start":{"line":30,"column":12},"end":{"line":32,"column":44}},"18":{"start":{"line":34,"column":12},"end":{"line":36,"column":54}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":15}},"20":{"start":{"line":42,"column":9},"end":{"line":77,"column":5}},"21":{"start":{"line":43,"column":8},"end":{"line":46,"column":9}},"22":{"start":{"line":44,"column":12},"end":{"line":44,"column":32}},"23":{"start":{"line":45,"column":12},"end":{"line":45,"column":33}},"24":{"start":{"line":47,"column":8},"end":{"line":49,"column":50}},"25":{"start":{"line":53,"column":9},"end":{"line":77,"column":5}},"26":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"27":{"start":{"line":55,"column":12},"end":{"line":55,"column":40}},"28":{"start":{"line":57,"column":8},"end":{"line":62,"column":9}},"29":{"start":{"line":58,"column":12},"end":{"line":59,"column":76}},"30":{"start":{"line":61,"column":12},"end":{"line":61,"column":69}},"31":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"32":{"start":{"line":68,"column":12},"end":{"line":68,"column":40}},"33":{"start":{"line":71,"column":8},"end":{"line":76,"column":9}},"34":{"start":{"line":74,"column":12},"end":{"line":75,"column":76}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":19},"end":{"line":23,"column":23}},{"start":{"line":23,"column":27},"end":{"line":23,"column":37}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":39},"end":{"line":24,"column":43}},{"start":{"line":24,"column":47},"end":{"line":24,"column":71}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"4":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":13}},{"start":{"line":28,"column":17},"end":{"line":28,"column":26}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":9},"end":{"line":42,"column":9}},{"start":{"line":42,"column":9},"end":{"line":42,"column":9}}]},"7":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":9},"end":{"line":53,"column":9}},{"start":{"line":53,"column":9},"end":{"line":53,"column":9}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"10":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"11":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":19}},{"start":{"line":57,"column":23},"end":{"line":57,"column":49}}]},"12":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":8}},{"start":{"line":67,"column":8},"end":{"line":67,"column":8}}]},"13":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"14":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":41}},{"start":{"line":72,"column":12},"end":{"line":72,"column":40}},{"start":{"line":72,"column":44},"end":{"line":72,"column":63}}]}},"code":["var isExpired = require(\"./util/isExpired\");","var hardLink = require(\"./util/hardlink\");","var lru = require(\"./util/lru\");","var removeHardlink = hardLink.remove;","var splice = lru.splice;","var $error = require(\"./../types/error\");","var onError = require(\"./onError\");","var onValue = require(\"./onValue\");","var onMissing = require(\"./onMissing\");","var isMaterialized = require(\"./util/isMaterialzed\");","var __invalidated = require(\"./../internal/invalidated\");","","/**"," * When we land on a valueType (or nothing) then we need to report it out to"," * the outerResults through errors, missing, or values."," *"," * @private"," */","module.exports = function onValueType(","    model, node, path, depth, seed, outerResults,","    requestedPath, optimizedPath, optimizedLength, isJSONG, fromReference) {","","    var currType = node && node.$type;","    var requiresMaterializedToReport = node && node.value === undefined;","","    // There are is nothing here, ether report value, or report the value","    // that is missing.  If there is no type then report the missing value.","    if (!node || !currType) {","        if (isMaterialized(model)) {","            onValue(model, node, seed, depth, outerResults,","                    requestedPath, optimizedPath, optimizedLength,","                    isJSONG, fromReference);","        } else {","            onMissing(model, path, depth,","                      outerResults, requestedPath,","                      optimizedPath, optimizedLength);","        }","        return;","    }","","    // If there are expired value, then report it as missing","    else if (isExpired(node)) {","        if (!node[__invalidated]) {","            splice(model, node);","            removeHardlink(node);","        }","        onMissing(model, path, depth,","                  outerResults, requestedPath,","                  optimizedPath, optimizedLength);","    }","","    // If there is an error, then report it as a value if","    else if (currType === $error) {","        if (fromReference) {","            requestedPath[depth] = null;","        }","        if (isJSONG || model._treatErrorsAsValues) {","            onValue(model, node, seed, depth, outerResults, requestedPath,","                    optimizedPath, optimizedLength, isJSONG, fromReference);","        } else {","            onError(model, node, depth, requestedPath, outerResults);","        }","    }","","    // Report the value","    else {","        if (fromReference) {","            requestedPath[depth] = null;","        }","","        if (!requiresMaterializedToReport ||","            requiresMaterializedToReport && model._materialized) {","","            onValue(model, node, seed, depth, outerResults, requestedPath,","                    optimizedPath, optimizedLength, isJSONG, fromReference);","        }","    }","};","",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"19":1,"23":0,"24":0,"28":0,"29":0,"30":0,"34":0,"38":0,"42":0,"43":0,"44":0,"45":0,"47":0,"53":0,"54":0,"55":0,"57":0,"58":0,"61":0,"67":0,"68":0,"71":0,"74":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/onError.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/onError.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"onError","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":6,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"4":{"start":{"line":5,"column":0},"end":{"line":20,"column":2}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":27}},"6":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":33}},"8":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":28}},"10":{"start":{"line":15,"column":4},"end":{"line":18,"column":7}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":25}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]}},"code":["var lru = require(\"./../get/util/lru\");","var clone = require(\"./../get/util/clone\");","var promote = lru.promote;","","module.exports = function onError(model, node, depth,","                                  requestedPath, outerResults) {","    var value = node.value;","    if (!outerResults.errors) {","        outerResults.errors = [];","    }","","    if (model._boxed) {","        value = clone(node);","    }","    outerResults.errors.push({","        path: requestedPath.slice(0, depth + 1),","        value: value","    });","    promote(model, node);","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"7":0,"8":0,"9":0,"12":0,"13":0,"15":0,"19":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/onMissing.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/onMissing.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"onMissing","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":6,"column":68}}},"2":{"name":"concatAndInsertMissing","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":24,"column":73}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":40}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":32}},"3":{"start":{"line":4,"column":0},"end":{"line":21,"column":2}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"5":{"start":{"line":8,"column":4},"end":{"line":11,"column":5}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":48}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":48}},"8":{"start":{"line":13,"column":4},"end":{"line":17,"column":5}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":42}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":23}},"11":{"start":{"line":19,"column":4},"end":{"line":20,"column":73}},"12":{"start":{"line":23,"column":0},"end":{"line":34,"column":1}},"13":{"start":{"line":27,"column":4},"end":{"line":30,"column":35}},"14":{"start":{"line":32,"column":4},"end":{"line":33,"column":71}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"2":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":13,"column":4}},{"start":{"line":13,"column":4},"end":{"line":13,"column":4}}]}},"code":["var support = require(\"./util/support\");","var fastCopy = support.fastCopy;","","module.exports = function onMissing(model, path, depth,","                                    outerResults, requestedPath,","                                    optimizedPath, optimizedLength) {","    var pathSlice;","    if (!outerResults.requestedMissingPaths) {","        outerResults.requestedMissingPaths = [];","        outerResults.optimizedMissingPaths = [];","    }","","    if (depth < path.length) {","        pathSlice = fastCopy(path, depth);","    } else {","        pathSlice = [];","    }","","    concatAndInsertMissing(model, pathSlice, depth, requestedPath,","                           optimizedPath, optimizedLength, outerResults);","};","","function concatAndInsertMissing(model, remainingPath, depth, requestedPath,","                                optimizedPath, optimizedLength, results) {","","    // TODO: Performance.","    results.requestedMissingPaths.push(","        requestedPath.","            slice(0, depth).","            concat(remainingPath));","","    results.optimizedMissingPaths.push(","        optimizedPath.slice(0, optimizedLength).concat(remainingPath));","}",""],"l":{"1":1,"2":1,"4":1,"7":0,"8":0,"9":0,"10":0,"13":0,"14":0,"16":0,"19":0,"23":1,"27":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/support.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/support.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"fastCopy","line":1,"loc":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}}},"2":{"name":"fastCatSkipNulls","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":38}}},"3":{"name":"fastCat","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":1}},"2":{"start":{"line":2,"column":4},"end":{"line":2,"column":26}},"3":{"start":{"line":3,"column":4},"end":{"line":5,"column":5}},"4":{"start":{"line":4,"column":8},"end":{"line":4,"column":22}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":13}},"6":{"start":{"line":9,"column":0},"end":{"line":20,"column":1}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":26}},"8":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":23}},"10":{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},"11":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"12":{"start":{"line":16,"column":12},"end":{"line":16,"column":29}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":13}},"14":{"start":{"line":22,"column":0},"end":{"line":31,"column":1}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":26}},"16":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"17":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"18":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"19":{"start":{"line":28,"column":8},"end":{"line":28,"column":25}},"20":{"start":{"line":30,"column":4},"end":{"line":30,"column":13}},"21":{"start":{"line":35,"column":0},"end":{"line":39,"column":2}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":8}},{"start":{"line":15,"column":8},"end":{"line":15,"column":8}}]}},"code":["function fastCopy(arr, iArg) {","    var a = [], len, j, i;","    for (j = 0, i = iArg || 0, len = arr.length; i < len; j++, i++) {","        a[j] = arr[i];","    }","    return a;","}","","function fastCatSkipNulls(arr1, arr2) {","    var a = [], i, len, j;","    for (i = 0, len = arr1.length; i < len; i++) {","        a[i] = arr1[i];","    }","    for (j = 0, len = arr2.length; j < len; j++) {","        if (arr2[j] !== null) {","            a[i++] = arr2[j];","        }","    }","    return a;","}","","function fastCat(arr1, arr2) {","    var a = [], i, len, j;","    for (i = 0, len = arr1.length; i < len; i++) {","        a[i] = arr1[i];","    }","    for (j = 0, len = arr2.length; j < len; j++) {","        a[i++] = arr2[j];","    }","    return a;","}","","","","module.exports = {","    fastCat: fastCat,","    fastCatSkipNulls: fastCatSkipNulls,","    fastCopy: fastCopy","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"6":0,"9":1,"10":0,"11":0,"12":0,"14":0,"15":0,"16":0,"19":0,"22":1,"23":0,"24":0,"25":0,"27":0,"28":0,"30":0,"35":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/isMaterialzed.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/util/isMaterialzed.js","s":{"1":1,"2":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isMaterialized","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":4},"end":{"line":2,"column":49}}},"branchMap":{"1":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":11},"end":{"line":2,"column":30}},{"start":{"line":2,"column":34},"end":{"line":2,"column":48}}]}},"code":["module.exports = function isMaterialized(model) {","    return model._materialized && !model._source;","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/getRequestCycle.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/getRequestCycle.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"getRequestCycle","line":23,"loc":{"start":{"line":23,"column":17},"end":{"line":24,"column":63}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":63},"end":{"line":52,"column":74}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":59}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":76}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":58}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":48}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":61}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"8":{"start":{"line":23,"column":0},"end":{"line":88,"column":2}},"9":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"10":{"start":{"line":27,"column":8},"end":{"line":27,"column":42}},"11":{"start":{"line":30,"column":4},"end":{"line":30,"column":38}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":62}},"13":{"start":{"line":32,"column":4},"end":{"line":32,"column":62}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":48}},"15":{"start":{"line":37,"column":4},"end":{"line":37,"column":40}},"16":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"17":{"start":{"line":39,"column":4},"end":{"line":49,"column":5}},"18":{"start":{"line":40,"column":8},"end":{"line":43,"column":9}},"19":{"start":{"line":41,"column":12},"end":{"line":42,"column":61}},"20":{"start":{"line":48,"column":8},"end":{"line":48,"column":59}},"21":{"start":{"line":51,"column":4},"end":{"line":85,"column":11}},"22":{"start":{"line":57,"column":12},"end":{"line":61,"column":64}},"23":{"start":{"line":65,"column":12},"end":{"line":83,"column":13}},"24":{"start":{"line":68,"column":16},"end":{"line":70,"column":61}},"25":{"start":{"line":77,"column":16},"end":{"line":77,"column":44}},"26":{"start":{"line":78,"column":16},"end":{"line":78,"column":49}},"27":{"start":{"line":79,"column":16},"end":{"line":79,"column":59}},"28":{"start":{"line":81,"column":16},"end":{"line":82,"column":77}},"29":{"start":{"line":86,"column":4},"end":{"line":86,"column":60}},"30":{"start":{"line":87,"column":4},"end":{"line":87,"column":22}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"3":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]}},"code":["var checkCacheAndReport = require(\"./checkCacheAndReport\");","var MaxRetryExceededError = require(\"./../../errors/MaxRetryExceededError\");","var fastCat = require(\"./../../get/util/support\").fastCat;","var collectLru = require(\"./../../lru/collect\");","var getSize = require(\"./../../support/getSize\");","var AssignableDisposable = require(\"./AssignableDisposable\");","var __version = require(\"./../../internal/version\");","","/**"," * The get request cycle for checking the cache and reporting"," * values.  If there are missing paths then the async request cycle to"," * the data source is performed until all paths are resolved or max"," * requests are made."," * @param {GetResponse} getResponse -"," * @param {Model} model - The model that the request was made with."," * @param {Object} results -"," * @param {Function} onNext -"," * @param {Function} onError -"," * @param {Function} onCompleted -"," * @param {Object} seedArg - The state of the output"," * @private"," */","module.exports = function getRequestCycle(getResponse, model, results, observer,","                                          seed, errors, count) {","    // we have exceeded the maximum retry limit.","    if (count === 10) {","        throw new MaxRetryExceededError();","    }","","    var requestQueue = model._request;","    var requestedMissingPaths = results.requestedMissingPaths;","    var optimizedMissingPaths = results.optimizedMissingPaths;","    var disposable = new AssignableDisposable();","","    // We need to prepend the bound path to all requested missing paths and","    // pass those into the requestQueue.","    var boundRequestedMissingPaths = [];","    var boundPath = model._path;","    if (boundPath.length) {","        for (var i = 0, len = requestedMissingPaths.length; i < len; ++i) {","            boundRequestedMissingPaths[i] =","                fastCat(boundPath, requestedMissingPaths[i]);","        }","    }","","    // No bound path, no array copy and concat.","    else {","        boundRequestedMissingPaths = requestedMissingPaths;","    }","","    var currentRequestDisposable = requestQueue.","        get(boundRequestedMissingPaths, optimizedMissingPaths, function() {","","","            // Once the request queue finishes, check the cache and bail if","            // we can.","            var nextResults = checkCacheAndReport(model, requestedMissingPaths,","                                                  observer,","                                                  getResponse.isProgressive,","                                                  getResponse.isJSONGraph,","                                                  seed, errors);","","            // If there are missing paths coming back form checkCacheAndReport","            // the its reported from the core cache check method.","            if (nextResults) {","","                // update the which disposable to use.","                disposable.currentDisposable =","                    getRequestCycle(getResponse, model, nextResults, observer,","                                    seed, errors, count + 1);","            }","","            // We have finished.  Since we went to the dataSource, we must","            // collect on the cache.","            else {","","                var modelRoot = model._root;","                var modelCache = modelRoot.cache;","                var currentVersion = modelCache[__version];","","                collectLru(modelRoot, modelRoot.expired, getSize(modelCache),","                        model._maxSize, model._collectRatio, currentVersion);","            }","","        });","    disposable.currentDisposable = currentRequestDisposable;","    return disposable;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"23":1,"26":0,"27":0,"30":0,"31":0,"32":0,"33":0,"37":0,"38":0,"39":0,"40":0,"41":0,"48":0,"51":0,"57":0,"65":0,"68":0,"77":0,"78":0,"79":0,"81":0,"86":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/errors/MaxRetryExceededError.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/errors/MaxRetryExceededError.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":0,"9":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"MaxRetryExceededError","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":27},"end":{"line":17,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":35}},"2":{"start":{"line":8,"column":0},"end":{"line":11,"column":1}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":71}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":37}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":46}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"7":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":32}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":39}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":11},"end":{"line":18,"column":12}},{"start":{"line":18,"column":16},"end":{"line":18,"column":31}}]}},"code":["var NAME = \"MaxRetryExceededError\";","/**"," * A request can only be retried up to a specified limit.  Once that"," * limit is exceeded, then an error will be thrown."," *"," * @private"," */","function MaxRetryExceededError() {","    this.message = \"The allowed number of retries have been exceeded.\";","    this.stack = (new Error()).stack;","}","","// instanceof will be an error, but stack will be correct because its defined","// in the constructor.","MaxRetryExceededError.prototype = new Error();","MaxRetryExceededError.prototype.name = NAME;","MaxRetryExceededError.is = function(e) {","    return e && e.name === NAME;","};","","module.exports = MaxRetryExceededError;",""],"l":{"1":1,"8":1,"9":0,"10":0,"15":1,"16":1,"17":1,"18":0,"21":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/lru/collect.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/lru/collect.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"collect","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":82}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":43}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":52}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":70}},"9":{"start":{"line":12,"column":0},"end":{"line":58,"column":2}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":25}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"12":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":21}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":51}},"15":{"start":{"line":22,"column":4},"end":{"line":22,"column":33}},"16":{"start":{"line":23,"column":4},"end":{"line":23,"column":27}},"17":{"start":{"line":25,"column":4},"end":{"line":25,"column":25}},"18":{"start":{"line":27,"column":4},"end":{"line":36,"column":5}},"19":{"start":{"line":28,"column":8},"end":{"line":28,"column":31}},"20":{"start":{"line":29,"column":8},"end":{"line":29,"column":22}},"21":{"start":{"line":30,"column":8},"end":{"line":34,"column":9}},"22":{"start":{"line":31,"column":12},"end":{"line":31,"column":58}},"23":{"start":{"line":32,"column":15},"end":{"line":34,"column":9}},"24":{"start":{"line":33,"column":12},"end":{"line":33,"column":55}},"25":{"start":{"line":35,"column":8},"end":{"line":35,"column":29}},"26":{"start":{"line":38,"column":4},"end":{"line":57,"column":5}},"27":{"start":{"line":39,"column":8},"end":{"line":39,"column":31}},"28":{"start":{"line":40,"column":8},"end":{"line":40,"column":20}},"29":{"start":{"line":41,"column":8},"end":{"line":49,"column":9}},"30":{"start":{"line":42,"column":12},"end":{"line":42,"column":32}},"31":{"start":{"line":43,"column":12},"end":{"line":43,"column":35}},"32":{"start":{"line":44,"column":12},"end":{"line":44,"column":26}},"33":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"34":{"start":{"line":46,"column":16},"end":{"line":46,"column":62}},"35":{"start":{"line":48,"column":12},"end":{"line":48,"column":24}},"36":{"start":{"line":51,"column":8},"end":{"line":51,"column":41}},"37":{"start":{"line":52,"column":8},"end":{"line":56,"column":9}},"38":{"start":{"line":53,"column":12},"end":{"line":53,"column":47}},"39":{"start":{"line":55,"column":12},"end":{"line":55,"column":34}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":15},"end":{"line":28,"column":25}},{"start":{"line":28,"column":29},"end":{"line":28,"column":30}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":8}},{"start":{"line":30,"column":8},"end":{"line":30,"column":8}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":15},"end":{"line":32,"column":15}},{"start":{"line":32,"column":15},"end":{"line":32,"column":15}}]},"5":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"6":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":35}},{"start":{"line":41,"column":40},"end":{"line":41,"column":44}}]},"7":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":19},"end":{"line":43,"column":29}},{"start":{"line":43,"column":33},"end":{"line":43,"column":34}}]},"8":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":12}},{"start":{"line":45,"column":12},"end":{"line":45,"column":12}}]},"9":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]}},"code":["var __key = require(\"./../internal/key\");","var __parent = require(\"./../internal/parent\");","","var __head = require(\"./../internal/head\");","var __tail = require(\"./../internal/tail\");","var __next = require(\"./../internal/next\");","var __prev = require(\"./../internal/prev\");","","var removeNode = require(\"./../support/removeNode\");","var updateNodeAncestors = require(\"./../support/updateNodeAncestors\");","","module.exports = function collect(lru, expired, totalArg, max, ratioArg, version) {","","    var total = totalArg;","    var ratio = ratioArg;","","    if (typeof ratio !== \"number\") {","        ratio = 0.75;","    }","","    var shouldUpdate = typeof version === \"number\";","    var targetSize = max * ratio;","    var parent, node, size;","","    node = expired.pop();","","    while (node) {","        size = node.$size || 0;","        total -= size;","        if (shouldUpdate === true) {","            updateNodeAncestors(node, size, lru, version);","        } else if (parent = node[__parent]) {","            removeNode(node, parent, node[__key], lru);","        }","        node = expired.pop();","    }","","    if (total >= max) {","        var prev = lru[__tail];","        node = prev;","        while ((total >= targetSize) && node) {","            prev = prev[__prev];","            size = node.$size || 0;","            total -= size;","            if (shouldUpdate === true) {","                updateNodeAncestors(node, size, lru, version);","            }","            node = prev;","        }","","        lru[__tail] = lru[__prev] = node;","        if (node == null) {","            lru[__head] = lru[__next] = void 0;","        } else {","            node[__next] = void 0;","        }","    }","};",""],"l":{"1":1,"2":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"12":1,"14":0,"15":0,"17":0,"18":0,"21":0,"22":0,"23":0,"25":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"35":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"51":0,"52":0,"53":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/AssignableDisposable.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/AssignableDisposable.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"AssignableDisposable","line":6,"loc":{"start":{"line":6,"column":27},"end":{"line":6,"column":76}}},"2":{"name":"dispose","line":18,"loc":{"start":{"line":18,"column":13},"end":{"line":18,"column":32}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":7,"column":4},"end":{"line":7,"column":26}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":47}},"4":{"start":{"line":12,"column":0},"end":{"line":35,"column":2}},"5":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"6":{"start":{"line":20,"column":12},"end":{"line":20,"column":19}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"8":{"start":{"line":26,"column":8},"end":{"line":26,"column":55}},"9":{"start":{"line":27,"column":8},"end":{"line":33,"column":9}},"10":{"start":{"line":28,"column":12},"end":{"line":28,"column":40}},"11":{"start":{"line":32,"column":12},"end":{"line":32,"column":32}},"12":{"start":{"line":38,"column":0},"end":{"line":38,"column":38}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":25}},{"start":{"line":19,"column":29},"end":{"line":19,"column":52}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]}},"code":["/**"," * Will allow for state tracking of the current disposable.  Also fulfills the"," * disposable interface."," * @private"," */","var AssignableDisposable = function AssignableDisposable(disosableCallback) {","    this.disposed = false;","    this.currentDisposable = disosableCallback;","};","","","AssignableDisposable.prototype = {","","    /**","     * Disposes of the current disposable.  This would be the getRequestCycle","     * disposable.","     */","    dispose: function dispose() {","        if (this.disposed || !this.currentDisposable) {","            return;","        }","        this.disposed = true;","","        // If the current disposable fulfills the disposable interface or just","        // a disposable function.","        var currentDisposable = this.currentDisposable;","        if (currentDisposable.dispose) {","            currentDisposable.dispose();","        }","","        else {","            currentDisposable();","        }","    }","};","","","module.exports = AssignableDisposable;",""],"l":{"6":1,"7":0,"8":0,"12":1,"19":0,"20":0,"22":0,"26":0,"27":0,"28":0,"32":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/IdempotentResponse.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/IdempotentResponse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"IdempotentResponse","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":39}}},"2":{"name":"initializeResponse","line":31,"loc":{"start":{"line":31,"column":42},"end":{"line":31,"column":72}}},"3":{"name":"invokeSourceRequest","line":85,"loc":{"start":{"line":85,"column":51},"end":{"line":85,"column":87}}},"4":{"name":"ensureCollect","line":89,"loc":{"start":{"line":89,"column":45},"end":{"line":89,"column":75}}},"5":{"name":"ensureCollect","line":90,"loc":{"start":{"line":90,"column":31},"end":{"line":90,"column":56}}},"6":{"name":"collectThisPass","line":95,"loc":{"start":{"line":95,"column":47},"end":{"line":95,"column":74}}},"7":{"name":"(anonymous_7)","line":101,"loc":{"start":{"line":101,"column":32},"end":{"line":101,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":59}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":47}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":45}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":54}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":60}},"12":{"start":{"line":17,"column":0},"end":{"line":17,"column":70}},"13":{"start":{"line":19,"column":0},"end":{"line":21,"column":1}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":37}},"15":{"start":{"line":23,"column":0},"end":{"line":23,"column":49}},"16":{"start":{"line":25,"column":0},"end":{"line":25,"column":67}},"17":{"start":{"line":26,"column":0},"end":{"line":26,"column":62}},"18":{"start":{"line":28,"column":0},"end":{"line":28,"column":48}},"19":{"start":{"line":29,"column":0},"end":{"line":29,"column":49}},"20":{"start":{"line":31,"column":0},"end":{"line":83,"column":2}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":27}},"22":{"start":{"line":34,"column":4},"end":{"line":34,"column":56}},"23":{"start":{"line":35,"column":4},"end":{"line":35,"column":43}},"24":{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},"25":{"start":{"line":38,"column":4},"end":{"line":38,"column":20}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":25}},"27":{"start":{"line":41,"column":4},"end":{"line":41,"column":25}},"28":{"start":{"line":43,"column":4},"end":{"line":43,"column":22}},"29":{"start":{"line":44,"column":4},"end":{"line":44,"column":31}},"30":{"start":{"line":47,"column":4},"end":{"line":72,"column":5}},"31":{"start":{"line":48,"column":8},"end":{"line":48,"column":33}},"32":{"start":{"line":49,"column":8},"end":{"line":49,"column":20}},"33":{"start":{"line":50,"column":8},"end":{"line":60,"column":9}},"34":{"start":{"line":51,"column":12},"end":{"line":51,"column":43}},"35":{"start":{"line":52,"column":12},"end":{"line":52,"column":35}},"36":{"start":{"line":53,"column":15},"end":{"line":60,"column":9}},"37":{"start":{"line":54,"column":12},"end":{"line":54,"column":53}},"38":{"start":{"line":55,"column":12},"end":{"line":55,"column":35}},"39":{"start":{"line":56,"column":15},"end":{"line":60,"column":9}},"40":{"start":{"line":57,"column":12},"end":{"line":57,"column":31}},"41":{"start":{"line":58,"column":15},"end":{"line":60,"column":9}},"42":{"start":{"line":59,"column":12},"end":{"line":59,"column":33}},"43":{"start":{"line":61,"column":8},"end":{"line":69,"column":9}},"44":{"start":{"line":62,"column":12},"end":{"line":62,"column":32}},"45":{"start":{"line":63,"column":12},"end":{"line":66,"column":14}},"46":{"start":{"line":67,"column":12},"end":{"line":67,"column":31}},"47":{"start":{"line":68,"column":12},"end":{"line":68,"column":34}},"48":{"start":{"line":71,"column":8},"end":{"line":71,"column":34}},"49":{"start":{"line":74,"column":4},"end":{"line":74,"column":45}},"50":{"start":{"line":75,"column":4},"end":{"line":75,"column":25}},"51":{"start":{"line":76,"column":4},"end":{"line":76,"column":37}},"52":{"start":{"line":77,"column":4},"end":{"line":77,"column":39}},"53":{"start":{"line":78,"column":4},"end":{"line":78,"column":29}},"54":{"start":{"line":79,"column":4},"end":{"line":79,"column":42}},"55":{"start":{"line":80,"column":4},"end":{"line":80,"column":25}},"56":{"start":{"line":82,"column":4},"end":{"line":82,"column":16}},"57":{"start":{"line":85,"column":0},"end":{"line":87,"column":2}},"58":{"start":{"line":86,"column":4},"end":{"line":86,"column":16}},"59":{"start":{"line":89,"column":0},"end":{"line":104,"column":2}},"60":{"start":{"line":90,"column":4},"end":{"line":99,"column":7}},"61":{"start":{"line":92,"column":8},"end":{"line":92,"column":36}},"62":{"start":{"line":93,"column":8},"end":{"line":93,"column":41}},"63":{"start":{"line":95,"column":8},"end":{"line":98,"column":11}},"64":{"start":{"line":96,"column":12},"end":{"line":97,"column":76}},"65":{"start":{"line":101,"column":4},"end":{"line":103,"column":7}},"66":{"start":{"line":102,"column":8},"end":{"line":102,"column":43}},"67":{"start":{"line":106,"column":0},"end":{"line":106,"column":36}}},"branchMap":{"1":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":23},"end":{"line":34,"column":40}},{"start":{"line":34,"column":44},"end":{"line":34,"column":55}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"3":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":24}},{"start":{"line":50,"column":28},"end":{"line":50,"column":51}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":15},"end":{"line":53,"column":15}},{"start":{"line":53,"column":15},"end":{"line":53,"column":15}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":15},"end":{"line":56,"column":15}},{"start":{"line":56,"column":15},"end":{"line":56,"column":15}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":15},"end":{"line":58,"column":15}},{"start":{"line":58,"column":15},"end":{"line":58,"column":15}}]},"7":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]}},"code":["var Rx = require(\"rx/dist/rx\");","var Observable = Rx.Observable;","","var ModelResponse = require(\"./../response/ModelResponse\");","","var pathSyntax = require(\"falcor-path-syntax\");","","var getSize = require(\"./../support/getSize\");","var collectLru = require(\"./../lru/collect\");","","var arrayClone = require(\"./../support/array-clone\");","var __version = require(\"./../internal/version\");","","var isArray = Array.isArray;","var isPathValue = require(\"./../support/isPathValue\");","var isJSONEnvelope = require(\"./../support/isJSONEnvelope\");","var isJSONGraphEnvelope = require(\"./../support/isJSONGraphEnvelope\");","","function IdempotentResponse(subscribe) {","    Observable.call(this, subscribe);","}","","IdempotentResponse.create = ModelResponse.create;","","IdempotentResponse.prototype = Object.create(Observable.prototype);","IdempotentResponse.prototype.constructor = IdempotentResponse;","","IdempotentResponse.prototype.subscribeCount = 0;","IdempotentResponse.prototype.subscribeLimit = 10;","","IdempotentResponse.prototype.initialize = function initializeResponse() {","","    var model = this.model;","    var outputFormat = this.outputFormat || \"AsPathMap\";","    var isProgressive = this.isProgressive;","    var values = [{}];","","    var groups = [];","    var args = this.args;","","    var group, groupType;","","    var argIndex = -1;","    var argCount = args.length;","","    // Validation of arguments have been moved out of this function.","    while (++argIndex < argCount) {","        var arg = args[argIndex];","        var argType;","        if (isArray(arg) || typeof arg === \"string\") {","            arg = pathSyntax.fromPath(arg);","            argType = \"PathValues\";","        } else if (isPathValue(arg)) {","            arg.path = pathSyntax.fromPath(arg.path);","            argType = \"PathValues\";","        } else if (isJSONGraphEnvelope(arg)) {","            argType = \"JSONGs\";","        } else if (isJSONEnvelope(arg)) {","            argType = \"PathMaps\";","        }","        if (groupType !== argType) {","            groupType = argType;","            group = {","                inputType: argType,","                arguments: []","            };","            groups.push(group);","            group.values = values;","        }","","        group.arguments.push(arg);","    }","","    this.boundPath = arrayClone(model._path);","    this.groups = groups;","    this.outputFormat = outputFormat;","    this.isProgressive = isProgressive;","    this.isCompleted = false;","    this.isMaster = model._source == null;","    this.values = values;","","    return this;","};","","IdempotentResponse.prototype.invokeSourceRequest = function invokeSourceRequest(model) {","    return this;","};","","IdempotentResponse.prototype.ensureCollect = function ensureCollect(model) {","    var ensured = this.finally(function ensureCollect() {","","        var modelRoot = model._root;","        var modelCache = modelRoot.cache;","","        modelRoot.collectionScheduler.schedule(function collectThisPass() {","            collectLru(modelRoot, modelRoot.expired, getSize(modelCache),","                model._maxSize, model._collectRatio, modelCache[__version]);","        });","    });","","    return new this.constructor(function(observer) {","        return ensured.subscribe(observer);","    });","};","","module.exports = IdempotentResponse;",""],"l":{"1":1,"2":1,"4":1,"6":1,"8":1,"9":1,"11":1,"12":1,"14":1,"15":1,"16":1,"17":1,"19":1,"20":0,"23":1,"25":1,"26":1,"28":1,"29":1,"31":1,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"41":0,"43":0,"44":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"67":0,"68":0,"71":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"82":0,"85":1,"86":0,"89":1,"90":0,"92":0,"93":0,"95":0,"96":0,"101":0,"102":0,"106":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-clone.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-clone.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"arrayClone","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":12,"column":2}},"2":{"start":{"line":2,"column":4},"end":{"line":4,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":21}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":15}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":25}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":20}},"7":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"8":{"start":{"line":9,"column":8},"end":{"line":9,"column":29}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":18}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]}},"code":["module.exports = function arrayClone(array) {","    if (!array) {","        return array;","    }","    var i = -1;","    var n = array.length;","    var array2 = [];","    while (++i < n) {","        array2[i] = array[i];","    }","    return array2;","};",""],"l":{"1":1,"2":0,"3":0,"5":0,"6":0,"7":0,"8":0,"9":0,"11":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isPathValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isPathValue.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{"1":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isPathValue","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":4,"column":0},"end":{"line":9,"column":2}},"4":{"start":{"line":5,"column":4},"end":{"line":8,"column":11}}},"branchMap":{"1":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":11},"end":{"line":5,"column":30}},{"start":{"line":6,"column":8},"end":{"line":6,"column":31}},{"start":{"line":7,"column":12},"end":{"line":7,"column":46}}]}},"code":["var isArray = Array.isArray;","var isObject = require(\"./../support/isObject\");","","module.exports = function isPathValue(pathValue) {","    return isObject(pathValue) && (","        isArray(pathValue.path) || (","            typeof pathValue.path === \"string\"","        ));","};",""],"l":{"1":1,"2":1,"4":1,"5":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isJSONEnvelope.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isJSONEnvelope.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isJSONEnvelope","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":54}}},"branchMap":{"1":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":11},"end":{"line":4,"column":29}},{"start":{"line":4,"column":34},"end":{"line":4,"column":52}}]}},"code":["var isObject = require(\"./../support/isObject\");","","module.exports = function isJSONEnvelope(envelope) {","    return isObject(envelope) && (\"json\" in envelope);","};",""],"l":{"1":1,"3":1,"4":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isJSONGraphEnvelope.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isJSONGraphEnvelope.js","s":{"1":1,"2":1,"3":1,"4":0},"b":{"1":[0,0,0,0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isJSONGraphEnvelope","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":48}},"3":{"start":{"line":4,"column":0},"end":{"line":12,"column":2}},"4":{"start":{"line":5,"column":4},"end":{"line":11,"column":6}}},"branchMap":{"1":{"line":5,"type":"binary-expr","locations":[{"start":{"line":5,"column":11},"end":{"line":5,"column":29}},{"start":{"line":5,"column":33},"end":{"line":5,"column":56}},{"start":{"line":6,"column":8},"end":{"line":6,"column":36}},{"start":{"line":7,"column":8},"end":{"line":7,"column":32}},{"start":{"line":8,"column":8},"end":{"line":8,"column":31}},{"start":{"line":9,"column":8},"end":{"line":9,"column":33}},{"start":{"line":10,"column":8},"end":{"line":10,"column":32}}]}},"code":["var isArray = Array.isArray;","var isObject = require(\"./../support/isObject\");","","module.exports = function isJSONGraphEnvelope(envelope) {","    return isObject(envelope) && isArray(envelope.paths) && (","        isObject(envelope.jsonGraph) ||","        isObject(envelope.jsong) ||","        isObject(envelope.json) ||","        isObject(envelope.values) ||","        isObject(envelope.value)","    );","};",""],"l":{"1":1,"2":1,"4":1,"5":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-flat-map.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-flat-map.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"arrayFlatMap","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":15,"column":2}},"2":{"start":{"line":2,"column":4},"end":{"line":2,"column":19}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":15}},"4":{"start":{"line":4,"column":4},"end":{"line":4,"column":25}},"5":{"start":{"line":5,"column":4},"end":{"line":5,"column":20}},"6":{"start":{"line":6,"column":4},"end":{"line":13,"column":5}},"7":{"start":{"line":7,"column":8},"end":{"line":7,"column":50}},"8":{"start":{"line":8,"column":8},"end":{"line":8,"column":19}},"9":{"start":{"line":9,"column":8},"end":{"line":9,"column":30}},"10":{"start":{"line":10,"column":8},"end":{"line":12,"column":9}},"11":{"start":{"line":11,"column":12},"end":{"line":11,"column":40}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":18}}},"branchMap":{},"code":["module.exports = function arrayFlatMap(array, selector) {","    var index = -1;","    var i = -1;","    var n = array.length;","    var array2 = [];","    while (++i < n) {","        var array3 = selector(array[i], i, array);","        var j = -1;","        var k = array3.length;","        while (++j < k) {","            array2[++index] = array3[j];","        }","    }","    return array2;","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/CallResponse.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/CallResponse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":1,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":1},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"fnMap":{"1":{"name":"CallResponse","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":33}}},"2":{"name":"invokeSourceRequest","line":21,"loc":{"start":{"line":21,"column":45},"end":{"line":21,"column":81}}},"3":{"name":"ensureCollect","line":25,"loc":{"start":{"line":25,"column":39},"end":{"line":25,"column":69}}},"4":{"name":"initializeResponse","line":29,"loc":{"start":{"line":29,"column":36},"end":{"line":29,"column":66}}},"5":{"name":"toObservable","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":25}}},"6":{"name":"(anonymous_6)","line":34,"loc":{"start":{"line":34,"column":31},"end":{"line":34,"column":42}}},"7":{"name":"subscribeToResponse","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":39}}},"8":{"name":"(anonymous_8)","line":60,"loc":{"start":{"line":60,"column":13},"end":{"line":60,"column":28}}},"9":{"name":"(anonymous_9)","line":81,"loc":{"start":{"line":81,"column":47},"end":{"line":81,"column":66}}},"10":{"name":"(anonymous_10)","line":86,"loc":{"start":{"line":86,"column":70},"end":{"line":86,"column":90}}},"11":{"name":"(anonymous_11)","line":92,"loc":{"start":{"line":92,"column":8},"end":{"line":92,"column":20}}},"12":{"name":"getLocalCallObs","line":99,"loc":{"start":{"line":99,"column":4},"end":{"line":99,"column":36}}},"13":{"name":"aggregateFnResults","line":124,"loc":{"start":{"line":124,"column":8},"end":{"line":124,"column":56}}},"14":{"name":"setLocalValues","line":145,"loc":{"start":{"line":145,"column":8},"end":{"line":145,"column":41}}},"15":{"name":"(anonymous_15)","line":151,"loc":{"start":{"line":151,"column":25},"end":{"line":151,"column":44}}},"16":{"name":"getRemoteValues","line":168,"loc":{"start":{"line":168,"column":8},"end":{"line":168,"column":41}}},"17":{"name":"(anonymous_17)","line":188,"loc":{"start":{"line":188,"column":40},"end":{"line":188,"column":60}}},"18":{"name":"prependRefToSuffixes","line":193,"loc":{"start":{"line":193,"column":8},"end":{"line":193,"column":62}}},"19":{"name":"(anonymous_19)","line":195,"loc":{"start":{"line":195,"column":55},"end":{"line":195,"column":76}}},"20":{"name":"pluckPath","line":201,"loc":{"start":{"line":201,"column":8},"end":{"line":201,"column":38}}},"21":{"name":"getRemoteCallObs","line":206,"loc":{"start":{"line":206,"column":4},"end":{"line":206,"column":42}}},"22":{"name":"(anonymous_22)","line":209,"loc":{"start":{"line":209,"column":39},"end":{"line":209,"column":50}}},"23":{"name":"invalidateLocalValues","line":222,"loc":{"start":{"line":222,"column":8},"end":{"line":222,"column":49}}},"24":{"name":"setCallEnvelope","line":231,"loc":{"start":{"line":231,"column":4},"end":{"line":231,"column":39}}},"25":{"name":"(anonymous_25)","line":233,"loc":{"start":{"line":233,"column":19},"end":{"line":233,"column":33}}},"26":{"name":"(anonymous_26)","line":234,"loc":{"start":{"line":234,"column":16},"end":{"line":234,"column":27}}},"27":{"name":"(anonymous_27)","line":237,"loc":{"start":{"line":237,"column":46},"end":{"line":237,"column":61}}},"28":{"name":"prependThisPath","line":244,"loc":{"start":{"line":244,"column":4},"end":{"line":244,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":67}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":59}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":67}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":47}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"8":{"start":{"line":12,"column":0},"end":{"line":14,"column":1}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":60}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":61}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":50}},"13":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"14":{"start":{"line":22,"column":4},"end":{"line":22,"column":16}},"15":{"start":{"line":25,"column":0},"end":{"line":27,"column":2}},"16":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"17":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"18":{"start":{"line":30,"column":4},"end":{"line":30,"column":16}},"19":{"start":{"line":33,"column":0},"end":{"line":37,"column":1}},"20":{"start":{"line":34,"column":4},"end":{"line":36,"column":7}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":17}},"22":{"start":{"line":39,"column":0},"end":{"line":247,"column":1}},"23":{"start":{"line":41,"column":4},"end":{"line":41,"column":25}},"24":{"start":{"line":42,"column":4},"end":{"line":42,"column":27}},"25":{"start":{"line":44,"column":4},"end":{"line":44,"column":48}},"26":{"start":{"line":45,"column":4},"end":{"line":45,"column":33}},"27":{"start":{"line":46,"column":4},"end":{"line":46,"column":60}},"28":{"start":{"line":47,"column":4},"end":{"line":47,"column":62}},"29":{"start":{"line":49,"column":4},"end":{"line":51,"column":7}},"30":{"start":{"line":52,"column":4},"end":{"line":52,"column":50}},"31":{"start":{"line":53,"column":4},"end":{"line":53,"column":32}},"32":{"start":{"line":54,"column":4},"end":{"line":54,"column":51}},"33":{"start":{"line":55,"column":4},"end":{"line":55,"column":51}},"34":{"start":{"line":57,"column":4},"end":{"line":77,"column":34}},"35":{"start":{"line":61,"column":12},"end":{"line":61,"column":33}},"36":{"start":{"line":62,"column":12},"end":{"line":62,"column":27}},"37":{"start":{"line":63,"column":12},"end":{"line":63,"column":41}},"38":{"start":{"line":65,"column":12},"end":{"line":67,"column":13}},"39":{"start":{"line":66,"column":16},"end":{"line":66,"column":45}},"40":{"start":{"line":68,"column":12},"end":{"line":68,"column":77}},"41":{"start":{"line":69,"column":12},"end":{"line":72,"column":14}},"42":{"start":{"line":79,"column":4},"end":{"line":79,"column":48}},"43":{"start":{"line":81,"column":4},"end":{"line":95,"column":7}},"44":{"start":{"line":82,"column":12},"end":{"line":82,"column":39}},"45":{"start":{"line":83,"column":12},"end":{"line":83,"column":51}},"46":{"start":{"line":84,"column":12},"end":{"line":84,"column":57}},"47":{"start":{"line":85,"column":12},"end":{"line":89,"column":13}},"48":{"start":{"line":86,"column":16},"end":{"line":88,"column":19}},"49":{"start":{"line":87,"column":20},"end":{"line":87,"column":56}},"50":{"start":{"line":90,"column":12},"end":{"line":90,"column":58}},"51":{"start":{"line":93,"column":12},"end":{"line":93,"column":32}},"52":{"start":{"line":97,"column":4},"end":{"line":97,"column":23}},"53":{"start":{"line":99,"column":4},"end":{"line":204,"column":5}},"54":{"start":{"line":101,"column":8},"end":{"line":101,"column":45}},"55":{"start":{"line":103,"column":8},"end":{"line":120,"column":9}},"56":{"start":{"line":105,"column":12},"end":{"line":105,"column":43}},"57":{"start":{"line":106,"column":12},"end":{"line":106,"column":51}},"58":{"start":{"line":108,"column":12},"end":{"line":117,"column":42}},"59":{"start":{"line":119,"column":12},"end":{"line":119,"column":54}},"60":{"start":{"line":122,"column":8},"end":{"line":122,"column":34}},"61":{"start":{"line":124,"column":8},"end":{"line":143,"column":9}},"62":{"start":{"line":125,"column":12},"end":{"line":141,"column":13}},"63":{"start":{"line":126,"column":16},"end":{"line":126,"column":89}},"64":{"start":{"line":128,"column":16},"end":{"line":128,"column":42}},"65":{"start":{"line":129,"column":16},"end":{"line":129,"column":44}},"66":{"start":{"line":130,"column":16},"end":{"line":140,"column":17}},"67":{"start":{"line":131,"column":20},"end":{"line":134,"column":23}},"68":{"start":{"line":136,"column":20},"end":{"line":139,"column":23}},"69":{"start":{"line":142,"column":12},"end":{"line":142,"column":27}},"70":{"start":{"line":145,"column":8},"end":{"line":166,"column":9}},"71":{"start":{"line":146,"column":12},"end":{"line":146,"column":67}},"72":{"start":{"line":147,"column":12},"end":{"line":165,"column":13}},"73":{"start":{"line":148,"column":16},"end":{"line":156,"column":23}},"74":{"start":{"line":152,"column":24},"end":{"line":155,"column":26}},"75":{"start":{"line":158,"column":16},"end":{"line":164,"column":19}},"76":{"start":{"line":168,"column":8},"end":{"line":191,"column":9}},"77":{"start":{"line":170,"column":12},"end":{"line":170,"column":43}},"78":{"start":{"line":171,"column":12},"end":{"line":171,"column":41}},"79":{"start":{"line":172,"column":12},"end":{"line":172,"column":40}},"80":{"start":{"line":173,"column":12},"end":{"line":173,"column":48}},"81":{"start":{"line":174,"column":12},"end":{"line":174,"column":54}},"82":{"start":{"line":176,"column":12},"end":{"line":176,"column":72}},"83":{"start":{"line":177,"column":12},"end":{"line":177,"column":75}},"84":{"start":{"line":178,"column":12},"end":{"line":178,"column":65}},"85":{"start":{"line":179,"column":12},"end":{"line":179,"column":64}},"86":{"start":{"line":180,"column":12},"end":{"line":180,"column":28}},"87":{"start":{"line":182,"column":12},"end":{"line":186,"column":13}},"88":{"start":{"line":183,"column":16},"end":{"line":183,"column":116}},"89":{"start":{"line":185,"column":16},"end":{"line":185,"column":58}},"90":{"start":{"line":188,"column":12},"end":{"line":190,"column":15}},"91":{"start":{"line":189,"column":16},"end":{"line":189,"column":54}},"92":{"start":{"line":193,"column":8},"end":{"line":199,"column":9}},"93":{"start":{"line":194,"column":12},"end":{"line":194,"column":44}},"94":{"start":{"line":195,"column":12},"end":{"line":197,"column":16}},"95":{"start":{"line":196,"column":16},"end":{"line":196,"column":50}},"96":{"start":{"line":198,"column":12},"end":{"line":198,"column":28}},"97":{"start":{"line":201,"column":8},"end":{"line":203,"column":9}},"98":{"start":{"line":202,"column":12},"end":{"line":202,"column":34}},"99":{"start":{"line":206,"column":4},"end":{"line":229,"column":5}},"100":{"start":{"line":208,"column":8},"end":{"line":218,"column":9}},"101":{"start":{"line":209,"column":12},"end":{"line":217,"column":42}},"102":{"start":{"line":210,"column":16},"end":{"line":210,"column":24}},"103":{"start":{"line":211,"column":16},"end":{"line":215,"column":17}},"104":{"start":{"line":212,"column":20},"end":{"line":212,"column":89}},"105":{"start":{"line":214,"column":20},"end":{"line":214,"column":70}},"106":{"start":{"line":216,"column":16},"end":{"line":216,"column":27}},"107":{"start":{"line":220,"column":8},"end":{"line":220,"column":34}},"108":{"start":{"line":222,"column":8},"end":{"line":228,"column":9}},"109":{"start":{"line":223,"column":12},"end":{"line":223,"column":53}},"110":{"start":{"line":224,"column":12},"end":{"line":226,"column":13}},"111":{"start":{"line":225,"column":16},"end":{"line":225,"column":69}},"112":{"start":{"line":227,"column":12},"end":{"line":227,"column":28}},"113":{"start":{"line":231,"column":4},"end":{"line":242,"column":5}},"114":{"start":{"line":232,"column":8},"end":{"line":241,"column":15}},"115":{"start":{"line":233,"column":35},"end":{"line":233,"column":46}},"116":{"start":{"line":235,"column":16},"end":{"line":240,"column":18}},"117":{"start":{"line":238,"column":24},"end":{"line":238,"column":60}},"118":{"start":{"line":244,"column":4},"end":{"line":246,"column":5}},"119":{"start":{"line":245,"column":8},"end":{"line":245,"column":42}},"120":{"start":{"line":249,"column":0},"end":{"line":249,"column":30}}},"branchMap":{"1":{"line":1,"type":"binary-expr","locations":[{"start":{"line":1,"column":9},"end":{"line":1,"column":30}},{"start":{"line":1,"column":34},"end":{"line":1,"column":66}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":35}},{"start":{"line":13,"column":39},"end":{"line":13,"column":58}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":19},"end":{"line":45,"column":26}},{"start":{"line":45,"column":30},"end":{"line":45,"column":32}}]},"4":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":20},"end":{"line":46,"column":27}},{"start":{"line":46,"column":31},"end":{"line":46,"column":33}}]},"5":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":22},"end":{"line":47,"column":29}},{"start":{"line":47,"column":33},"end":{"line":47,"column":35}}]},"6":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":19},"end":{"line":65,"column":23}},{"start":{"line":65,"column":27},"end":{"line":65,"column":43}}]},"7":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":12}},{"start":{"line":85,"column":12},"end":{"line":85,"column":12}}]},"8":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":22},"end":{"line":101,"column":27}},{"start":{"line":101,"column":31},"end":{"line":101,"column":44}}]},"9":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":8}},{"start":{"line":103,"column":8},"end":{"line":103,"column":8}}]},"10":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":12}},{"start":{"line":125,"column":12},"end":{"line":125,"column":12}}]},"11":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":16},"end":{"line":130,"column":16}},{"start":{"line":130,"column":16},"end":{"line":130,"column":16}}]},"12":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":20},"end":{"line":130,"column":34}},{"start":{"line":130,"column":38},"end":{"line":130,"column":63}},{"start":{"line":130,"column":67},"end":{"line":130,"column":87}}]},"13":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":147,"column":12}},{"start":{"line":147,"column":12},"end":{"line":147,"column":12}}]},"14":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":12},"end":{"line":182,"column":12}},{"start":{"line":182,"column":12},"end":{"line":182,"column":12}}]},"15":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":8},"end":{"line":208,"column":8}},{"start":{"line":208,"column":8},"end":{"line":208,"column":8}}]},"16":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":12},"end":{"line":208,"column":22}},{"start":{"line":208,"column":26},"end":{"line":208,"column":56}}]},"17":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":12},"end":{"line":224,"column":12}},{"start":{"line":224,"column":12},"end":{"line":224,"column":12}}]},"18":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":16},"end":{"line":224,"column":29}},{"start":{"line":224,"column":33},"end":{"line":224,"column":53}}]}},"code":["var Rx = require(\"rx/dist/rx\") && require(\"rx/dist/rx.aggregates\");","var Observable = Rx.Observable;","var CompositeDisposable = Rx.CompositeDisposable;","","var ModelResponse = require(\"./../response/ModelResponse\");","var InvalidSourceError = require(\"./../errors/InvalidSourceError\");","","var pathSyntax = require(\"falcor-path-syntax\");","","var $ref = require(\"./../types/ref\");","","function CallResponse(subscribe) {","    Observable.call(this, subscribe || subscribeToResponse);","}","","CallResponse.create = ModelResponse.create;","","CallResponse.prototype = Object.create(Observable.prototype);","CallResponse.prototype.constructor = CallResponse;","","CallResponse.prototype.invokeSourceRequest = function invokeSourceRequest(model) {","    return this;","};","","CallResponse.prototype.ensureCollect = function ensureCollect(model) {","    return this;","};","","CallResponse.prototype.initialize = function initializeResponse() {","    return this;","};","","function toObservable(x) {","    return Rx.Observable.defer(function() {","        return x;","    });","}","","function subscribeToResponse(observer) {","","    var args = this.args;","    var model = this.model;","","    var callPath = pathSyntax.fromPath(args[0]);","    var callArgs = args[1] || [];","    var suffixes = (args[2] || []).map(pathSyntax.fromPath);","    var extraPaths = (args[3] || []).map(pathSyntax.fromPath);","","    var rootModel = model._clone({","        _path: []","    });","    var localRoot = rootModel.withoutDataSource();","    var boundPath = model._path;","    var boundCallPath = boundPath.concat(callPath);","    var boundThisPath = boundCallPath.slice(0, -1);","","    var setCallValuesObs = toObservable(","            model.withoutDataSource().get(callPath)","        )","        .map(function(data) {","            var curr = data.json;","            var depth = -1;","            var length = callPath.length;","","            while (curr && ++depth < length) {","                curr = curr[callPath[depth]];","            }","            var boundModel = rootModel._derefSync(boundThisPath).boxValues();","            return {","                model: boundModel,","                localFn: curr","            };","        })","        .flatMap(getLocalCallObs)","        .defaultIfEmpty(getRemoteCallObs(model._source))","        .mergeAll()","        .flatMap(setCallEnvelope);","","    var disposables = new CompositeDisposable();","","    disposables.add(setCallValuesObs.subscribe(function(envelope) {","            var paths = envelope.paths;","            var invalidated = envelope.invalidated;","            var innerObs = model.get.apply(model, paths);","            if (observer.outputFormat === \"AsJSONG\") {","                innerObs = toObservable(innerObs._toJSONG()).doAction(function(envelope2) {","                    envelope2.invalidated = invalidated;","                });","            }","            disposables.add(innerObs.subscribe(observer));","        },","        function(e) {","            observer.onError(e);","        }","    ));","","    return disposables;","","    function getLocalCallObs(tuple) {","","        var localFn = tuple && tuple.localFn;","","        if (typeof localFn === \"function\") {","","            var localFnModel = tuple.model;","            var localThisPath = localFnModel._path;","","            var remoteGetValues = localFn","                .apply(localFnModel, callArgs)","                .reduce(aggregateFnResults, {","                    values: [],","                    references: [],","                    invalidations: [],","                    localThisPath: localThisPath","                })","                .flatMap(setLocalValues)","                .flatMap(getRemoteValues);","","            return Observable.return(remoteGetValues);","        }","","        return Observable.empty();","","        function aggregateFnResults(results, pathValue) {","            if (Boolean(pathValue.invalidated)) {","                results.invalidations.push(results.localThisPath.concat(pathValue.path));","            } else {","                var path = pathValue.path;","                var value = pathValue.value;","                if (Boolean(value) && typeof value === \"object\" && value.$type === $ref) {","                    results.references.push({","                        path: prependThisPath(path),","                        value: pathValue.value","                    });","                } else {","                    results.values.push({","                        path: prependThisPath(path),","                        value: pathValue.value","                    });","                }","            }","            return results;","        }","","        function setLocalValues(results) {","            var values = results.values.concat(results.references);","            if (values.length > 0) {","                return toObservable(localRoot.set.","                        apply(localRoot, values).","                        _toJSONG())","                    .map(function(envelope) {","                        return {","                            results: results,","                            envelope: envelope","                        };","                    });","            } else {","                return Observable.return({","                    results: results,","                    envelope: {","                        jsonGraph: {},","                        paths: []","                    }","                });","            }","        }","","        function getRemoteValues(tuple2) {","","            var envelope = tuple2.envelope;","            var results = tuple2.results;","            var values = results.values;","            var references = results.references;","            var invalidations = results.invalidations;","","            var rootValues = values.map(pluckPath).map(prependThisPath);","            var rootSuffixes = references.reduce(prependRefToSuffixes, []);","            var rootExtraPaths = extraPaths.map(prependThisPath);","            var rootPaths = rootSuffixes.concat(rootExtraPaths);","            var envelopeObs;","","            if (rootPaths.length > 0) {","                envelopeObs = toObservable(rootModel.get.apply(rootModel, rootValues.concat(rootPaths))._toJSONG());","            } else {","                envelopeObs = Observable.return(envelope);","            }","","            return envelopeObs.doAction(function(envelope2) {","                envelope2.invalidated = invalidations;","            });","        }","","        function prependRefToSuffixes(refPaths, refPathValue) {","            var refPath = refPathValue.path;","            refPaths.push.apply(refPaths, suffixes.map(function(pathSuffix) {","                return refPath.concat(pathSuffix);","            }));","            return refPaths;","        }","","        function pluckPath(pathValue) {","            return pathValue.path;","        }","    }","","    function getRemoteCallObs(dataSource) {","","        if (dataSource && typeof dataSource === \"object\") {","            return Rx.Observable.defer(function() {","                var obs;","                try {","                    obs = dataSource.call(boundCallPath, callArgs, suffixes, extraPaths);","                } catch (e) {","                    obs = Observable.throw(new InvalidSourceError(e));","                }","                return obs;","            }).map(invalidateLocalValues);","        }","","        return Observable.empty();","","        function invalidateLocalValues(envelope) {","            var invalidations = envelope.invalidated;","            if (invalidations && invalidations.length) {","                rootModel.invalidate.apply(rootModel, invalidations);","            }","            return envelope;","        }","    }","","    function setCallEnvelope(envelope) {","        return toObservable(localRoot.set(envelope)).","            reduce(function(acc) { return acc; }, null).","            map(function() {","                return {","                    invalidated: envelope.invalidated,","                    paths: envelope.paths.map(function(path) {","                        return path.slice(boundPath.length);","                    })","                };","            });","    }","","    function prependThisPath(path) {","        return boundThisPath.concat(path);","    }","}","","module.exports = CallResponse;",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":1,"8":1,"10":1,"12":1,"13":0,"16":1,"18":1,"19":1,"21":1,"22":0,"25":1,"26":0,"29":1,"30":0,"33":1,"34":0,"35":0,"39":1,"41":0,"42":0,"44":0,"45":0,"46":0,"47":0,"49":0,"52":0,"53":0,"54":0,"55":0,"57":0,"61":0,"62":0,"63":0,"65":0,"66":0,"68":0,"69":0,"79":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"90":0,"93":0,"97":0,"99":1,"101":0,"103":0,"105":0,"106":0,"108":0,"119":0,"122":0,"124":1,"125":0,"126":0,"128":0,"129":0,"130":0,"131":0,"136":0,"142":0,"145":1,"146":0,"147":0,"148":0,"152":0,"158":0,"168":1,"170":0,"171":0,"172":0,"173":0,"174":0,"176":0,"177":0,"178":0,"179":0,"180":0,"182":0,"183":0,"185":0,"188":0,"189":0,"193":1,"194":0,"195":0,"196":0,"198":0,"201":1,"202":0,"206":1,"208":0,"209":0,"210":0,"211":0,"212":0,"214":0,"216":0,"220":0,"222":1,"223":0,"224":0,"225":0,"227":0,"231":1,"232":0,"233":0,"235":0,"238":0,"244":1,"245":0,"249":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/InvalidateResponse.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/InvalidateResponse.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"InvalidateResponse","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}}},"2":{"name":"subscribeToInvalidateResponse","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":69}},"4":{"start":{"line":6,"column":0},"end":{"line":8,"column":1}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":78}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":54}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":75}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":51}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"10":{"start":{"line":16,"column":0},"end":{"line":41,"column":1}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":27}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":29}},"13":{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},"14":{"start":{"line":22,"column":4},"end":{"line":22,"column":24}},"15":{"start":{"line":23,"column":4},"end":{"line":23,"column":35}},"16":{"start":{"line":25,"column":4},"end":{"line":36,"column":5}},"17":{"start":{"line":27,"column":8},"end":{"line":27,"column":39}},"18":{"start":{"line":28,"column":8},"end":{"line":28,"column":40}},"19":{"start":{"line":29,"column":8},"end":{"line":29,"column":41}},"20":{"start":{"line":31,"column":8},"end":{"line":35,"column":9}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":68}},"22":{"start":{"line":33,"column":12},"end":{"line":33,"column":53}},"23":{"start":{"line":34,"column":12},"end":{"line":34,"column":45}},"24":{"start":{"line":38,"column":4},"end":{"line":38,"column":27}},"25":{"start":{"line":40,"column":4},"end":{"line":40,"column":28}},"26":{"start":{"line":43,"column":0},"end":{"line":43,"column":36}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":34},"end":{"line":7,"column":43}},{"start":{"line":7,"column":47},"end":{"line":7,"column":76}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":8}},{"start":{"line":31,"column":8},"end":{"line":31,"column":8}}]}},"code":["var Rx = require(\"rx/dist/rx\");","var Disposable = Rx.Disposable;","","var IdempotentResponse = require(\"./../response/IdempotentResponse\");","","function InvalidateResponse(subscribe) {","    IdempotentResponse.call(this, subscribe || subscribeToInvalidateResponse);","}","","InvalidateResponse.create = IdempotentResponse.create;","","InvalidateResponse.prototype = Object.create(IdempotentResponse.prototype);","InvalidateResponse.prototype.method = \"invalidate\";","InvalidateResponse.prototype.constructor = InvalidateResponse;","","function subscribeToInvalidateResponse(observer) {","","    var model = this.model;","    var method = this.method;","","    var groups = this.groups;","    var groupIndex = -1;","    var groupCount = groups.length;","","    while (++groupIndex < groupCount) {","","        var group = groups[groupIndex];","        var inputType = group.inputType;","        var methodArgs = group.arguments;","","        if (methodArgs.length > 0) {","            var operationName = \"_\" + method + inputType + \"AsJSON\";","            var operationFunc = model[operationName];","            operationFunc(model, methodArgs);","        }","    }","","    observer.onCompleted();","","    return Disposable.empty;","}","","module.exports = InvalidateResponse;",""],"l":{"1":1,"2":1,"4":1,"6":1,"7":0,"10":1,"12":1,"13":1,"14":1,"16":1,"18":0,"19":0,"21":0,"22":0,"23":0,"25":0,"27":0,"28":0,"29":0,"31":0,"32":0,"33":0,"34":0,"38":0,"40":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/schedulers/ASAPScheduler.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/schedulers/ASAPScheduler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"ASAPScheduler","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}}},"2":{"name":"schedule","line":7,"loc":{"start":{"line":7,"column":35},"end":{"line":7,"column":61}}},"3":{"name":"scheduleWithState","line":12,"loc":{"start":{"line":12,"column":44},"end":{"line":12,"column":86}}},"4":{"name":"(anonymous_4)","line":14,"loc":{"start":{"line":14,"column":9},"end":{"line":14,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":27}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"5":{"start":{"line":7,"column":0},"end":{"line":10,"column":2}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":28}},"8":{"start":{"line":12,"column":0},"end":{"line":18,"column":2}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":20}},"10":{"start":{"line":14,"column":4},"end":{"line":16,"column":7}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":28}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":28}},"13":{"start":{"line":20,"column":0},"end":{"line":20,"column":31}}},"branchMap":{},"code":["var asap = require(\"asap\");","var Rx = require(\"rx/dist/rx\");","var Disposable = Rx.Disposable;","","function ASAPScheduler() {}","","ASAPScheduler.prototype.schedule = function schedule(action) {","    asap(action);","    return Disposable.empty;","};","","ASAPScheduler.prototype.scheduleWithState = function scheduleWithState(state, action) {","    var self = this;","    asap(function() {","        action(self, state);","    });","    return Disposable.empty;","};","","module.exports = ASAPScheduler;",""],"l":{"1":1,"2":1,"3":1,"5":1,"7":1,"8":0,"9":0,"12":1,"13":0,"14":0,"15":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/schedulers/TimeoutScheduler.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/schedulers/TimeoutScheduler.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"TimeoutScheduler","line":4,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}}},"2":{"name":"schedule","line":8,"loc":{"start":{"line":8,"column":38},"end":{"line":8,"column":64}}},"3":{"name":"(anonymous_3)","line":10,"loc":{"start":{"line":10,"column":29},"end":{"line":10,"column":40}}},"4":{"name":"scheduleWithState","line":18,"loc":{"start":{"line":18,"column":47},"end":{"line":18,"column":89}}},"5":{"name":"(anonymous_5)","line":20,"loc":{"start":{"line":20,"column":24},"end":{"line":20,"column":35}}},"6":{"name":"(anonymous_6)","line":23,"loc":{"start":{"line":23,"column":29},"end":{"line":23,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":4,"column":0},"end":{"line":6,"column":1}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":23}},"5":{"start":{"line":8,"column":0},"end":{"line":16,"column":2}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":44}},"7":{"start":{"line":10,"column":4},"end":{"line":15,"column":7}},"8":{"start":{"line":11,"column":8},"end":{"line":14,"column":9}},"9":{"start":{"line":12,"column":12},"end":{"line":12,"column":29}},"10":{"start":{"line":13,"column":12},"end":{"line":13,"column":24}},"11":{"start":{"line":18,"column":0},"end":{"line":29,"column":2}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"13":{"start":{"line":20,"column":4},"end":{"line":22,"column":19}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":28}},"15":{"start":{"line":23,"column":4},"end":{"line":28,"column":7}},"16":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"17":{"start":{"line":25,"column":12},"end":{"line":25,"column":29}},"18":{"start":{"line":26,"column":12},"end":{"line":26,"column":24}},"19":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":8}},{"start":{"line":24,"column":8},"end":{"line":24,"column":8}}]}},"code":["var Rx = require(\"rx/dist/rx\");","var Disposable = Rx.Disposable;","","function TimeoutScheduler(delay) {","    this.delay = delay;","}","","TimeoutScheduler.prototype.schedule = function schedule(action) {","    var id = setTimeout(action, this.delay);","    return Disposable.create(function() {","        if (id !== void 0) {","            clearTimeout(id);","            id = void 0;","        }","    });","};","","TimeoutScheduler.prototype.scheduleWithState = function scheduleWithState(state, action) {","    var self = this;","    var id = setTimeout(function() {","        action(self, state);","    }, this.delay);","    return Disposable.create(function() {","        if (id !== void 0) {","            clearTimeout(id);","            id = void 0;","        }","    });","};","","module.exports = TimeoutScheduler;",""],"l":{"1":1,"2":1,"4":1,"5":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"18":1,"19":0,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"31":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/setPathMaps.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/setPathMaps.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"setPathMaps","line":33,"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":93}}},"2":{"name":"setPathMap","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":79,"column":54}}},"3":{"name":"setReference","line":131,"loc":{"start":{"line":131,"column":0},"end":{"line":133,"column":54}}},"4":{"name":"setNode","line":192,"loc":{"start":{"line":192,"column":0},"end":{"line":195,"column":54}}},"5":{"name":"getKeys","line":239,"loc":{"start":{"line":239,"column":0},"end":{"line":239,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":47}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":56}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":54}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":52}},"17":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}},"18":{"start":{"line":21,"column":0},"end":{"line":21,"column":52}},"19":{"start":{"line":22,"column":0},"end":{"line":22,"column":64}},"20":{"start":{"line":23,"column":0},"end":{"line":23,"column":80}},"21":{"start":{"line":33,"column":0},"end":{"line":73,"column":2}},"22":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}},"23":{"start":{"line":36,"column":4},"end":{"line":36,"column":24}},"24":{"start":{"line":37,"column":4},"end":{"line":37,"column":36}},"25":{"start":{"line":38,"column":4},"end":{"line":38,"column":37}},"26":{"start":{"line":39,"column":4},"end":{"line":39,"column":28}},"27":{"start":{"line":40,"column":4},"end":{"line":40,"column":32}},"28":{"start":{"line":41,"column":4},"end":{"line":41,"column":72}},"29":{"start":{"line":42,"column":4},"end":{"line":42,"column":41}},"30":{"start":{"line":43,"column":4},"end":{"line":43,"column":42}},"31":{"start":{"line":45,"column":4},"end":{"line":45,"column":27}},"32":{"start":{"line":46,"column":4},"end":{"line":46,"column":28}},"33":{"start":{"line":47,"column":4},"end":{"line":47,"column":28}},"34":{"start":{"line":48,"column":4},"end":{"line":48,"column":38}},"35":{"start":{"line":49,"column":4},"end":{"line":49,"column":26}},"36":{"start":{"line":50,"column":4},"end":{"line":50,"column":47}},"37":{"start":{"line":52,"column":4},"end":{"line":63,"column":5}},"38":{"start":{"line":54,"column":8},"end":{"line":54,"column":61}},"39":{"start":{"line":55,"column":8},"end":{"line":55,"column":43}},"40":{"start":{"line":56,"column":8},"end":{"line":56,"column":45}},"41":{"start":{"line":58,"column":8},"end":{"line":62,"column":10}},"42":{"start":{"line":65,"column":4},"end":{"line":65,"column":38}},"43":{"start":{"line":66,"column":4},"end":{"line":66,"column":47}},"44":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"45":{"start":{"line":69,"column":8},"end":{"line":69,"column":28}},"46":{"start":{"line":72,"column":4},"end":{"line":72,"column":44}},"47":{"start":{"line":76,"column":0},"end":{"line":128,"column":1}},"48":{"start":{"line":81,"column":4},"end":{"line":81,"column":32}},"49":{"start":{"line":83,"column":4},"end":{"line":127,"column":5}},"50":{"start":{"line":85,"column":8},"end":{"line":85,"column":25}},"51":{"start":{"line":86,"column":8},"end":{"line":86,"column":35}},"52":{"start":{"line":87,"column":8},"end":{"line":87,"column":49}},"53":{"start":{"line":89,"column":8},"end":{"line":126,"column":23}},"54":{"start":{"line":90,"column":12},"end":{"line":90,"column":37}},"55":{"start":{"line":91,"column":12},"end":{"line":91,"column":37}},"56":{"start":{"line":92,"column":12},"end":{"line":92,"column":57}},"57":{"start":{"line":94,"column":12},"end":{"line":94,"column":40}},"58":{"start":{"line":96,"column":12},"end":{"line":100,"column":14}},"59":{"start":{"line":102,"column":12},"end":{"line":102,"column":39}},"60":{"start":{"line":103,"column":12},"end":{"line":103,"column":40}},"61":{"start":{"line":105,"column":12},"end":{"line":105,"column":55}},"62":{"start":{"line":106,"column":12},"end":{"line":106,"column":38}},"63":{"start":{"line":107,"column":12},"end":{"line":107,"column":40}},"64":{"start":{"line":108,"column":12},"end":{"line":121,"column":13}},"65":{"start":{"line":109,"column":16},"end":{"line":120,"column":17}},"66":{"start":{"line":110,"column":20},"end":{"line":115,"column":22}},"67":{"start":{"line":117,"column":20},"end":{"line":117,"column":43}},"68":{"start":{"line":118,"column":20},"end":{"line":118,"column":89}},"69":{"start":{"line":119,"column":20},"end":{"line":119,"column":85}},"70":{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},"71":{"start":{"line":123,"column":16},"end":{"line":123,"column":22}},"72":{"start":{"line":125,"column":12},"end":{"line":125,"column":49}},"73":{"start":{"line":131,"column":0},"end":{"line":190,"column":1}},"74":{"start":{"line":135,"column":4},"end":{"line":135,"column":31}},"75":{"start":{"line":136,"column":4},"end":{"line":136,"column":50}},"76":{"start":{"line":137,"column":4},"end":{"line":137,"column":55}},"77":{"start":{"line":139,"column":4},"end":{"line":143,"column":5}},"78":{"start":{"line":140,"column":8},"end":{"line":140,"column":47}},"79":{"start":{"line":141,"column":8},"end":{"line":141,"column":39}},"80":{"start":{"line":142,"column":8},"end":{"line":142,"column":33}},"81":{"start":{"line":145,"column":4},"end":{"line":145,"column":23}},"82":{"start":{"line":147,"column":4},"end":{"line":147,"column":25}},"83":{"start":{"line":148,"column":4},"end":{"line":148,"column":22}},"84":{"start":{"line":150,"column":4},"end":{"line":150,"column":27}},"85":{"start":{"line":152,"column":4},"end":{"line":187,"column":5}},"86":{"start":{"line":153,"column":8},"end":{"line":153,"column":40}},"87":{"start":{"line":154,"column":8},"end":{"line":154,"column":47}},"88":{"start":{"line":157,"column":8},"end":{"line":157,"column":22}},"89":{"start":{"line":158,"column":8},"end":{"line":158,"column":41}},"90":{"start":{"line":160,"column":8},"end":{"line":160,"column":29}},"91":{"start":{"line":162,"column":8},"end":{"line":176,"column":34}},"92":{"start":{"line":163,"column":12},"end":{"line":163,"column":39}},"93":{"start":{"line":164,"column":12},"end":{"line":164,"column":39}},"94":{"start":{"line":165,"column":12},"end":{"line":169,"column":14}},"95":{"start":{"line":170,"column":12},"end":{"line":170,"column":30}},"96":{"start":{"line":171,"column":12},"end":{"line":174,"column":13}},"97":{"start":{"line":172,"column":16},"end":{"line":172,"column":44}},"98":{"start":{"line":173,"column":16},"end":{"line":173,"column":31}},"99":{"start":{"line":175,"column":12},"end":{"line":175,"column":32}},"100":{"start":{"line":178,"column":8},"end":{"line":178,"column":36}},"101":{"start":{"line":180,"column":8},"end":{"line":186,"column":9}},"102":{"start":{"line":181,"column":12},"end":{"line":181,"column":51}},"103":{"start":{"line":182,"column":12},"end":{"line":182,"column":46}},"104":{"start":{"line":183,"column":12},"end":{"line":183,"column":47}},"105":{"start":{"line":184,"column":12},"end":{"line":184,"column":40}},"106":{"start":{"line":185,"column":12},"end":{"line":185,"column":45}},"107":{"start":{"line":189,"column":4},"end":{"line":189,"column":26}},"108":{"start":{"line":192,"column":0},"end":{"line":237,"column":1}},"109":{"start":{"line":197,"column":4},"end":{"line":197,"column":26}},"110":{"start":{"line":199,"column":4},"end":{"line":213,"column":5}},"111":{"start":{"line":201,"column":8},"end":{"line":203,"column":62}},"112":{"start":{"line":205,"column":8},"end":{"line":205,"column":26}},"113":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"114":{"start":{"line":208,"column":12},"end":{"line":208,"column":27}},"115":{"start":{"line":211,"column":8},"end":{"line":211,"column":28}},"116":{"start":{"line":212,"column":8},"end":{"line":212,"column":34}},"117":{"start":{"line":215,"column":4},"end":{"line":217,"column":5}},"118":{"start":{"line":216,"column":8},"end":{"line":216,"column":30}},"119":{"start":{"line":219,"column":4},"end":{"line":228,"column":5}},"120":{"start":{"line":220,"column":8},"end":{"line":224,"column":9}},"121":{"start":{"line":221,"column":12},"end":{"line":221,"column":78}},"122":{"start":{"line":222,"column":15},"end":{"line":224,"column":9}},"123":{"start":{"line":223,"column":12},"end":{"line":223,"column":30}},"124":{"start":{"line":226,"column":8},"end":{"line":226,"column":22}},"125":{"start":{"line":227,"column":8},"end":{"line":227,"column":27}},"126":{"start":{"line":230,"column":4},"end":{"line":234,"column":6}},"127":{"start":{"line":236,"column":4},"end":{"line":236,"column":26}},"128":{"start":{"line":239,"column":0},"end":{"line":257,"column":1}},"129":{"start":{"line":241,"column":4},"end":{"line":254,"column":5}},"130":{"start":{"line":242,"column":8},"end":{"line":242,"column":22}},"131":{"start":{"line":243,"column":8},"end":{"line":243,"column":20}},"132":{"start":{"line":244,"column":8},"end":{"line":246,"column":9}},"133":{"start":{"line":245,"column":12},"end":{"line":245,"column":35}},"134":{"start":{"line":247,"column":8},"end":{"line":252,"column":9}},"135":{"start":{"line":248,"column":12},"end":{"line":250,"column":13}},"136":{"start":{"line":249,"column":16},"end":{"line":249,"column":25}},"137":{"start":{"line":251,"column":12},"end":{"line":251,"column":30}},"138":{"start":{"line":253,"column":8},"end":{"line":253,"column":20}},"139":{"start":{"line":256,"column":4},"end":{"line":256,"column":18}}},"branchMap":{"1":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":30},"end":{"line":41,"column":63}},{"start":{"line":41,"column":66},"end":{"line":41,"column":71}}]},"2":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":17},"end":{"line":42,"column":31}},{"start":{"line":42,"column":35},"end":{"line":42,"column":40}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"4":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":37}},{"start":{"line":68,"column":41},"end":{"line":68,"column":70}}]},"5":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"6":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":12}},{"start":{"line":83,"column":16},"end":{"line":83,"column":27}}]},"7":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":25},"end":{"line":92,"column":40}},{"start":{"line":92,"column":44},"end":{"line":92,"column":56}}]},"8":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12}},{"start":{"line":108,"column":12},"end":{"line":108,"column":12}}]},"9":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":16},"end":{"line":109,"column":16}},{"start":{"line":109,"column":16},"end":{"line":109,"column":16}}]},"10":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":122,"column":12}},{"start":{"line":122,"column":12},"end":{"line":122,"column":12}}]},"11":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"12":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"13":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":17},"end":{"line":153,"column":31}},{"start":{"line":153,"column":35},"end":{"line":153,"column":39}}]},"14":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":12},"end":{"line":171,"column":12}},{"start":{"line":171,"column":12},"end":{"line":171,"column":12}}]},"15":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":8},"end":{"line":180,"column":8}},{"start":{"line":180,"column":8},"end":{"line":180,"column":8}}]},"16":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":27},"end":{"line":181,"column":45}},{"start":{"line":181,"column":49},"end":{"line":181,"column":50}}]},"17":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"18":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":15},"end":{"line":212,"column":19}},{"start":{"line":212,"column":23},"end":{"line":212,"column":33}}]},"19":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"20":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":219,"column":4}},{"start":{"line":219,"column":4},"end":{"line":219,"column":4}}]},"21":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":220,"column":8}},{"start":{"line":220,"column":8},"end":{"line":220,"column":8}}]},"22":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":15},"end":{"line":222,"column":15}},{"start":{"line":222,"column":15},"end":{"line":222,"column":15}}]},"23":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":4},"end":{"line":241,"column":4}},{"start":{"line":241,"column":4},"end":{"line":241,"column":4}}]},"24":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":8},"end":{"line":241,"column":25}},{"start":{"line":241,"column":29},"end":{"line":241,"column":43}}]},"25":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":8},"end":{"line":244,"column":8}},{"start":{"line":244,"column":8},"end":{"line":244,"column":8}}]},"26":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":12},"end":{"line":248,"column":12}},{"start":{"line":248,"column":12},"end":{"line":248,"column":12}}]},"27":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":16},"end":{"line":248,"column":35}},{"start":{"line":248,"column":39},"end":{"line":248,"column":53}},{"start":{"line":248,"column":57},"end":{"line":248,"column":78}}]}},"code":["var __key = require(\"./../internal/key\");","var __ref = require(\"./../internal/ref\");","var __prefix = require(\"./../internal/prefix\");","var __parent = require(\"./../internal/parent\");","var __context = require(\"./../internal/context\");","var __version = require(\"./../internal/version\");","var __refIndex = require(\"./../internal/ref-index\");","var __refsLength = require(\"./../internal/refs-length\");","","var $ref = require(\"./../types/ref\");","","var getBoundValue = require(\"./../get/getBoundValue\");","","var isArray = Array.isArray;","var promote = require(\"./../lru/promote\");","var hasOwn = require(\"./../support/hasOwn\");","var isObject = require(\"./../support/isObject\");","var isExpired = require(\"./../support/isExpired\");","var isFunction = require(\"./../support/isFunction\");","var isPrimitive = require(\"./../support/isPrimitive\");","var expireNode = require(\"./../support/expireNode\");","var incrementVersion = require(\"./../support/incrementVersion\");","var mergeValueOrInsertBranch = require(\"./../support/mergeValueOrInsertBranch\");","","/**"," * Sets a list of PathMaps into a JSON Graph."," * @function"," * @param {Object} model - the Model for which to insert the PathMaps."," * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set."," * @return {Array.<Path>} - a list of optimized paths for the successfully set values."," */","","module.exports = function setPathMaps(model, pathMapEnvelopes, x, errorSelector, comparator) {","","    var modelRoot = model._root;","    var lru = modelRoot;","    var expired = modelRoot.expired;","    var version = incrementVersion();","    var bound = model._path;","    var cache = modelRoot.cache;","    var node = bound.length ? getBoundValue(model, bound).value : cache;","    var parent = node[__parent] || cache;","    var initialVersion = cache[__version];","","    var requestedPath = [];","    var requestedPaths = [];","    var optimizedPaths = [];","    var optimizedIndex = bound.length;","    var pathMapIndex = -1;","    var pathMapCount = pathMapEnvelopes.length;","","    while (++pathMapIndex < pathMapCount) {","","        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];","        var optimizedPath = bound.slice(0);","        optimizedPath.index = optimizedIndex;","","        setPathMap(","            pathMapEnvelope.json, 0, cache, parent, node,","            requestedPaths, optimizedPaths, requestedPath, optimizedPath,","            version, expired, lru, comparator, errorSelector","        );","    }","","    var newVersion = cache[__version];","    var rootChangeHandler = modelRoot.onChange;","","    if (isFunction(rootChangeHandler) && initialVersion !== newVersion) {","        rootChangeHandler();","    }","","    return [requestedPaths, optimizedPaths];","};","","/* eslint-disable no-constant-condition */","function setPathMap(","    pathMap, depth, root, parent, node,","    requestedPaths, optimizedPaths, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var keys = getKeys(pathMap);","","    if (keys && keys.length) {","","        var keyIndex = 0;","        var keyCount = keys.length;","        var optimizedIndex = optimizedPath.index;","","        do {","            var key = keys[keyIndex];","            var child = pathMap[key];","            var branch = isObject(child) && !child.$type;","","            requestedPath.depth = depth;","","            var results = setNode(","                root, parent, node, key, child,","                branch, false, requestedPath, optimizedPath,","                version, expired, lru, comparator, errorSelector","            );","","            requestedPath[depth] = key;","            requestedPath.index = depth;","","            optimizedPath[optimizedPath.index++] = key;","            var nextNode = results[0];","            var nextParent = results[1];","            if (nextNode) {","                if (branch) {","                    setPathMap(","                        child, depth + 1,","                        root, nextParent, nextNode,","                        requestedPaths, optimizedPaths, requestedPath, optimizedPath,","                        version, expired, lru, comparator, errorSelector","                    );","                } else {","                    promote(lru, nextNode);","                    requestedPaths.push(requestedPath.slice(0, requestedPath.index + 1));","                    optimizedPaths.push(optimizedPath.slice(0, optimizedPath.index));","                }","            }","            if (++keyIndex >= keyCount) {","                break;","            }","            optimizedPath.index = optimizedIndex;","        } while (true);","    }","}","/* eslint-enable */","","function setReference(","    value, root, node, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var reference = node.value;","    optimizedPath.splice(0, optimizedPath.length);","    optimizedPath.push.apply(optimizedPath, reference);","","    if (isExpired(node)) {","        optimizedPath.index = reference.length;","        expireNode(node, expired, lru);","        return [undefined, root];","    }","","    promote(lru, node);","","    var container = node;","    var parent = root;","","    node = node[__context];","","    if (node != null) {","        parent = node[__parent] || root;","        optimizedPath.index = reference.length;","    } else {","","        var index = 0;","        var count = reference.length - 1;","","        parent = node = root;","","        do {","            var key = reference[index];","            var branch = index < count;","            var results = setNode(","                root, parent, node, key, value,","                branch, true, requestedPath, optimizedPath,","                version, expired, lru, comparator, errorSelector","            );","            node = results[0];","            if (isPrimitive(node)) {","                optimizedPath.index = index;","                return results;","            }","            parent = results[1];","        } while (index++ < count);","","        optimizedPath.index = index;","","        if (container[__context] !== node) {","            var backRefs = node[__refsLength] || 0;","            node[__refsLength] = backRefs + 1;","            node[__ref + backRefs] = container;","            container[__context] = node;","            container[__refIndex] = backRefs;","        }","    }","","    return [node, parent];","}","","function setNode(","    root, parent, node, key, value,","    branch, reference, requestedPath, optimizedPath,","    version, expired, lru, comparator, errorSelector) {","","    var type = node.$type;","","    while (type === $ref) {","","        var results = setReference(","            value, root, node, requestedPath, optimizedPath,","            version, expired, lru, comparator, errorSelector);","","        node = results[0];","","        if (isPrimitive(node)) {","            return results;","        }","","        parent = results[1];","        type = node && node.$type;","    }","","    if (type !== void 0) {","        return [node, parent];","    }","","    if (key == null) {","        if (branch) {","            throw new Error(\"`null` is not allowed in branch key positions.\");","        } else if (node) {","            key = node[__key];","        }","    } else {","        parent = node;","        node = parent[key];","    }","","    node = mergeValueOrInsertBranch(","        parent, node, key, value,","        branch, reference, requestedPath, optimizedPath,","        version, expired, lru, comparator, errorSelector","    );","","    return [node, parent];","}","","function getKeys(pathMap) {","","    if (isObject(pathMap) && !pathMap.$type) {","        var keys = [];","        var itr = 0;","        if (isArray(pathMap)) {","            keys[itr++] = \"length\";","        }","        for (var key in pathMap) {","            if (key[0] === __prefix || key[0] === \"$\" || !hasOwn(pathMap, key)) {","                continue;","            }","            keys[itr++] = key;","        }","        return keys;","    }","","    return void 0;","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"12":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"33":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"54":0,"55":0,"56":0,"58":0,"65":0,"66":0,"68":0,"69":0,"72":0,"76":1,"81":0,"83":0,"85":0,"86":0,"87":0,"89":0,"90":0,"91":0,"92":0,"94":0,"96":0,"102":0,"103":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"117":0,"118":0,"119":0,"122":0,"123":0,"125":0,"131":1,"135":0,"136":0,"137":0,"139":0,"140":0,"141":0,"142":0,"145":0,"147":0,"148":0,"150":0,"152":0,"153":0,"154":0,"157":0,"158":0,"160":0,"162":0,"163":0,"164":0,"165":0,"170":0,"171":0,"172":0,"173":0,"175":0,"178":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"189":0,"192":1,"197":0,"199":0,"201":0,"205":0,"207":0,"208":0,"211":0,"212":0,"215":0,"216":0,"219":0,"220":0,"221":0,"222":0,"223":0,"226":0,"227":0,"230":0,"236":0,"239":1,"241":0,"242":0,"243":0,"244":0,"245":0,"247":0,"248":0,"249":0,"251":0,"253":0,"256":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/validateInput.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/validateInput.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"validateInput","line":13,"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":68}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":54}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":70}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":60}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"6":{"start":{"line":13,"column":0},"end":{"line":56,"column":2}},"7":{"start":{"line":14,"column":4},"end":{"line":54,"column":5}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":26}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":26}},"10":{"start":{"line":19,"column":8},"end":{"line":49,"column":9}},"11":{"start":{"line":20,"column":12},"end":{"line":20,"column":25}},"12":{"start":{"line":24,"column":13},"end":{"line":49,"column":9}},"13":{"start":{"line":25,"column":12},"end":{"line":25,"column":25}},"14":{"start":{"line":29,"column":13},"end":{"line":49,"column":9}},"15":{"start":{"line":30,"column":12},"end":{"line":30,"column":53}},"16":{"start":{"line":31,"column":12},"end":{"line":31,"column":25}},"17":{"start":{"line":35,"column":13},"end":{"line":49,"column":9}},"18":{"start":{"line":36,"column":12},"end":{"line":36,"column":25}},"19":{"start":{"line":40,"column":13},"end":{"line":49,"column":9}},"20":{"start":{"line":41,"column":12},"end":{"line":41,"column":25}},"21":{"start":{"line":45,"column":13},"end":{"line":49,"column":9}},"22":{"start":{"line":48,"column":12},"end":{"line":48,"column":25}},"23":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"24":{"start":{"line":52,"column":12},"end":{"line":52,"column":126}},"25":{"start":{"line":55,"column":4},"end":{"line":55,"column":16}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":24}},{"start":{"line":19,"column":28},"end":{"line":19,"column":45}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":13},"end":{"line":24,"column":13}},{"start":{"line":24,"column":13},"end":{"line":24,"column":13}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":17},"end":{"line":24,"column":40}},{"start":{"line":24,"column":44},"end":{"line":24,"column":67}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":13},"end":{"line":29,"column":13}},{"start":{"line":29,"column":13},"end":{"line":29,"column":13}}]},"6":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":33}},{"start":{"line":29,"column":37},"end":{"line":29,"column":59}}]},"7":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":13},"end":{"line":35,"column":13}},{"start":{"line":35,"column":13},"end":{"line":35,"column":13}}]},"8":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":17},"end":{"line":35,"column":41}},{"start":{"line":35,"column":45},"end":{"line":35,"column":67}}]},"9":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":13},"end":{"line":40,"column":13}},{"start":{"line":40,"column":13},"end":{"line":40,"column":13}}]},"10":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":17},"end":{"line":40,"column":36}},{"start":{"line":40,"column":40},"end":{"line":40,"column":57}}]},"11":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":13},"end":{"line":45,"column":13}},{"start":{"line":45,"column":13},"end":{"line":45,"column":13}}]},"12":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":17},"end":{"line":45,"column":42}},{"start":{"line":46,"column":17},"end":{"line":46,"column":30}},{"start":{"line":47,"column":17},"end":{"line":47,"column":38}}]},"13":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]}},"code":["var isArray = Array.isArray;","var isPathValue = require(\"./../support/isPathValue\");","var isJSONGraphEnvelope = require(\"./../support/isJSONGraphEnvelope\");","var isJSONEnvelope = require(\"./../support/isJSONEnvelope\");","var pathSyntax = require(\"falcor-path-syntax\");","","/**"," *"," * @param {Object} allowedInput - allowedInput is a map of input styles"," * that are allowed"," * @private"," */","module.exports = function validateInput(args, allowedInput, method) {","    for (var i = 0, len = args.length; i < len; ++i) {","        var arg = args[i];","        var valid = false;","","        // Path","        if (isArray(arg) && allowedInput.path) {","            valid = true;","        }","","        // Path Syntax","        else if (typeof arg === \"string\" && allowedInput.pathSyntax) {","            valid = true;","        }","","        // Path Value","        else if (isPathValue(arg) && allowedInput.pathValue) {","            arg.path = pathSyntax.fromPath(arg.path);","            valid = true;","        }","","        // jsonGraph {jsonGraph: { ... }, paths: [ ... ]}","        else if (isJSONGraphEnvelope(arg) && allowedInput.jsonGraph) {","            valid = true;","        }","","        // json env {json: {...}}","        else if (isJSONEnvelope(arg) && allowedInput.json) {","            valid = true;","        }","","        // selector functions","        else if (typeof arg === \"function\" &&","                 i + 1 === len &&","                 allowedInput.selector) {","            valid = true;","        }","","        if (!valid) {","            return new Error(\"Unrecognized argument \" + (typeof arg) + \" [\" + String(arg) + \"] \" + \"to Model#\" + method + \"\");","        }","    }","    return true;","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"13":1,"14":0,"15":0,"16":0,"19":0,"20":0,"24":0,"25":0,"29":0,"30":0,"31":0,"35":0,"36":0,"40":0,"41":0,"45":0,"48":0,"51":0,"52":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getCache.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getCache.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"getCache","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":42}}},"2":{"name":"cloneBoxedValue","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}}},"3":{"name":"_copyCache","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":40}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":27}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":16},"end":{"line":47,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":59}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":58}},"3":{"start":{"line":7,"column":0},"end":{"line":12,"column":2}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":17}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":27}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":15}},"7":{"start":{"line":14,"column":0},"end":{"line":31,"column":1}},"8":{"start":{"line":15,"column":4},"end":{"line":15,"column":25}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":39}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":12}},"11":{"start":{"line":19,"column":4},"end":{"line":19,"column":10}},"12":{"start":{"line":20,"column":4},"end":{"line":20,"column":10}},"13":{"start":{"line":22,"column":4},"end":{"line":28,"column":5}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":22}},"15":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"16":{"start":{"line":26,"column":12},"end":{"line":26,"column":47}},"17":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"18":{"start":{"line":33,"column":0},"end":{"line":72,"column":1}},"19":{"start":{"line":36,"column":4},"end":{"line":71,"column":11}},"20":{"start":{"line":45,"column":12},"end":{"line":45,"column":48}},"21":{"start":{"line":48,"column":12},"end":{"line":48,"column":38}},"22":{"start":{"line":49,"column":12},"end":{"line":49,"column":35}},"23":{"start":{"line":51,"column":12},"end":{"line":53,"column":13}},"24":{"start":{"line":52,"column":16},"end":{"line":52,"column":40}},"25":{"start":{"line":56,"column":12},"end":{"line":68,"column":13}},"26":{"start":{"line":57,"column":16},"end":{"line":57,"column":86}},"27":{"start":{"line":58,"column":16},"end":{"line":58,"column":66}},"28":{"start":{"line":59,"column":16},"end":{"line":59,"column":26}},"29":{"start":{"line":60,"column":16},"end":{"line":64,"column":17}},"30":{"start":{"line":61,"column":20},"end":{"line":61,"column":55}},"31":{"start":{"line":63,"column":20},"end":{"line":63,"column":44}},"32":{"start":{"line":66,"column":16},"end":{"line":66,"column":33}},"33":{"start":{"line":67,"column":16},"end":{"line":67,"column":23}},"34":{"start":{"line":70,"column":12},"end":{"line":70,"column":48}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"2":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":19},"end":{"line":45,"column":36}},{"start":{"line":45,"column":40},"end":{"line":45,"column":47}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":12}},{"start":{"line":51,"column":12},"end":{"line":51,"column":12}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":56,"column":12}},{"start":{"line":56,"column":12},"end":{"line":56,"column":12}}]},"5":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":31},"end":{"line":57,"column":46}},{"start":{"line":57,"column":50},"end":{"line":57,"column":85}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":16},"end":{"line":60,"column":16}},{"start":{"line":60,"column":16},"end":{"line":60,"column":16}}]},"7":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":20},"end":{"line":60,"column":28}},{"start":{"line":60,"column":32},"end":{"line":60,"column":54}}]}},"code":["var $modelCreated = require(\"./../internal/model-created\");","var isInternalKey = require(\"./../support/isInternalKey\");","","/**"," * decends and copies the cache."," */","module.exports = function getCache(cache) {","    var out = {};","    _copyCache(cache, out);","","    return out;","};","","function cloneBoxedValue(boxedValue) {","    var clonedValue = {};","","    var keys = Object.keys(boxedValue);","    var key;","    var i;","    var l;","","    for (i = 0, l = keys.length; i < l; i++) {","        key = keys[i];","","        if (!isInternalKey(key)) {","            clonedValue[key] = boxedValue[key];","        }","    }","","    return clonedValue;","}","","function _copyCache(node, out, fromKey) {","    // copy and return","","    Object.","        keys(node).","        filter(function(k) {","            // Its not an internal key and the node has a value.  In the cache","            // there are 3 possibilities for values.","            // 1: A branch node.","            // 2: A $type-value node.","            // 3: undefined","            // We will strip out 3","            return !isInternalKey(k) && node[k];","        }).","        forEach(function(key) {","            var cacheNext = node[key];","            var outNext = out[key];","","            if (!outNext) {","                outNext = out[key] = {};","            }","","            // Paste the node into the out cache.","            if (cacheNext.$type) {","                var isObject = cacheNext.value && typeof cacheNext.value === \"object\";","                var isUserCreatedcacheNext = !node[$modelCreated];","                var value;","                if (isObject || isUserCreatedcacheNext) {","                    value = cloneBoxedValue(cacheNext);","                } else {","                    value = cacheNext.value;","                }","","                out[key] = value;","                return;","            }","","            _copyCache(cacheNext, outNext, key);","        });","}",""],"l":{"1":1,"2":1,"7":1,"8":0,"9":0,"11":0,"14":1,"15":0,"17":0,"18":0,"19":0,"20":0,"22":0,"23":0,"25":0,"26":0,"30":0,"33":1,"36":0,"45":0,"48":0,"49":0,"51":0,"52":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"66":0,"67":0,"70":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isInternalKey.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isInternalKey.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isInternalKey","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":10,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":11,"column":4},"end":{"line":11,"column":62}}},"branchMap":{"1":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":25}},{"start":{"line":11,"column":31},"end":{"line":11,"column":32}},{"start":{"line":11,"column":37},"end":{"line":11,"column":59}}]}},"code":["var prefix = require(\"./../internal/prefix\");","","/**"," * Determined if the key passed in is an internal key."," *"," * @param {String} x The key"," * @private"," * @returns {Boolean}"," */","module.exports = function isInternalKey(x) {","    return (x === \"$size\") || (x && (x.charAt(0) === prefix));","};",""],"l":{"1":1,"10":1,"11":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/validInput.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/validInput.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":2}}},"branchMap":{},"code":["module.exports = {","    path: true,","    pathSyntax: true","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"get","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":32}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":33},"end":{"line":17,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":50}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":46}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":61}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"6":{"start":{"line":12,"column":0},"end":{"line":24,"column":2}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":63}},"8":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"9":{"start":{"line":17,"column":8},"end":{"line":19,"column":11}},"10":{"start":{"line":18,"column":12},"end":{"line":18,"column":27}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":60}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":40}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]}},"code":["var pathSyntax = require(\"falcor-path-syntax\");","var ModelResponse = require(\"./../ModelResponse\");","var GET_VALID_INPUT = require(\"./validInput\");","var validateInput = require(\"./../../support/validateInput\");","var GetResponse = require(\"./GetResponse\");","","/**"," * Performs a get on the cache and if there are missing paths"," * then the request will be forwarded to the get request cycle."," * @private"," */","module.exports = function get() {","    // Validates the input.  If the input is not pathSets or strings then we","    // will onError.","    var out = validateInput(arguments, GET_VALID_INPUT, \"get\");","    if (out !== true) {","        return new ModelResponse(function(o) {","            o.onError(out);","        });","    }","","    var paths = pathSyntax.fromPathsOrPathValues(arguments);","    return new GetResponse(this, paths);","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"12":1,"15":0,"16":0,"17":0,"18":0,"22":0,"23":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/getWithPaths.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/get/getWithPaths.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"getWithPaths","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":43}},"2":{"start":{"line":8,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":40}}},"branchMap":{},"code":["var GetResponse = require(\"./GetResponse\");","","/**"," * Performs a get on the cache and if there are missing paths"," * then the request will be forwarded to the get request cycle."," * @private"," */","module.exports = function getWithPaths(paths) {","    return new GetResponse(this, paths);","};",""],"l":{"1":1,"8":1,"9":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/deref/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/deref/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"deref","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":46}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":31},"end":{"line":21,"column":42}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":12},"end":{"line":24,"column":33}}},"4":{"name":"getNextBoundModel","line":47,"loc":{"start":{"line":47,"column":28},"end":{"line":47,"column":57}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":27},"end":{"line":55,"column":39}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":42},"end":{"line":59,"column":57}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":43},"end":{"line":69,"column":54}}},"8":{"name":"(anonymous_8)","line":75,"loc":{"start":{"line":75,"column":23},"end":{"line":75,"column":35}}},"9":{"name":"derefSync","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":4,"column":0},"end":{"line":79,"column":2}},"4":{"start":{"line":6,"column":4},"end":{"line":6,"column":21}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":24}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":42}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":38}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":54}},"9":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":75}},"11":{"start":{"line":17,"column":4},"end":{"line":19,"column":5}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":73}},"13":{"start":{"line":21,"column":4},"end":{"line":78,"column":7}},"14":{"start":{"line":22,"column":8},"end":{"line":22,"column":43}},"15":{"start":{"line":25,"column":8},"end":{"line":76,"column":9}},"16":{"start":{"line":26,"column":12},"end":{"line":56,"column":13}},"17":{"start":{"line":27,"column":16},"end":{"line":27,"column":64}},"18":{"start":{"line":30,"column":16},"end":{"line":55,"column":54}},"19":{"start":{"line":50,"column":24},"end":{"line":50,"column":59}},"20":{"start":{"line":55,"column":41},"end":{"line":55,"column":50}},"21":{"start":{"line":57,"column":12},"end":{"line":57,"column":52}},"22":{"start":{"line":58,"column":15},"end":{"line":76,"column":9}},"23":{"start":{"line":59,"column":12},"end":{"line":61,"column":15}},"24":{"start":{"line":60,"column":16},"end":{"line":60,"column":46}},"25":{"start":{"line":64,"column":12},"end":{"line":75,"column":50}},"26":{"start":{"line":70,"column":20},"end":{"line":70,"column":55}},"27":{"start":{"line":75,"column":37},"end":{"line":75,"column":46}},"28":{"start":{"line":77,"column":8},"end":{"line":77,"column":37}},"29":{"start":{"line":81,"column":0},"end":{"line":96,"column":1}},"30":{"start":{"line":82,"column":4},"end":{"line":82,"column":14}},"31":{"start":{"line":83,"column":4},"end":{"line":83,"column":30}},"32":{"start":{"line":84,"column":4},"end":{"line":92,"column":5}},"33":{"start":{"line":85,"column":8},"end":{"line":85,"column":35}},"34":{"start":{"line":86,"column":8},"end":{"line":86,"column":44}},"35":{"start":{"line":88,"column":8},"end":{"line":88,"column":18}},"36":{"start":{"line":89,"column":8},"end":{"line":89,"column":29}},"37":{"start":{"line":91,"column":8},"end":{"line":91,"column":35}},"38":{"start":{"line":93,"column":4},"end":{"line":95,"column":36}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":12}},{"start":{"line":26,"column":12},"end":{"line":26,"column":12}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":15},"end":{"line":58,"column":15}},{"start":{"line":58,"column":15},"end":{"line":58,"column":15}}]},"5":{"line":93,"type":"cond-expr","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":34}},{"start":{"line":95,"column":8},"end":{"line":95,"column":35}}]}},"code":["var Rx = require(\"rx/dist/rx\");","var pathSyntax = require(\"falcor-path-syntax\");","","module.exports = function deref(boundPathArg) {","","    var model = this;","    var pathsIndex = -1;","    var pathsCount = arguments.length - 1;","    var paths = new Array(pathsCount);","","    var boundPath = pathSyntax.fromPath(boundPathArg);","","    while (++pathsIndex < pathsCount) {","        paths[pathsIndex] = pathSyntax.fromPath(arguments[pathsIndex + 1]);","    }","","    if (pathsCount === 0) {","        throw new Error(\"Model#deref requires at least one value path.\");","    }","","    return Rx.Observable.defer(function() {","        return derefSync(model, boundPath);","    }).","    flatMap(function(boundModel) {","        if (Boolean(boundModel)) {","            if (pathsCount > 0) {","                var ofBoundModel = Rx.Observable.of(boundModel);","","                // Ensures that all the leaves are in the cache.","                return boundModel.get.","                    apply(boundModel, paths).","","                    // Ensures that if only errors occur, then the concat","                    // will still run.","                    catch(Rx.Observable.empty()).","","                    // Ensures that the last thing returned by this operation is","                    // the bound model.","                    concat(ofBoundModel).","","                    // Plucks the last value from this stream, which should be","                    // the bound model.","                    last().","","                    // Chooses the new deref or passes on the invalid model","                    // error.","                    flatMap(function getNextBoundModel() {","","                        // TODO: Should we onError the error from derefSync?","                        return derefSync(model, boundPath);","                    }).","","                    // The previous operation can undefine the cache, so we need","                    // to ensure that we don't return and undefined model.","                    filter(function(x) { return x; });","            }","            return Rx.Observable.return(boundModel);","        } else if (pathsCount > 0) {","            var modifiedPaths = paths.map(function(path) {","                return boundPath.concat(path);","            });","","            // Fill the cache with the request.","            return model.","                get.apply(model, modifiedPaths).","","                // We concat the deref sync operation afterwords.","                // Any errors will be forwarded onto the caller.","                concat(Rx.Observable.defer(function() {","                    return derefSync(model, boundPath);","                })).","                last().","","                // 'x' has to exist.  Cannot be falsy.  Must be model.","                filter(function(x) { return x; });","        }","        return Rx.Observable.empty();","    });","};","","function derefSync(model, boundPath) {","    var value;","    var errorHappened = false;","    try {","        ++model._root.syncRefCount;","        value = model._derefSync(boundPath);","    } catch (e) {","        value = e;","        errorHappened = true;","    } finally {","        --model._root.syncRefCount;","    }","    return errorHappened ?","        Rx.Observable.throw(value) :","        Rx.Observable.return(value);","}",""],"l":{"1":1,"2":1,"4":1,"6":0,"7":0,"8":0,"9":0,"11":0,"13":0,"14":0,"17":0,"18":0,"21":0,"22":0,"25":0,"26":0,"27":0,"30":0,"50":0,"55":0,"57":0,"58":0,"59":0,"60":0,"64":0,"70":0,"75":0,"77":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"88":0,"89":0,"91":0,"93":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getValue.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"getValue","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":41}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":37},"end":{"line":11,"column":49}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":29},"end":{"line":19,"column":43}}},"4":{"name":"(anonymous_4)","line":20,"loc":{"start":{"line":20,"column":46},"end":{"line":20,"column":61}}},"5":{"name":"(anonymous_5)","line":29,"loc":{"start":{"line":29,"column":11},"end":{"line":29,"column":25}}},"6":{"name":"(anonymous_6)","line":31,"loc":{"start":{"line":31,"column":11},"end":{"line":31,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":59}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":47}},"3":{"start":{"line":4,"column":0},"end":{"line":35,"column":2}},"4":{"start":{"line":5,"column":4},"end":{"line":5,"column":47}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":20}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":36}},"7":{"start":{"line":8,"column":4},"end":{"line":16,"column":5}},"8":{"start":{"line":9,"column":8},"end":{"line":15,"column":9}},"9":{"start":{"line":11,"column":12},"end":{"line":13,"column":15}},"10":{"start":{"line":12,"column":16},"end":{"line":12,"column":67}},"11":{"start":{"line":18,"column":4},"end":{"line":18,"column":20}},"12":{"start":{"line":19,"column":4},"end":{"line":34,"column":7}},"13":{"start":{"line":20,"column":8},"end":{"line":33,"column":11}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":33}},"15":{"start":{"line":22,"column":12},"end":{"line":22,"column":27}},"16":{"start":{"line":23,"column":12},"end":{"line":23,"column":43}},"17":{"start":{"line":25,"column":12},"end":{"line":27,"column":13}},"18":{"start":{"line":26,"column":16},"end":{"line":26,"column":47}},"19":{"start":{"line":28,"column":12},"end":{"line":28,"column":29}},"20":{"start":{"line":30,"column":12},"end":{"line":30,"column":29}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":30}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":8}},{"start":{"line":9,"column":8},"end":{"line":9,"column":8}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":19},"end":{"line":25,"column":23}},{"start":{"line":25,"column":27},"end":{"line":25,"column":43}}]}},"code":["var ModelResponse = require(\"./../response/ModelResponse\");","var pathSyntax = require(\"falcor-path-syntax\");","","module.exports = function getValue(path) {","    var parsedPath = pathSyntax.fromPath(path);","    var pathIdx = 0;","    var pathLen = parsedPath.length;","    while (++pathIdx < pathLen) {","        if (typeof parsedPath[pathIdx] === \"object\") {","            /* eslint-disable no-loop-func */","            return new ModelResponse(function(o) {","                o.onError(new Error(\"Paths must be simple paths\"));","            });","            /* eslint-enable no-loop-func */","        }","    }","","    var self = this;","    return new ModelResponse(function(obs) {","        return self.get(parsedPath).subscribe(function(data) {","            var curr = data.json;","            var depth = -1;","            var length = parsedPath.length;","","            while (curr && ++depth < length) {","                curr = curr[parsedPath[depth]];","            }","            obs.onNext(curr);","        }, function(err) {","            obs.onError(err);","        }, function() {","            obs.onCompleted();","        });","    });","};",""],"l":{"1":1,"2":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"11":0,"12":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"30":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/setValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/setValue.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"setValue","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":54}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":37},"end":{"line":13,"column":49}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":29},"end":{"line":20,"column":43}}},"4":{"name":"(anonymous_4)","line":21,"loc":{"start":{"line":21,"column":42},"end":{"line":21,"column":57}}},"5":{"name":"(anonymous_5)","line":30,"loc":{"start":{"line":30,"column":11},"end":{"line":30,"column":25}}},"6":{"name":"(anonymous_6)","line":32,"loc":{"start":{"line":32,"column":11},"end":{"line":32,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":59}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"4":{"start":{"line":5,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":84}},"6":{"start":{"line":7,"column":4},"end":{"line":7,"column":20}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":26}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":30}},"9":{"start":{"line":10,"column":4},"end":{"line":18,"column":5}},"10":{"start":{"line":11,"column":8},"end":{"line":17,"column":9}},"11":{"start":{"line":13,"column":12},"end":{"line":15,"column":15}},"12":{"start":{"line":14,"column":16},"end":{"line":14,"column":67}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":20}},"14":{"start":{"line":20,"column":4},"end":{"line":35,"column":7}},"15":{"start":{"line":21,"column":8},"end":{"line":34,"column":11}},"16":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"17":{"start":{"line":23,"column":12},"end":{"line":23,"column":27}},"18":{"start":{"line":24,"column":12},"end":{"line":24,"column":37}},"19":{"start":{"line":26,"column":12},"end":{"line":28,"column":13}},"20":{"start":{"line":27,"column":16},"end":{"line":27,"column":41}},"21":{"start":{"line":29,"column":12},"end":{"line":29,"column":29}},"22":{"start":{"line":31,"column":12},"end":{"line":31,"column":29}},"23":{"start":{"line":33,"column":12},"end":{"line":33,"column":30}}},"branchMap":{"1":{"line":6,"type":"cond-expr","locations":[{"start":{"line":6,"column":39},"end":{"line":6,"column":46}},{"start":{"line":6,"column":49},"end":{"line":6,"column":83}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":11,"column":8}},{"start":{"line":11,"column":8},"end":{"line":11,"column":8}}]},"3":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":19},"end":{"line":26,"column":23}},{"start":{"line":26,"column":27},"end":{"line":26,"column":43}}]}},"code":["var jsong = require(\"falcor-json-graph\");","var ModelResponse = require(\"./../response/ModelResponse\");","var isPathValue = require(\"./../support/isPathValue\");","","module.exports = function setValue(pathArg, valueArg) {","    var value = isPathValue(pathArg) ? pathArg : jsong.pathValue(pathArg, valueArg);","    var pathIdx = 0;","    var path = value.path;","    var pathLen = path.length;","    while (++pathIdx < pathLen) {","        if (typeof path[pathIdx] === \"object\") {","            /* eslint-disable no-loop-func */","            return new ModelResponse(function(o) {","                o.onError(new Error(\"Paths must be simple paths\"));","            });","            /* eslint-enable no-loop-func */","        }","    }","    var self = this;","    return new ModelResponse(function(obs) {","        return self._set(value).subscribe(function(data) {","            var curr = data.json;","            var depth = -1;","            var length = path.length;","","            while (curr && ++depth < length) {","                curr = curr[path[depth]];","            }","            obs.onNext(curr);","        }, function(err) {","            obs.onError(err);","        }, function() {","            obs.onCompleted();","        });","    });","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"13":0,"14":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"26":0,"27":0,"29":0,"31":0,"33":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/sync.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/sync.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"getValueSync","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":3,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":44}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":8},"end":{"line":6,"column":81}},"6":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":39}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":83}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":4}},{"start":{"line":5,"column":4},"end":{"line":5,"column":4}}]},"2":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]},"3":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":11},"end":{"line":11,"column":42}},{"start":{"line":11,"column":46},"end":{"line":11,"column":82}}]}},"code":["var pathSyntax = require(\"falcor-path-syntax\");","","module.exports = function getValueSync(pathArg) {","    var path = pathSyntax.fromPath(pathArg);","    if (Array.isArray(path) === false) {","        throw new Error(\"Model#getValueSync must be called with an Array path.\");","    }","    if (this._path.length) {","        path = this._path.concat(path);","    }","    return this._syncCheck(\"getValueSync\") && this._getValueSync(this, path).value;","};",""],"l":{"1":1,"3":1,"4":0,"5":0,"6":0,"8":0,"9":0,"11":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/sync.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/set/sync.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"setValueSync","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":91}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":54}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"4":{"start":{"line":5,"column":0},"end":{"line":39,"column":2}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":44}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":25}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":41}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":35}},"9":{"start":{"line":12,"column":4},"end":{"line":21,"column":5}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":35}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":30}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":21}},"13":{"start":{"line":17,"column":8},"end":{"line":20,"column":10}},"14":{"start":{"line":23,"column":4},"end":{"line":25,"column":5}},"15":{"start":{"line":24,"column":8},"end":{"line":24,"column":81}},"16":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"17":{"start":{"line":28,"column":8},"end":{"line":28,"column":50}},"18":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":44}},"20":{"start":{"line":35,"column":4},"end":{"line":38,"column":5}},"21":{"start":{"line":36,"column":8},"end":{"line":36,"column":37}},"22":{"start":{"line":37,"column":8},"end":{"line":37,"column":58}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]}},"code":["var pathSyntax = require(\"falcor-path-syntax\");","var isPathValue = require(\"./../support/isPathValue\");","var setPathValues = require(\"./../set/setPathValues\");","","module.exports = function setValueSync(pathArg, valueArg, errorSelectorArg, comparatorArg) {","","    var path = pathSyntax.fromPath(pathArg);","    var value = valueArg;","    var errorSelector = errorSelectorArg;","    var comparator = comparatorArg;","","    if (isPathValue(path)) {","        comparator = errorSelector;","        errorSelector = value;","        value = path;","    } else {","        value = {","            path: path,","            value: value","        };","    }","","    if (isPathValue(value) === false) {","        throw new Error(\"Model#setValueSync must be called with an Array path.\");","    }","","    if (typeof errorSelector !== \"function\") {","        errorSelector = this._root._errorSelector;","    }","","    if (typeof comparator !== \"function\") {","        comparator = this._root._comparator;","    }","","    if (this._syncCheck(\"setValueSync\")) {","        setPathValues(this, [value]);","        return this._getValueSync(this, value.path).value;","    }","};",""],"l":{"1":1,"2":1,"3":1,"5":1,"7":0,"8":0,"9":0,"10":0,"12":0,"13":0,"14":0,"15":0,"17":0,"23":0,"24":0,"27":0,"28":0,"31":0,"32":0,"35":0,"36":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/deref/sync.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/deref/sync.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"derefSync","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":47}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":54}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":65}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":39}},"5":{"start":{"line":6,"column":0},"end":{"line":32,"column":2}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":54}},"7":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":78}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":78}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":31}},"11":{"start":{"line":17,"column":4},"end":{"line":17,"column":32}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":33}},"13":{"start":{"line":22,"column":4},"end":{"line":25,"column":5}},"14":{"start":{"line":24,"column":8},"end":{"line":24,"column":25}},"15":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":38}},"17":{"start":{"line":31,"column":4},"end":{"line":31,"column":40}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":14}},{"start":{"line":22,"column":18},"end":{"line":22,"column":36}},{"start":{"line":23,"column":8},"end":{"line":23,"column":28}},{"start":{"line":23,"column":32},"end":{"line":23,"column":56}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]}},"code":["var pathSyntax = require(\"falcor-path-syntax\");","var getBoundValue = require(\"./../get/getBoundValue\");","var InvalidModelError = require(\"./../errors/InvalidModelError\");","var $atom = require(\"./../types/atom\");","","module.exports = function derefSync(boundPathArg) {","","    var boundPath = pathSyntax.fromPath(boundPathArg);","","    if (!Array.isArray(boundPath)) {","        throw new Error(\"Model#derefSync must be called with an Array path.\");","    }","","    var boundValue = getBoundValue(this, this._path.concat(boundPath), false);","","    var path = boundValue.path;","    var node = boundValue.value;","    var found = boundValue.found;","","    // If the node is not found or the node is found but undefined is returned,","    // this happens when a reference is expired.","    if (!found || node === undefined ||","        node.$type === $atom && node.value === undefined) {","        return undefined;","    }","","    if (node.$type) {","        throw new InvalidModelError();","    }","","    return this._clone({ _path: path });","};",""],"l":{"1":1,"2":1,"3":1,"4":1,"6":1,"8":0,"10":0,"11":0,"14":0,"16":0,"17":0,"18":0,"22":0,"24":0,"27":0,"28":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getVersion.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/getVersion.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"_getVersion","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":5,"column":4},"end":{"line":9,"column":25}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":40}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":18},"end":{"line":10,"column":21}},{"start":{"line":10,"column":25},"end":{"line":10,"column":39}}]},"2":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":31},"end":{"line":11,"column":33}},{"start":{"line":11,"column":36},"end":{"line":11,"column":43}}]}},"code":["var __version = require(\"./../internal/version\");","","module.exports = function _getVersion(model, path) {","    // ultra fast clone for boxed values.","    var gen = model._getValueSync({","        _boxed: true,","        _root: model._root,","        _treatErrorsAsValues: model._treatErrorsAsValues","    }, path, true).value;","    var version = gen && gen[__version];","    return (version == null) ? -1 : version;","};",""],"l":{"1":1,"3":1,"5":0,"10":0,"11":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/invalidate/invalidatePathSets.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/invalidate/invalidatePathSets.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"invalidatePathSets","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":59}}},"2":{"name":"invalidatePathSet","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":66,"column":27}}},"3":{"name":"invalidateReference","line":96,"loc":{"start":{"line":96,"column":0},"end":{"line":96,"column":64}}},"4":{"name":"invalidateNode","line":147,"loc":{"start":{"line":147,"column":0},"end":{"line":150,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":49}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"8":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":54}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":42}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":46}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":50}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":54}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":52}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":63}},"17":{"start":{"line":20,"column":0},"end":{"line":20,"column":64}},"18":{"start":{"line":21,"column":0},"end":{"line":21,"column":70}},"19":{"start":{"line":22,"column":0},"end":{"line":22,"column":80}},"20":{"start":{"line":31,"column":0},"end":{"line":62,"column":2}},"21":{"start":{"line":33,"column":4},"end":{"line":33,"column":32}},"22":{"start":{"line":34,"column":4},"end":{"line":34,"column":24}},"23":{"start":{"line":35,"column":4},"end":{"line":35,"column":36}},"24":{"start":{"line":36,"column":4},"end":{"line":36,"column":37}},"25":{"start":{"line":37,"column":4},"end":{"line":37,"column":28}},"26":{"start":{"line":38,"column":4},"end":{"line":38,"column":32}},"27":{"start":{"line":39,"column":4},"end":{"line":39,"column":72}},"28":{"start":{"line":40,"column":4},"end":{"line":40,"column":41}},"29":{"start":{"line":41,"column":4},"end":{"line":41,"column":42}},"30":{"start":{"line":43,"column":4},"end":{"line":43,"column":23}},"31":{"start":{"line":44,"column":4},"end":{"line":44,"column":33}},"32":{"start":{"line":46,"column":4},"end":{"line":54,"column":5}},"33":{"start":{"line":48,"column":8},"end":{"line":48,"column":36}},"34":{"start":{"line":50,"column":8},"end":{"line":53,"column":10}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":38}},"36":{"start":{"line":57,"column":4},"end":{"line":57,"column":47}},"37":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"38":{"start":{"line":60,"column":8},"end":{"line":60,"column":28}},"39":{"start":{"line":64,"column":0},"end":{"line":94,"column":1}},"40":{"start":{"line":68,"column":4},"end":{"line":68,"column":18}},"41":{"start":{"line":69,"column":4},"end":{"line":69,"column":41}},"42":{"start":{"line":70,"column":4},"end":{"line":70,"column":29}},"43":{"start":{"line":71,"column":4},"end":{"line":71,"column":42}},"44":{"start":{"line":73,"column":4},"end":{"line":93,"column":25}},"45":{"start":{"line":74,"column":8},"end":{"line":78,"column":10}},"46":{"start":{"line":79,"column":8},"end":{"line":79,"column":34}},"47":{"start":{"line":80,"column":8},"end":{"line":80,"column":36}},"48":{"start":{"line":81,"column":8},"end":{"line":91,"column":9}},"49":{"start":{"line":82,"column":12},"end":{"line":90,"column":13}},"50":{"start":{"line":83,"column":16},"end":{"line":87,"column":18}},"51":{"start":{"line":88,"column":19},"end":{"line":90,"column":13}},"52":{"start":{"line":89,"column":16},"end":{"line":89,"column":81}},"53":{"start":{"line":92,"column":8},"end":{"line":92,"column":42}},"54":{"start":{"line":96,"column":0},"end":{"line":145,"column":1}},"55":{"start":{"line":98,"column":4},"end":{"line":101,"column":5}},"56":{"start":{"line":99,"column":8},"end":{"line":99,"column":39}},"57":{"start":{"line":100,"column":8},"end":{"line":100,"column":33}},"58":{"start":{"line":103,"column":4},"end":{"line":103,"column":23}},"59":{"start":{"line":105,"column":4},"end":{"line":105,"column":25}},"60":{"start":{"line":106,"column":4},"end":{"line":106,"column":31}},"61":{"start":{"line":107,"column":4},"end":{"line":107,"column":22}},"62":{"start":{"line":109,"column":4},"end":{"line":109,"column":27}},"63":{"start":{"line":111,"column":4},"end":{"line":142,"column":5}},"64":{"start":{"line":112,"column":8},"end":{"line":112,"column":40}},"65":{"start":{"line":115,"column":8},"end":{"line":115,"column":22}},"66":{"start":{"line":116,"column":8},"end":{"line":116,"column":41}},"67":{"start":{"line":118,"column":8},"end":{"line":118,"column":29}},"68":{"start":{"line":120,"column":8},"end":{"line":133,"column":34}},"69":{"start":{"line":121,"column":12},"end":{"line":121,"column":39}},"70":{"start":{"line":122,"column":12},"end":{"line":122,"column":39}},"71":{"start":{"line":123,"column":12},"end":{"line":127,"column":14}},"72":{"start":{"line":128,"column":12},"end":{"line":128,"column":30}},"73":{"start":{"line":129,"column":12},"end":{"line":131,"column":13}},"74":{"start":{"line":130,"column":16},"end":{"line":130,"column":31}},"75":{"start":{"line":132,"column":12},"end":{"line":132,"column":32}},"76":{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},"77":{"start":{"line":136,"column":12},"end":{"line":136,"column":51}},"78":{"start":{"line":137,"column":12},"end":{"line":137,"column":46}},"79":{"start":{"line":138,"column":12},"end":{"line":138,"column":47}},"80":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"81":{"start":{"line":140,"column":12},"end":{"line":140,"column":45}},"82":{"start":{"line":144,"column":4},"end":{"line":144,"column":26}},"83":{"start":{"line":147,"column":0},"end":{"line":184,"column":1}},"84":{"start":{"line":152,"column":4},"end":{"line":152,"column":26}},"85":{"start":{"line":154,"column":4},"end":{"line":166,"column":5}},"86":{"start":{"line":156,"column":8},"end":{"line":156,"column":77}},"87":{"start":{"line":158,"column":8},"end":{"line":158,"column":26}},"88":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"89":{"start":{"line":161,"column":12},"end":{"line":161,"column":27}},"90":{"start":{"line":164,"column":8},"end":{"line":164,"column":28}},"91":{"start":{"line":165,"column":8},"end":{"line":165,"column":26}},"92":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"93":{"start":{"line":169,"column":8},"end":{"line":169,"column":30}},"94":{"start":{"line":172,"column":4},"end":{"line":181,"column":5}},"95":{"start":{"line":173,"column":8},"end":{"line":177,"column":9}},"96":{"start":{"line":174,"column":12},"end":{"line":174,"column":78}},"97":{"start":{"line":175,"column":15},"end":{"line":177,"column":9}},"98":{"start":{"line":176,"column":12},"end":{"line":176,"column":30}},"99":{"start":{"line":179,"column":8},"end":{"line":179,"column":22}},"100":{"start":{"line":180,"column":8},"end":{"line":180,"column":27}},"101":{"start":{"line":183,"column":4},"end":{"line":183,"column":26}}},"branchMap":{"1":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":30},"end":{"line":39,"column":63}},{"start":{"line":39,"column":66},"end":{"line":39,"column":71}}]},"2":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":17},"end":{"line":40,"column":31}},{"start":{"line":40,"column":35},"end":{"line":40,"column":40}}]},"3":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"4":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":37}},{"start":{"line":59,"column":41},"end":{"line":59,"column":70}}]},"5":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":8}},{"start":{"line":81,"column":8},"end":{"line":81,"column":8}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":82,"column":12}},{"start":{"line":82,"column":12},"end":{"line":82,"column":12}}]},"7":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":19},"end":{"line":88,"column":19}},{"start":{"line":88,"column":19},"end":{"line":88,"column":19}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"9":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"10":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":17},"end":{"line":112,"column":31}},{"start":{"line":112,"column":35},"end":{"line":112,"column":39}}]},"11":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":12}},{"start":{"line":129,"column":12},"end":{"line":129,"column":12}}]},"12":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"13":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":27},"end":{"line":136,"column":45}},{"start":{"line":136,"column":49},"end":{"line":136,"column":50}}]},"14":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":160,"column":8}},{"start":{"line":160,"column":8},"end":{"line":160,"column":8}}]},"15":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"16":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"17":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":8}},{"start":{"line":173,"column":8},"end":{"line":173,"column":8}}]},"18":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":15},"end":{"line":175,"column":15}},{"start":{"line":175,"column":15},"end":{"line":175,"column":15}}]}},"code":["var __key = require(\"./../internal/key\");","var __ref = require(\"./../internal/ref\");","var __parent = require(\"./../internal/parent\");","var __context = require(\"./../internal/context\");","var __version = require(\"./../internal/version\");","var __refIndex = require(\"./../internal/ref-index\");","var __refsLength = require(\"./../internal/refs-length\");","","var $ref = require(\"./../types/ref\");","","var getBoundValue = require(\"./../get/getBoundValue\");","","var promote = require(\"./../lru/promote\");","var getSize = require(\"./../support/getSize\");","var isExpired = require(\"./../support/isExpired\");","var isFunction = require(\"./../support/isFunction\");","var isPrimitive = require(\"./../support/isPrimitive\");","var expireNode = require(\"./../support/expireNode\");","var iterateKeySet = require(\"falcor-path-utils\").iterateKeySet;","var incrementVersion = require(\"./../support/incrementVersion\");","var updateNodeAncestors = require(\"./../support/updateNodeAncestors\");","var removeNodeAndDescendants = require(\"./../support/removeNodeAndDescendants\");","","/**"," * Invalidates a list of Paths in a JSON Graph."," * @function"," * @param {Object} model - the Model for which to insert the PathValues."," * @param {Array.<PathValue>} paths - the PathValues to set."," */","","module.exports = function invalidatePathSets(model, paths) {","","    var modelRoot = model._root;","    var lru = modelRoot;","    var expired = modelRoot.expired;","    var version = incrementVersion();","    var bound = model._path;","    var cache = modelRoot.cache;","    var node = bound.length ? getBoundValue(model, bound).value : cache;","    var parent = node[__parent] || cache;","    var initialVersion = cache[__version];","","    var pathIndex = -1;","    var pathCount = paths.length;","","    while (++pathIndex < pathCount) {","","        var path = paths[pathIndex];","","        invalidatePathSet(","            path, 0, cache, parent, node,","            version, expired, lru","        );","    }","","    var newVersion = cache[__version];","    var rootChangeHandler = modelRoot.onChange;","","    if (isFunction(rootChangeHandler) && initialVersion !== newVersion) {","        rootChangeHandler();","    }","};","","function invalidatePathSet(","    path, depth, root, parent, node,","    version, expired, lru) {","","    var note = {};","    var branch = depth < path.length - 1;","    var keySet = path[depth];","    var key = iterateKeySet(keySet, note);","","    do {","        var results = invalidateNode(","            root, parent, node,","            key, branch, false,","            version, expired, lru","        );","        var nextNode = results[0];","        var nextParent = results[1];","        if (nextNode) {","            if (branch) {","                invalidatePathSet(","                    path, depth + 1,","                    root, nextParent, nextNode,","                    version, expired, lru","                );","            } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {","                updateNodeAncestors(nextParent, getSize(nextNode), lru, version);","            }","        }","        key = iterateKeySet(keySet, note);","    } while (!note.done);","}","","function invalidateReference(root, node, version, expired, lru) {","","    if (isExpired(node)) {","        expireNode(node, expired, lru);","        return [undefined, root];","    }","","    promote(lru, node);","","    var container = node;","    var reference = node.value;","    var parent = root;","","    node = node[__context];","","    if (node != null) {","        parent = node[__parent] || root;","    } else {","","        var index = 0;","        var count = reference.length - 1;","","        parent = node = root;","","        do {","            var key = reference[index];","            var branch = index < count;","            var results = invalidateNode(","                root, parent, node,","                key, branch, true,","                version, expired, lru","            );","            node = results[0];","            if (isPrimitive(node)) {","                return results;","            }","            parent = results[1];","        } while (index++ < count);","","        if (container[__context] !== node) {","            var backRefs = node[__refsLength] || 0;","            node[__refsLength] = backRefs + 1;","            node[__ref + backRefs] = container;","            container[__context] = node;","            container[__refIndex] = backRefs;","        }","    }","","    return [node, parent];","}","","function invalidateNode(","    root, parent, node,","    key, branch, reference,","    version, expired, lru) {","","    var type = node.$type;","","    while (type === $ref) {","","        var results = invalidateReference(root, node, version, expired, lru);","","        node = results[0];","","        if (isPrimitive(node)) {","            return results;","        }","","        parent = results[1];","        type = node.$type;","    }","","    if (type !== void 0) {","        return [node, parent];","    }","","    if (key == null) {","        if (branch) {","            throw new Error(\"`null` is not allowed in branch key positions.\");","        } else if (node) {","            key = node[__key];","        }","    } else {","        parent = node;","        node = parent[key];","    }","","    return [node, parent];","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"11":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"31":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"46":0,"48":0,"50":0,"56":0,"57":0,"59":0,"60":0,"64":1,"68":0,"69":0,"70":0,"71":0,"73":0,"74":0,"79":0,"80":0,"81":0,"82":0,"83":0,"88":0,"89":0,"92":0,"96":1,"98":0,"99":0,"100":0,"103":0,"105":0,"106":0,"107":0,"109":0,"111":0,"112":0,"115":0,"116":0,"118":0,"120":0,"121":0,"122":0,"123":0,"128":0,"129":0,"130":0,"132":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"144":0,"147":1,"152":0,"154":0,"156":0,"158":0,"160":0,"161":0,"164":0,"165":0,"168":0,"169":0,"172":0,"173":0,"174":0,"175":0,"176":0,"179":0,"180":0,"183":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/invalidate/invalidatePathMaps.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/invalidate/invalidatePathMaps.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"invalidatePathMaps","line":33,"loc":{"start":{"line":33,"column":17},"end":{"line":33,"column":70}}},"2":{"name":"invalidatePathMap","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":113}}},"3":{"name":"invalidateReference","line":100,"loc":{"start":{"line":100,"column":0},"end":{"line":100,"column":98}}},"4":{"name":"invalidateNode","line":151,"loc":{"start":{"line":151,"column":0},"end":{"line":154,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":41}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":47}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":47}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":49}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":56}},"9":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":54}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":42}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":46}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":44}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":50}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":52}},"17":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}},"18":{"start":{"line":21,"column":0},"end":{"line":21,"column":52}},"19":{"start":{"line":22,"column":0},"end":{"line":22,"column":64}},"20":{"start":{"line":23,"column":0},"end":{"line":23,"column":70}},"21":{"start":{"line":24,"column":0},"end":{"line":24,"column":80}},"22":{"start":{"line":33,"column":0},"end":{"line":66,"column":2}},"23":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}},"24":{"start":{"line":36,"column":4},"end":{"line":36,"column":24}},"25":{"start":{"line":37,"column":4},"end":{"line":37,"column":36}},"26":{"start":{"line":38,"column":4},"end":{"line":38,"column":37}},"27":{"start":{"line":39,"column":4},"end":{"line":39,"column":43}},"28":{"start":{"line":40,"column":4},"end":{"line":40,"column":49}},"29":{"start":{"line":41,"column":4},"end":{"line":41,"column":28}},"30":{"start":{"line":42,"column":4},"end":{"line":42,"column":32}},"31":{"start":{"line":43,"column":4},"end":{"line":43,"column":72}},"32":{"start":{"line":44,"column":4},"end":{"line":44,"column":41}},"33":{"start":{"line":45,"column":4},"end":{"line":45,"column":42}},"34":{"start":{"line":47,"column":4},"end":{"line":47,"column":26}},"35":{"start":{"line":48,"column":4},"end":{"line":48,"column":47}},"36":{"start":{"line":50,"column":4},"end":{"line":58,"column":5}},"37":{"start":{"line":52,"column":8},"end":{"line":52,"column":61}},"38":{"start":{"line":54,"column":8},"end":{"line":57,"column":10}},"39":{"start":{"line":60,"column":4},"end":{"line":60,"column":38}},"40":{"start":{"line":61,"column":4},"end":{"line":61,"column":47}},"41":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"42":{"start":{"line":64,"column":8},"end":{"line":64,"column":28}},"43":{"start":{"line":68,"column":0},"end":{"line":98,"column":1}},"44":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"45":{"start":{"line":71,"column":8},"end":{"line":71,"column":15}},"46":{"start":{"line":74,"column":4},"end":{"line":97,"column":5}},"47":{"start":{"line":75,"column":8},"end":{"line":96,"column":9}},"48":{"start":{"line":76,"column":12},"end":{"line":76,"column":37}},"49":{"start":{"line":77,"column":12},"end":{"line":77,"column":57}},"50":{"start":{"line":78,"column":12},"end":{"line":82,"column":14}},"51":{"start":{"line":83,"column":12},"end":{"line":83,"column":38}},"52":{"start":{"line":84,"column":12},"end":{"line":84,"column":40}},"53":{"start":{"line":85,"column":12},"end":{"line":95,"column":13}},"54":{"start":{"line":86,"column":16},"end":{"line":94,"column":17}},"55":{"start":{"line":87,"column":20},"end":{"line":91,"column":22}},"56":{"start":{"line":92,"column":23},"end":{"line":94,"column":17}},"57":{"start":{"line":93,"column":20},"end":{"line":93,"column":85}},"58":{"start":{"line":100,"column":0},"end":{"line":149,"column":1}},"59":{"start":{"line":102,"column":4},"end":{"line":105,"column":5}},"60":{"start":{"line":103,"column":8},"end":{"line":103,"column":39}},"61":{"start":{"line":104,"column":8},"end":{"line":104,"column":33}},"62":{"start":{"line":107,"column":4},"end":{"line":107,"column":23}},"63":{"start":{"line":109,"column":4},"end":{"line":109,"column":25}},"64":{"start":{"line":110,"column":4},"end":{"line":110,"column":31}},"65":{"start":{"line":111,"column":4},"end":{"line":111,"column":22}},"66":{"start":{"line":113,"column":4},"end":{"line":113,"column":27}},"67":{"start":{"line":115,"column":4},"end":{"line":146,"column":5}},"68":{"start":{"line":116,"column":8},"end":{"line":116,"column":40}},"69":{"start":{"line":119,"column":8},"end":{"line":119,"column":22}},"70":{"start":{"line":120,"column":8},"end":{"line":120,"column":41}},"71":{"start":{"line":122,"column":8},"end":{"line":122,"column":29}},"72":{"start":{"line":124,"column":8},"end":{"line":137,"column":34}},"73":{"start":{"line":125,"column":12},"end":{"line":125,"column":39}},"74":{"start":{"line":126,"column":12},"end":{"line":126,"column":39}},"75":{"start":{"line":127,"column":12},"end":{"line":131,"column":14}},"76":{"start":{"line":132,"column":12},"end":{"line":132,"column":30}},"77":{"start":{"line":133,"column":12},"end":{"line":135,"column":13}},"78":{"start":{"line":134,"column":16},"end":{"line":134,"column":31}},"79":{"start":{"line":136,"column":12},"end":{"line":136,"column":32}},"80":{"start":{"line":139,"column":8},"end":{"line":145,"column":9}},"81":{"start":{"line":140,"column":12},"end":{"line":140,"column":51}},"82":{"start":{"line":141,"column":12},"end":{"line":141,"column":46}},"83":{"start":{"line":142,"column":12},"end":{"line":142,"column":47}},"84":{"start":{"line":143,"column":12},"end":{"line":143,"column":40}},"85":{"start":{"line":144,"column":12},"end":{"line":144,"column":45}},"86":{"start":{"line":148,"column":4},"end":{"line":148,"column":26}},"87":{"start":{"line":151,"column":0},"end":{"line":188,"column":1}},"88":{"start":{"line":156,"column":4},"end":{"line":156,"column":26}},"89":{"start":{"line":158,"column":4},"end":{"line":170,"column":5}},"90":{"start":{"line":160,"column":8},"end":{"line":160,"column":111}},"91":{"start":{"line":162,"column":8},"end":{"line":162,"column":26}},"92":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"93":{"start":{"line":165,"column":12},"end":{"line":165,"column":27}},"94":{"start":{"line":168,"column":8},"end":{"line":168,"column":28}},"95":{"start":{"line":169,"column":8},"end":{"line":169,"column":34}},"96":{"start":{"line":172,"column":4},"end":{"line":174,"column":5}},"97":{"start":{"line":173,"column":8},"end":{"line":173,"column":30}},"98":{"start":{"line":176,"column":4},"end":{"line":185,"column":5}},"99":{"start":{"line":177,"column":8},"end":{"line":181,"column":9}},"100":{"start":{"line":178,"column":12},"end":{"line":178,"column":78}},"101":{"start":{"line":179,"column":15},"end":{"line":181,"column":9}},"102":{"start":{"line":180,"column":12},"end":{"line":180,"column":30}},"103":{"start":{"line":183,"column":8},"end":{"line":183,"column":22}},"104":{"start":{"line":184,"column":8},"end":{"line":184,"column":27}},"105":{"start":{"line":187,"column":4},"end":{"line":187,"column":26}}},"branchMap":{"1":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":30},"end":{"line":43,"column":63}},{"start":{"line":43,"column":66},"end":{"line":43,"column":71}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":17},"end":{"line":44,"column":31}},{"start":{"line":44,"column":35},"end":{"line":44,"column":40}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":37}},{"start":{"line":63,"column":41},"end":{"line":63,"column":70}}]},"5":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"6":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":28}},{"start":{"line":70,"column":32},"end":{"line":70,"column":45}}]},"7":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"8":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":31}},{"start":{"line":75,"column":35},"end":{"line":75,"column":49}},{"start":{"line":75,"column":53},"end":{"line":75,"column":73}}]},"9":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":25},"end":{"line":77,"column":40}},{"start":{"line":77,"column":44},"end":{"line":77,"column":56}}]},"10":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":12}},{"start":{"line":85,"column":12},"end":{"line":85,"column":12}}]},"11":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":16},"end":{"line":86,"column":16}},{"start":{"line":86,"column":16},"end":{"line":86,"column":16}}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":23},"end":{"line":92,"column":23}},{"start":{"line":92,"column":23},"end":{"line":92,"column":23}}]},"13":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"14":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"15":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":17},"end":{"line":116,"column":31}},{"start":{"line":116,"column":35},"end":{"line":116,"column":39}}]},"16":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":12},"end":{"line":133,"column":12}},{"start":{"line":133,"column":12},"end":{"line":133,"column":12}}]},"17":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"18":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":27},"end":{"line":140,"column":45}},{"start":{"line":140,"column":49},"end":{"line":140,"column":50}}]},"19":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":8}},{"start":{"line":164,"column":8},"end":{"line":164,"column":8}}]},"20":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":15},"end":{"line":169,"column":19}},{"start":{"line":169,"column":23},"end":{"line":169,"column":33}}]},"21":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"22":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"23":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":177,"column":8}},{"start":{"line":177,"column":8},"end":{"line":177,"column":8}}]},"24":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":15},"end":{"line":179,"column":15}},{"start":{"line":179,"column":15},"end":{"line":179,"column":15}}]}},"code":["var __key = require(\"./../internal/key\");","var __ref = require(\"./../internal/ref\");","var __prefix = require(\"./../internal/prefix\");","var __parent = require(\"./../internal/parent\");","var __context = require(\"./../internal/context\");","var __version = require(\"./../internal/version\");","var __refIndex = require(\"./../internal/ref-index\");","var __refsLength = require(\"./../internal/refs-length\");","","var $ref = require(\"./../types/ref\");","","var getBoundValue = require(\"./../get/getBoundValue\");","","var promote = require(\"./../lru/promote\");","var getSize = require(\"./../support/getSize\");","var hasOwn = require(\"./../support/hasOwn\");","var isObject = require(\"./../support/isObject\");","var isExpired = require(\"./../support/isExpired\");","var isFunction = require(\"./../support/isFunction\");","var isPrimitive = require(\"./../support/isPrimitive\");","var expireNode = require(\"./../support/expireNode\");","var incrementVersion = require(\"./../support/incrementVersion\");","var updateNodeAncestors = require(\"./../support/updateNodeAncestors\");","var removeNodeAndDescendants = require(\"./../support/removeNodeAndDescendants\");","","/**"," * Sets a list of PathMaps into a JSON Graph."," * @function"," * @param {Object} model - the Model for which to insert the PathMaps."," * @param {Array.<PathMapEnvelope>} pathMapEnvelopes - the a list of @PathMapEnvelopes to set."," */","","module.exports = function invalidatePathMaps(model, pathMapEnvelopes) {","","    var modelRoot = model._root;","    var lru = modelRoot;","    var expired = modelRoot.expired;","    var version = incrementVersion();","    var comparator = modelRoot._comparator;","    var errorSelector = modelRoot._errorSelector;","    var bound = model._path;","    var cache = modelRoot.cache;","    var node = bound.length ? getBoundValue(model, bound).value : cache;","    var parent = node[__parent] || cache;","    var initialVersion = cache[__version];","","    var pathMapIndex = -1;","    var pathMapCount = pathMapEnvelopes.length;","","    while (++pathMapIndex < pathMapCount) {","","        var pathMapEnvelope = pathMapEnvelopes[pathMapIndex];","","        invalidatePathMap(","            pathMapEnvelope.json, 0, cache, parent, node,","            version, expired, lru, comparator, errorSelector","        );","    }","","    var newVersion = cache[__version];","    var rootChangeHandler = modelRoot.onChange;","","    if (isFunction(rootChangeHandler) && initialVersion !== newVersion) {","        rootChangeHandler();","    }","};","","function invalidatePathMap(pathMap, depth, root, parent, node, version, expired, lru, comparator, errorSelector) {","","    if (isPrimitive(pathMap) || pathMap.$type) {","        return;","    }","","    for (var key in pathMap) {","        if (key[0] !== __prefix && key[0] !== \"$\" && hasOwn(pathMap, key)) {","            var child = pathMap[key];","            var branch = isObject(child) && !child.$type;","            var results = invalidateNode(","                root, parent, node,","                key, child, branch, false,","                version, expired, lru, comparator, errorSelector","            );","            var nextNode = results[0];","            var nextParent = results[1];","            if (nextNode) {","                if (branch) {","                    invalidatePathMap(","                        child, depth + 1,","                        root, nextParent, nextNode,","                        version, expired, lru, comparator, errorSelector","                    );","                } else if (removeNodeAndDescendants(nextNode, nextParent, key, lru)) {","                    updateNodeAncestors(nextParent, getSize(nextNode), lru, version);","                }","            }","        }","    }","}","","function invalidateReference(value, root, node, version, expired, lru, comparator, errorSelector) {","","    if (isExpired(node)) {","        expireNode(node, expired, lru);","        return [undefined, root];","    }","","    promote(lru, node);","","    var container = node;","    var reference = node.value;","    var parent = root;","","    node = node[__context];","","    if (node != null) {","        parent = node[__parent] || root;","    } else {","","        var index = 0;","        var count = reference.length - 1;","","        parent = node = root;","","        do {","            var key = reference[index];","            var branch = index < count;","            var results = invalidateNode(","                root, parent, node,","                key, value, branch, true,","                version, expired, lru, comparator, errorSelector","            );","            node = results[0];","            if (isPrimitive(node)) {","                return results;","            }","            parent = results[1];","        } while (index++ < count);","","        if (container[__context] !== node) {","            var backRefs = node[__refsLength] || 0;","            node[__refsLength] = backRefs + 1;","            node[__ref + backRefs] = container;","            container[__context] = node;","            container[__refIndex] = backRefs;","        }","    }","","    return [node, parent];","}","","function invalidateNode(","    root, parent, node,","    key, value, branch, reference,","    version, expired, lru, comparator, errorSelector) {","","    var type = node.$type;","","    while (type === $ref) {","","        var results = invalidateReference(value, root, node, version, expired, lru, comparator, errorSelector);","","        node = results[0];","","        if (isPrimitive(node)) {","            return results;","        }","","        parent = results[1];","        type = node && node.$type;","    }","","    if (type !== void 0) {","        return [node, parent];","    }","","    if (key == null) {","        if (branch) {","            throw new Error(\"`null` is not allowed in branch key positions.\");","        } else if (node) {","            key = node[__key];","        }","    } else {","        parent = node;","        node = parent[key];","    }","","    return [node, parent];","}",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"10":1,"12":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"33":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"50":0,"52":0,"54":0,"60":0,"61":0,"63":0,"64":0,"68":1,"70":0,"71":0,"74":0,"75":0,"76":0,"77":0,"78":0,"83":0,"84":0,"85":0,"86":0,"87":0,"92":0,"93":0,"100":1,"102":0,"103":0,"104":0,"107":0,"109":0,"110":0,"111":0,"113":0,"115":0,"116":0,"119":0,"120":0,"122":0,"124":0,"125":0,"126":0,"127":0,"132":0,"133":0,"134":0,"136":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"148":0,"151":1,"156":0,"158":0,"160":0,"162":0,"164":0,"165":0,"168":0,"169":0,"172":0,"173":0,"176":0,"177":0,"178":0,"179":0,"180":0,"183":0,"184":0,"187":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/HttpDataSource.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/HttpDataSource.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["","/**"," * A HttpDataSource object is a {@link DataSource} can be used to retrieve data from a remote JSONGraph object using the browser's XMLHttpRequest."," * @constructor HttpDataSource"," * @augments DataSource"," * @param jsonGraphUrl the URL of the JSONGraph model."," * @example","var model = new falcor.Model({source: new falcor.HttpDataSource(\"http://netflix.com/user.json\")});","var movieNames = model.get('genreLists[0...10][0...10].name').toPathValues();"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/SHORTED.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/get/SHORTED.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":19}}},"branchMap":{},"code":["/**"," * The SHORTED constant.  Since what is returned from a"," * cache position lookop will always be an object, any non"," * object will do fine for a constant."," * @private"," */","module.exports = 1;",""],"l":{"7":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/offset.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/internal/offset.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":60}}},"branchMap":{},"code":["module.exports = require(\"./../internal/prefix\") + \"offset\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/BatchedRequest.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/request/BatchedRequest.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"BatchedRequest","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}}},"2":{"name":"getSourceObservable","line":16,"loc":{"start":{"line":16,"column":47},"end":{"line":16,"column":78}}},"3":{"name":"subscribe","line":26,"loc":{"start":{"line":26,"column":49},"end":{"line":26,"column":78}}},"4":{"name":"dispose","line":31,"loc":{"start":{"line":31,"column":15},"end":{"line":31,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":64}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":31}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":46}},"5":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":23}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":60}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":54}},"10":{"start":{"line":16,"column":0},"end":{"line":42,"column":2}},"11":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"12":{"start":{"line":19,"column":8},"end":{"line":19,"column":41}},"13":{"start":{"line":22,"column":4},"end":{"line":22,"column":18}},"14":{"start":{"line":23,"column":4},"end":{"line":23,"column":22}},"15":{"start":{"line":24,"column":4},"end":{"line":24,"column":71}},"16":{"start":{"line":25,"column":4},"end":{"line":25,"column":26}},"17":{"start":{"line":26,"column":4},"end":{"line":37,"column":7}},"18":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"19":{"start":{"line":28,"column":12},"end":{"line":28,"column":51}},"20":{"start":{"line":30,"column":8},"end":{"line":30,"column":55}},"21":{"start":{"line":31,"column":8},"end":{"line":36,"column":10}},"22":{"start":{"line":32,"column":12},"end":{"line":32,"column":35}},"23":{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},"24":{"start":{"line":34,"column":16},"end":{"line":34,"column":37}},"25":{"start":{"line":39,"column":4},"end":{"line":39,"column":53}},"26":{"start":{"line":41,"column":4},"end":{"line":41,"column":32}},"27":{"start":{"line":44,"column":0},"end":{"line":44,"column":32}}},"branchMap":{"1":{"line":1,"type":"binary-expr","locations":[{"start":{"line":1,"column":9},"end":{"line":1,"column":30}},{"start":{"line":1,"column":34},"end":{"line":1,"column":63}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"4":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":12},"end":{"line":27,"column":25}},{"start":{"line":27,"column":29},"end":{"line":27,"column":40}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":33,"column":12}},{"start":{"line":33,"column":12},"end":{"line":33,"column":12}}]}},"code":["var Rx = require(\"rx/dist/rx\") && require(\"rx/dist/rx.binding\");","var Observable = Rx.Observable;","var immediateScheduler = Rx.Scheduler.immediate;","","var Request = require(\"./../request/Request\");","","function BatchedRequest() {","    Request.call(this);","}","","BatchedRequest.create = Request.create;","","BatchedRequest.prototype = Object.create(Request.prototype);","BatchedRequest.prototype.constructor = BatchedRequest;","","BatchedRequest.prototype.getSourceObservable = function getSourceObservable() {","","    if (this.refCountedObservable) {","        return this.refCountedObservable;","    }","","    var count = 0;","    var source = this;","    var subject = new Rx.ReplaySubject(null, null, immediateScheduler);","    var connection = null;","    var refCountedObservable = Observable.create(function subscribe(observer) {","        if (++count === 1 && !connection) {","            connection = source.subscribe(subject);","        }","        var subscription = subject.subscribe(observer);","        return function dispose() {","            subscription.dispose();","            if (--count === 0) {","                connection.dispose();","            }","        };","    });","","    this.refCountedObservable = refCountedObservable;","","    return refCountedObservable;","};","","module.exports = BatchedRequest;",""],"l":{"1":1,"2":1,"3":1,"5":1,"7":1,"8":0,"11":1,"13":1,"14":1,"16":1,"18":0,"19":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"39":0,"41":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/updateProgressively.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/response/updateProgressively.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"updateProgressively","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":48}}},"2":{"name":"subscribeProgressively","line":5,"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":76}}},"3":{"name":"onError","line":17,"loc":{"start":{"line":17,"column":8},"end":{"line":17,"column":28}}},"4":{"name":"onCompleted","line":21,"loc":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}}},"5":{"name":"onPathValueNext","line":25,"loc":{"start":{"line":25,"column":8},"end":{"line":25,"column":44}}},"6":{"name":"onAggregateNext","line":29,"loc":{"start":{"line":29,"column":8},"end":{"line":29,"column":44}}},"7":{"name":"pluckJSON","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":54}},"2":{"start":{"line":3,"column":0},"end":{"line":58,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":22}},"4":{"start":{"line":5,"column":4},"end":{"line":57,"column":7}},"5":{"start":{"line":7,"column":8},"end":{"line":7,"column":41}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":43}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":51}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":84}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":35}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":43}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":42}},"12":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":42}},"14":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"15":{"start":{"line":22,"column":12},"end":{"line":22,"column":43}},"16":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"17":{"start":{"line":26,"column":12},"end":{"line":26,"column":49}},"18":{"start":{"line":29,"column":8},"end":{"line":56,"column":9}},"19":{"start":{"line":31,"column":12},"end":{"line":31,"column":46}},"20":{"start":{"line":32,"column":12},"end":{"line":32,"column":46}},"21":{"start":{"line":33,"column":12},"end":{"line":33,"column":52}},"22":{"start":{"line":34,"column":12},"end":{"line":34,"column":56}},"23":{"start":{"line":36,"column":12},"end":{"line":45,"column":13}},"24":{"start":{"line":37,"column":16},"end":{"line":37,"column":44}},"25":{"start":{"line":38,"column":16},"end":{"line":38,"column":46}},"26":{"start":{"line":39,"column":16},"end":{"line":39,"column":50}},"27":{"start":{"line":40,"column":16},"end":{"line":44,"column":17}},"28":{"start":{"line":41,"column":20},"end":{"line":41,"column":93}},"29":{"start":{"line":43,"column":20},"end":{"line":43,"column":58}},"30":{"start":{"line":47,"column":12},"end":{"line":55,"column":13}},"31":{"start":{"line":48,"column":16},"end":{"line":52,"column":17}},"32":{"start":{"line":49,"column":20},"end":{"line":49,"column":46}},"33":{"start":{"line":51,"column":20},"end":{"line":51,"column":34}},"34":{"start":{"line":54,"column":16},"end":{"line":54,"column":35}},"35":{"start":{"line":60,"column":0},"end":{"line":62,"column":1}},"36":{"start":{"line":61,"column":4},"end":{"line":61,"column":20}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":50},"end":{"line":11,"column":65}},{"start":{"line":11,"column":68},"end":{"line":11,"column":83}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":36,"column":12}},{"start":{"line":36,"column":12},"end":{"line":36,"column":12}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":24}},{"start":{"line":36,"column":29},"end":{"line":36,"column":40}},{"start":{"line":36,"column":44},"end":{"line":36,"column":57}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":16},"end":{"line":40,"column":16}},{"start":{"line":40,"column":16},"end":{"line":40,"column":16}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":12}},{"start":{"line":47,"column":12},"end":{"line":47,"column":12}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":16}},{"start":{"line":48,"column":16},"end":{"line":48,"column":16}}]}},"code":["var isFunction = require(\"falcor/support/isFunction\");","","module.exports = function updateProgressively() {","    var source = this;","    return new source.constructor(function subscribeProgressively(observer) {","","        var destOnNext = observer.onNext;","        var destOnError = observer.onError;","        var destOnCompleted = observer.onCompleted;","","        observer.onNext = observer.asPathValues ? onPathValueNext : onAggregateNext;","        observer.onError = onError;","        observer.onCompleted = onCompleted;","","        return source.subscribe(observer);","","        function onError(e) {","            destOnError.call(observer, e);","        }","","        function onCompleted() {","            destOnCompleted.call(observer);","        }","","        function onPathValueNext(pathValue) {","            destOnNext.call(observer, pathValue);","        }","","        function onAggregateNext(observer2) {","","            var hasValue = observer2.hasValue;","            var hasError = observer2.hasError;","            var isCompleted = observer2.isCompleted;","            var isProgressive = observer2.isProgressive;","","            if (hasValue && (isCompleted || isProgressive)) {","                var model = observer2.model;","                var values = observer2.values;","                var selector = observer2.selector;","                if (isFunction(selector)) {","                    destOnNext.call(observer2, selector.apply(model, values.map(pluckJSON)));","                } else {","                    destOnNext.call(observer2, values[0]);","                }","            }","","            if (isCompleted) {","                if (hasError) {","                    onError(observer2.errors);","                } else {","                    onCompleted();","                }","            } else {","                onError(observer2);","            }","        }","    });","};","","function pluckJSON(env) {","    return env.json;","}",""],"l":{"1":2,"3":0,"4":0,"5":0,"7":0,"8":0,"9":0,"11":0,"12":0,"13":0,"15":0,"17":1,"18":0,"21":1,"22":0,"25":1,"26":0,"29":1,"31":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"43":0,"47":0,"48":0,"49":0,"51":0,"54":0,"60":1,"61":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-append.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-append.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"arrayAppend","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":10,"column":2}},"2":{"start":{"line":2,"column":4},"end":{"line":2,"column":15}},"3":{"start":{"line":3,"column":4},"end":{"line":3,"column":25}},"4":{"start":{"line":4,"column":4},"end":{"line":4,"column":34}},"5":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"6":{"start":{"line":6,"column":8},"end":{"line":6,"column":29}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":22}},"8":{"start":{"line":9,"column":4},"end":{"line":9,"column":18}}},"branchMap":{},"code":["module.exports = function arrayAppend(array, value) {","    var i = -1;","    var n = array.length;","    var array2 = new Array(n + 1);","    while (++i < n) {","        array2[i] = array[i];","    }","    array2[i] = value;","    return array2;","};",""],"l":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"8":0,"9":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-concat.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/array-concat.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"arrayConcat","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":2}},"2":{"start":{"line":2,"column":4},"end":{"line":4,"column":5}},"3":{"start":{"line":3,"column":8},"end":{"line":3,"column":21}},"4":{"start":{"line":5,"column":4},"end":{"line":6,"column":15}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":25}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":25}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":34}},"8":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":29}},"10":{"start":{"line":13,"column":4},"end":{"line":15,"column":5}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":31}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":18}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":4},"end":{"line":2,"column":4}},{"start":{"line":2,"column":4},"end":{"line":2,"column":4}}]}},"code":["module.exports = function arrayConcat(array, other) {","    if (!array) {","        return other;","    }","    var i = -1,","        j = -1;","    var n = array.length;","    var m = other.length;","    var array2 = new Array(n + m);","    while (++i < n) {","        array2[i] = array[i];","    }","    while (++j < m) {","        array2[i++] = other[j];","    }","    return array2;","};",""],"l":{"1":1,"2":0,"3":0,"5":0,"7":0,"8":0,"9":0,"10":0,"11":0,"13":0,"14":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/identity.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/identity.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"identity","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":2}},"2":{"start":{"line":2,"column":4},"end":{"line":2,"column":13}}},"branchMap":{},"code":["module.exports = function identity(x) {","    return x;","};",""],"l":{"1":1,"2":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isPathInvalidation.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/support/isPathInvalidation.js","s":{"1":1,"2":1,"3":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isPathInvalidation","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":48}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":79}}},"branchMap":{"1":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":11},"end":{"line":4,"column":30}},{"start":{"line":4,"column":35},"end":{"line":4,"column":77}}]}},"code":["var isObject = require(\"./../support/isObject\");","","module.exports = function isPathInvalidation(pathValue) {","    return isObject(pathValue) && (typeof pathValue.invalidated === \"boolean\");","};",""],"l":{"1":1,"3":1,"4":0}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Atom.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Atom.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * An atom allows you to treat a JSON value as atomic regardless of its type, ensuring that a JSON object or array is always returned in its entirety. The JSON value must be treated as immutable. Atoms can also be used to associate metadata with a JSON value. This metadata can be used to influence the way values are handled."," * @typedef {Object} Atom"," * @property {!String} $type - the $type must be \"atom\""," * @property {!*} value - the immutable JSON value"," * @property {number} [$expires] - the time to expire in milliseconds"," *  - positive number: expires in milliseconds since epoch"," *  - negative number: expires relative to when the Atom is merged into the JSONGraph"," *  - number 1: never expires"," * @example"," // Atom with number value, expiring in 2 seconds"," {","    $type: \"atom\",","    value: 5","    $expires: -2000"," }"," // Atom with Object value that never expires"," {","    $type: \"atom\",","    value: {","        foo: 5,","        bar: \"baz\"","    },","    $expires: 1"," }"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/DataSource.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/DataSource.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * A DataSource is an interface which can be implemented to expose JSON Graph information to a Model. Every DataSource is associated with a single JSON Graph object. Models execute JSON Graph operations (get, set, and call) to retrieve values from the DataSource’s JSON Graph object. DataSources may retrieve JSON Graph information from anywhere, including device memory, a remote machine, or even a lazily-run computation."," * @constructor DataSource"," * @abstract","*/","","","/**"," * The get method retrieves values from the DataSource's associated JSONGraph object."," * @name get"," * @function"," * @arg {Array.<PathSet>} pathSets the path(s) to retrieve"," * @returns {Observable.<JSONGraphEnvelope>} jsonGraphEnvelope the response returned from the server."," * @memberof DataSource.prototype","*/","","/**"," * The set method accepts values to set in the DataSource's associated JSONGraph object."," * @name set"," * @function"," * @arg {JSONGraphEnvelope} jsonGraphEnvelope a JSONGraphEnvelope containing values to set in the DataSource's associated JSONGraph object."," * @returns {Observable.<JSONGraphEnvelope>} a JSONGraphEnvelope containing all of the requested values after the set operation."," * @memberof DataSource.prototype","*/","","/**"," * Invokes a function in the DataSource's JSONGraph object."," * @name call"," * @function"," * @arg {Path} functionPath the path to the function to invoke"," * @arg {Array.<Object>} args the arguments to pass to the function"," * @arg {Array.<PathSet>} refSuffixes paths to retrieve from the targets of JSONGraph References in the function's response."," * @arg {Array.<PathSet>} thisPaths paths to retrieve from function's this object after successful function execution"," * @returns {Observable.<JSONGraphEnvelope>} jsonGraphEnvelope the response returned from the server."," * @memberof DataSource.prototype","*/",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/JSONEnvelope.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/JSONEnvelope.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * An envelope that wraps a JSON object."," * @typedef {Object} JSONEnvelope"," * @property {JSON} json - a JSON object"," * @example"," var model = new falcor.Model();"," model.set({","    json: {","      name: \"Steve\",","      surname: \"McGuire\"","    }"," }).then(function(jsonEnvelope) {","    console.log(jsonEnvelope);"," });"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/JSONGraphEnvelope.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/JSONGraphEnvelope.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * An envelope that wraps a {@link JSONGraph} fragment."," * @typedef {Object} JSONGraphEnvelope"," * @property {JSONGraph} jsonGraph - a {@link JSONGraph} fragment"," * @property {?Array.<PathSet>} paths - the paths to the values in the {@link JSONGraph} fragment"," * @property {?Array.<PathSet>} invalidated - the paths to invalidate in the {@link Model}"," * @example","var $ref = falcor.ref;","var model = new falcor.Model();","model.set({","  paths: [","    [\"todos\", [12,15], [\"name\",\"done\"]]","  ],","  jsonGraph: {","    todos: [","      $ref(\"todosById[12]\"),","      $ref(\"todosById[15]\")","    ],","    todosById: {","      12: {","        name: \"go to the ATM\",","        done: false","      },","      15: {","        name: \"buy milk\",","        done: false","      }","    }","  },","}).then(function(jsonEnvelope) {","  console.log(JSON.stringify(jsonEnvelope, null, 4));","});","","// prints...","// {","//   json: {","//     todos: {","//       0: {","//         name: \"go to the ATM\",","//         done: false","//       },","//       1: {","//         name: \"buy milk\",","//         done: false","//       }","//     }","//   }","// }"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/JSONGraph.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/JSONGraph.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * JavaScript Object Notation Graph (JSONGraph) is a notation for expressing graphs in JSON. For more information, see the [JSONGraph Guide]{@link http://netflix.github.io/falcor/documentation/jsongraph.html}."," * @typedef {Object} JSONGraph"," * @example"," var $ref = falcor.ref;"," // JSONGraph model modeling a list of film genres, each of which contains the same title."," {","    // list of user's genres, modeled as a map with ordinal keys","    \"genreLists\": {","        \"0\": $ref('genresById[123]'),","        \"1\": $ref('genresById[522]'),","        \"length\": 2","    },","    // map of all genres, organized by ID","    \"genresById\": {","        // genre list modeled as map with ordinal keys","        \"123\": {","            \"name\": \"Drama\",","            \"0\": $ref('titlesById[23]'),","            \"1\": $ref('titlesById[99]'),","            \"length\": 2","        },","        // genre list modeled as map with ordinal keys","        \"522\": {","            \"name\": \"Comedy\",","            \"0\": $ref('titlesById[23]'),","            \"1\": $ref('titlesById[44]'),","            \"length\": 2","        }","    },","    // map of all titles, organized by ID","    \"titlesById\": {","       \"99\": {","            \"name\": \"House of Cards\",","            \"rating\": 5","        },","        \"23\": {","            \"name\": \"Orange is the New Black\",","            \"rating\": 5","        },","        \"44\": {","            \"name\": \"Arrested Development\",","            \"rating\": 5","        }","    }","}","*/",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Key.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Key.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * A part of a {@link Path} that can be any JSON value type. All types are coerced to string, except null. This makes the number 1 and the string \"1\" equivalent."," * @typedef {?(string|number|boolean|null)} Key"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/KeySet.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/KeySet.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * A part of a {@link PathSet} that can be either a {@link Key}, {@link Range}, or Array of either."," * @typedef {(Key|Range|Array.<(Key|Range)>)} KeySet"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Observable.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Observable.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["","/**"," * @constructor Observable"," */",""," /**"," * The forEach method is a synonym for {@link Observable.prototype.subscribe} and triggers the execution of the Observable, causing the values within to be pushed to a callback. An Observable is like a pipe of water that is closed. When forEach is called, we open the valve and the values within are pushed at us.  These values can be received using either callbacks or an {@link Observer} object."," * @name forEach"," * @memberof Observable.prototype"," * @function"," * @arg {?Observable~onNextCallback} onNext a callback that accepts the next value in the stream of values"," * @arg {?Observable~onErrorCallback} onError a callback that accepts an error that occurred while evaluating the operation underlying the {@link Observable} stream"," * @arg {?Observable~onCompletedCallback} onCompleted a callback that is invoked when the {@link Observable} stream has ended, and the {@link Observable~onNextCallback} will not receive any more values"," * @return {Subscription}"," */",""," /**"," * The subscribe method is a synonym for {@link Observable.prototype.forEach} and triggers the execution of the Observable, causing the values within to be pushed to a callback. An Observable is like a pipe of water that is closed. When forEach is called, we open the valve and the values within are pushed at us.  These values can be received using either callbacks or an {@link Observer} object."," * @name forEach"," * @memberof Observable.prototype"," * @function"," * @arg {?Observable~onNextCallback} onNext a callback that accepts the next value in the stream of values"," * @arg {?Observable~onErrorCallback} onError a callback that accepts an error that occurred while evaluating the operation underlying the {@link Observable} stream"," * @arg {?Observable~onCompletedCallback} onCompleted a callback that is invoked when the {@link Observable} stream has ended, and the {@link Observable~onNextCallback} will not receive any more values"," * @return {Subscription}"," */","","/**"," * This callback accepts a value that was emitted while evaluating the operation underlying the {@link Observable} stream."," * @callback Observable~onNextCallback"," * @param {Object} value the value that was emitted while evaluating the operation underlying the {@link Observable}"," */","","/**"," * This callback accepts an error that occurred while evaluating the operation underlying the {@link Observable} stream. When this callback is invoked, the {@link Observable} stream ends and no more values will be received by the {@link Observable~onNextCallback}."," * @callback Observable~onErrorCallback"," * @param {Error} error the error that occurred while evaluating the operation underlying the {@link Observable}"," */",""," /**"," * This callback is invoked when the {@link Observable} stream ends. When this callback is invoked the {@link Observable} stream has ended, and therefore the {@link Observable~onNextCallback} will not receive any more values."," * @callback Observable~onCompletedCallback"," */","","/**"," * @constructor Subscription"," * @see {@link https://github.com/Reactive-Extensions/RxJS/tree/master/doc}"," */","","/**"," * When this method is called on the Subscription, the Observable that created the Subscription will stop sending values to the callbacks passed when the Subscription was created."," * @name dispose"," * @method"," * @memberof Subscription.prototype"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Path.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Path.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * An ordered list of {@link Key}s that point to a value in a {@link JSONGraph}."," * @typedef {Array.<Key>} Path"," * @example"," // Points to the name of product 1234"," [\"productsById\", \"1234\", \"name\"]"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/PathSet.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/PathSet.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * An ordered list of {@link KeySet}s that point to location(s) in the {@link JSONGraph}. It enables pointing to multiple locations in a more terse format than a set of {@link Path}s and is generally more efficient to evaluate."," * @typedef {Array.<KeySet>} PathSet"," * @example"," // Points to the name and price of products 1234 and 5678"," [\"productsById\", [\"1234\", \"5678\"], [\"name\", \"price\"]]"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/PathValue.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/PathValue.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * A wrapper around a path and its value."," * @typedef {Object} PathValue"," * @property {PathSet} path - the path to a location in the {@link JSONGraph}"," * @property {?*} value - the value of that path"," * @example"," {","\tpath: [\"productsById\", \"1234\", \"name\"],","\tvalue: \"ABC\""," }"," */",""],"l":{}},"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Range.js":{"path":"/home/travis/build/npmtest/node-npmtest-falcor/node_modules/falcor/lib/typedefs/Range.js","s":{},"b":{},"f":{},"fnMap":{},"statementMap":{},"branchMap":{},"code":["/**"," * Describe a range of integers. Must contain either a \"to\" or \"length\" property."," * @typedef {Object} Range"," * @property {number} [from=0] - the lower bound of the range (inclusive)"," * @property {?number} to - the upper bound of the range (inclusive). Must be >= to the \"from\" value"," * @property {?number} length - the length of the range. Must be >= 0"," * @example"," // The following range specifies the numbers 0, 1, and 2"," {from: 0, to: 2}"," // The following range specifies the numbers 1 and 2"," {from: 1, length: 2}"," */",""],"l":{}}}